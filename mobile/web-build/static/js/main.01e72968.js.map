{"version":3,"file":"static/js/main.01e72968.js","mappings":"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","sources":["node_modules/moment/locale|sync|/^/.*$","config.js","api/client.js","context/AuthContext.js","screens/auth/LoginScreen.js","screens/auth/RegisterScreen.js","screens/customer/HomeScreen.js","screens/customer/ServicesScreen.js","screens/customer/BookingScreen.js","screens/customer/AppointmentsScreen.js","screens/customer/ProfileScreen.js","screens/barber/BarberAppointmentsScreen.js","screens/barber/BarberDashboardScreen.js","screens/admin/DashboardScreen.js","screens/admin/SalonDetailsScreen.js","screens/admin/SalonStaffScreen.js","screens/manager/DashboardScreen.js","screens/manager/SalonDashboardScreen.js","components/DisplaySettings.js","theme.js","context/ThemeContext.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["var map = {\n\t\"./af\": 17582,\n\t\"./af.js\": 17582,\n\t\"./ar\": 93042,\n\t\"./ar-dz\": 54265,\n\t\"./ar-dz.js\": 54265,\n\t\"./ar-kw\": 92553,\n\t\"./ar-kw.js\": 92553,\n\t\"./ar-ly\": 85352,\n\t\"./ar-ly.js\": 85352,\n\t\"./ar-ma\": 67097,\n\t\"./ar-ma.js\": 67097,\n\t\"./ar-ps\": 76150,\n\t\"./ar-ps.js\": 76150,\n\t\"./ar-sa\": 84427,\n\t\"./ar-sa.js\": 84427,\n\t\"./ar-tn\": 7221,\n\t\"./ar-tn.js\": 7221,\n\t\"./ar.js\": 93042,\n\t\"./az\": 60458,\n\t\"./az.js\": 60458,\n\t\"./be\": 17596,\n\t\"./be.js\": 17596,\n\t\"./bg\": 93830,\n\t\"./bg.js\": 93830,\n\t\"./bm\": 27044,\n\t\"./bm.js\": 27044,\n\t\"./bn\": 58573,\n\t\"./bn-bd\": 13296,\n\t\"./bn-bd.js\": 13296,\n\t\"./bn.js\": 58573,\n\t\"./bo\": 25614,\n\t\"./bo.js\": 25614,\n\t\"./br\": 84422,\n\t\"./br.js\": 84422,\n\t\"./bs\": 91786,\n\t\"./bs.js\": 91786,\n\t\"./ca\": 75833,\n\t\"./ca.js\": 75833,\n\t\"./cs\": 52711,\n\t\"./cs.js\": 52711,\n\t\"./cv\": 71036,\n\t\"./cv.js\": 71036,\n\t\"./cy\": 84977,\n\t\"./cy.js\": 84977,\n\t\"./da\": 8770,\n\t\"./da.js\": 8770,\n\t\"./de\": 67342,\n\t\"./de-at\": 81566,\n\t\"./de-at.js\": 81566,\n\t\"./de-ch\": 87544,\n\t\"./de-ch.js\": 87544,\n\t\"./de.js\": 67342,\n\t\"./dv\": 82875,\n\t\"./dv.js\": 82875,\n\t\"./el\": 78536,\n\t\"./el.js\": 78536,\n\t\"./en-au\": 38617,\n\t\"./en-au.js\": 38617,\n\t\"./en-ca\": 79227,\n\t\"./en-ca.js\": 79227,\n\t\"./en-gb\": 59754,\n\t\"./en-gb.js\": 59754,\n\t\"./en-ie\": 37217,\n\t\"./en-ie.js\": 37217,\n\t\"./en-il\": 85418,\n\t\"./en-il.js\": 85418,\n\t\"./en-in\": 80800,\n\t\"./en-in.js\": 80800,\n\t\"./en-nz\": 67299,\n\t\"./en-nz.js\": 67299,\n\t\"./en-sg\": 76305,\n\t\"./en-sg.js\": 76305,\n\t\"./eo\": 8673,\n\t\"./eo.js\": 8673,\n\t\"./es\": 71301,\n\t\"./es-do\": 3187,\n\t\"./es-do.js\": 3187,\n\t\"./es-mx\": 48223,\n\t\"./es-mx.js\": 48223,\n\t\"./es-us\": 37634,\n\t\"./es-us.js\": 37634,\n\t\"./es.js\": 71301,\n\t\"./et\": 4976,\n\t\"./et.js\": 4976,\n\t\"./eu\": 11847,\n\t\"./eu.js\": 11847,\n\t\"./fa\": 74372,\n\t\"./fa.js\": 74372,\n\t\"./fi\": 41628,\n\t\"./fi.js\": 41628,\n\t\"./fil\": 56802,\n\t\"./fil.js\": 56802,\n\t\"./fo\": 42874,\n\t\"./fo.js\": 42874,\n\t\"./fr\": 9853,\n\t\"./fr-ca\": 87170,\n\t\"./fr-ca.js\": 87170,\n\t\"./fr-ch\": 22825,\n\t\"./fr-ch.js\": 22825,\n\t\"./fr.js\": 9853,\n\t\"./fy\": 68876,\n\t\"./fy.js\": 68876,\n\t\"./ga\": 93533,\n\t\"./ga.js\": 93533,\n\t\"./gd\": 82770,\n\t\"./gd.js\": 82770,\n\t\"./gl\": 98602,\n\t\"./gl.js\": 98602,\n\t\"./gom-deva\": 63059,\n\t\"./gom-deva.js\": 63059,\n\t\"./gom-latn\": 48212,\n\t\"./gom-latn.js\": 48212,\n\t\"./gu\": 23409,\n\t\"./gu.js\": 23409,\n\t\"./he\": 17210,\n\t\"./he.js\": 17210,\n\t\"./hi\": 4750,\n\t\"./hi.js\": 4750,\n\t\"./hr\": 51315,\n\t\"./hr.js\": 51315,\n\t\"./hu\": 47626,\n\t\"./hu.js\": 47626,\n\t\"./hy-am\": 91317,\n\t\"./hy-am.js\": 91317,\n\t\"./id\": 26892,\n\t\"./id.js\": 26892,\n\t\"./is\": 97577,\n\t\"./is.js\": 97577,\n\t\"./it\": 57628,\n\t\"./it-ch\": 3046,\n\t\"./it-ch.js\": 3046,\n\t\"./it.js\": 57628,\n\t\"./ja\": 92504,\n\t\"./ja.js\": 92504,\n\t\"./jv\": 25917,\n\t\"./jv.js\": 25917,\n\t\"./ka\": 64513,\n\t\"./ka.js\": 64513,\n\t\"./kk\": 94935,\n\t\"./kk.js\": 94935,\n\t\"./km\": 96661,\n\t\"./km.js\": 96661,\n\t\"./kn\": 89964,\n\t\"./kn.js\": 89964,\n\t\"./ko\": 98067,\n\t\"./ko.js\": 98067,\n\t\"./ku\": 61165,\n\t\"./ku-kmr\": 85158,\n\t\"./ku-kmr.js\": 85158,\n\t\"./ku.js\": 61165,\n\t\"./ky\": 11177,\n\t\"./ky.js\": 11177,\n\t\"./lb\": 2967,\n\t\"./lb.js\": 2967,\n\t\"./lo\": 81972,\n\t\"./lo.js\": 81972,\n\t\"./lt\": 58469,\n\t\"./lt.js\": 58469,\n\t\"./lv\": 33155,\n\t\"./lv.js\": 33155,\n\t\"./me\": 87935,\n\t\"./me.js\": 87935,\n\t\"./mi\": 74483,\n\t\"./mi.js\": 74483,\n\t\"./mk\": 32501,\n\t\"./mk.js\": 32501,\n\t\"./ml\": 73120,\n\t\"./ml.js\": 73120,\n\t\"./mn\": 20266,\n\t\"./mn.js\": 20266,\n\t\"./mr\": 19406,\n\t\"./mr.js\": 19406,\n\t\"./ms\": 80109,\n\t\"./ms-my\": 90864,\n\t\"./ms-my.js\": 90864,\n\t\"./ms.js\": 80109,\n\t\"./mt\": 22904,\n\t\"./mt.js\": 22904,\n\t\"./my\": 44067,\n\t\"./my.js\": 44067,\n\t\"./nb\": 21301,\n\t\"./nb.js\": 21301,\n\t\"./ne\": 81152,\n\t\"./ne.js\": 81152,\n\t\"./nl\": 76735,\n\t\"./nl-be\": 97761,\n\t\"./nl-be.js\": 97761,\n\t\"./nl.js\": 76735,\n\t\"./nn\": 37569,\n\t\"./nn.js\": 37569,\n\t\"./oc-lnc\": 20833,\n\t\"./oc-lnc.js\": 20833,\n\t\"./pa-in\": 3044,\n\t\"./pa-in.js\": 3044,\n\t\"./pl\": 34249,\n\t\"./pl.js\": 34249,\n\t\"./pt\": 87585,\n\t\"./pt-br\": 26826,\n\t\"./pt-br.js\": 26826,\n\t\"./pt.js\": 87585,\n\t\"./ro\": 62526,\n\t\"./ro.js\": 62526,\n\t\"./ru\": 62204,\n\t\"./ru.js\": 62204,\n\t\"./sd\": 43270,\n\t\"./sd.js\": 43270,\n\t\"./se\": 61541,\n\t\"./se.js\": 61541,\n\t\"./si\": 71921,\n\t\"./si.js\": 71921,\n\t\"./sk\": 49935,\n\t\"./sk.js\": 49935,\n\t\"./sl\": 46254,\n\t\"./sl.js\": 46254,\n\t\"./sq\": 59897,\n\t\"./sq.js\": 59897,\n\t\"./sr\": 42496,\n\t\"./sr-cyrl\": 11135,\n\t\"./sr-cyrl.js\": 11135,\n\t\"./sr.js\": 42496,\n\t\"./ss\": 32215,\n\t\"./ss.js\": 32215,\n\t\"./sv\": 84716,\n\t\"./sv.js\": 84716,\n\t\"./sw\": 50803,\n\t\"./sw.js\": 50803,\n\t\"./ta\": 31538,\n\t\"./ta.js\": 31538,\n\t\"./te\": 2302,\n\t\"./te.js\": 2302,\n\t\"./tet\": 25280,\n\t\"./tet.js\": 25280,\n\t\"./tg\": 14100,\n\t\"./tg.js\": 14100,\n\t\"./th\": 95385,\n\t\"./th.js\": 95385,\n\t\"./tk\": 736,\n\t\"./tk.js\": 736,\n\t\"./tl-ph\": 79726,\n\t\"./tl-ph.js\": 79726,\n\t\"./tlh\": 41873,\n\t\"./tlh.js\": 41873,\n\t\"./tr\": 36463,\n\t\"./tr.js\": 36463,\n\t\"./tzl\": 27491,\n\t\"./tzl.js\": 27491,\n\t\"./tzm\": 29500,\n\t\"./tzm-latn\": 80196,\n\t\"./tzm-latn.js\": 80196,\n\t\"./tzm.js\": 29500,\n\t\"./ug-cn\": 91287,\n\t\"./ug-cn.js\": 91287,\n\t\"./uk\": 35341,\n\t\"./uk.js\": 35341,\n\t\"./ur\": 36246,\n\t\"./ur.js\": 36246,\n\t\"./uz\": 55550,\n\t\"./uz-latn\": 77254,\n\t\"./uz-latn.js\": 77254,\n\t\"./uz.js\": 55550,\n\t\"./vi\": 78796,\n\t\"./vi.js\": 78796,\n\t\"./x-pseudo\": 22736,\n\t\"./x-pseudo.js\": 22736,\n\t\"./yo\": 28621,\n\t\"./yo.js\": 28621,\n\t\"./zh-cn\": 67601,\n\t\"./zh-cn.js\": 67601,\n\t\"./zh-hk\": 39053,\n\t\"./zh-hk.js\": 39053,\n\t\"./zh-mo\": 71248,\n\t\"./zh-mo.js\": 71248,\n\t\"./zh-tw\": 74725,\n\t\"./zh-tw.js\": 74725\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35358;","// Fichier de configuration pour l'application mobile\n// Ce fichier centralise toutes les configurations de l'application\n\n// Configuration des environnements\nconst ENV = {\n  development: {\n    API_URL: 'https://barb-kq5v.onrender.com/api', // Pour les émulateurs Android\n    API_URL_ALTERNATIVES: [\n      'http://localhost:5000/api',\n      'http://127.0.0.1:5000/api'\n    ],\n    DEBUG: true,\n    TIMEOUT: 10000, // 10 secondes\n    MAX_RETRIES: 3\n  },\n  staging: {\n    API_URL: 'https://barb-kq5v.onrender.com/api',\n    DEBUG: true,\n    TIMEOUT: 15000, // 15 secondes\n    MAX_RETRIES: 2\n  },\n  production: {\n    API_URL: 'https://barb-kq5v.onrender.com/api',\n    DEBUG: false,\n    TIMEOUT: 20000, // 20 secondes\n    MAX_RETRIES: 1\n  }\n};\n\n// Déterminer l'environnement actuel\n// Dans un vrai projet, cela pourrait être défini par une variable d'environnement\nconst currentEnv = process.env.NODE_ENV || 'development';\n\n// Exporter la configuration pour l'environnement actuel\nexport default ENV[currentEnv];\n","import axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport config from '../config';\n\n// API base URL configuration\n// Utiliser la configuration centralisée\nconst BASE_URLS = Array.isArray(config.API_URL) \n  ? config.API_URL \n  : [config.API_URL, ...(config.API_URL_ALTERNATIVES || [])];\n\n// Default to first URL initially\nconst BASE_URL = BASE_URLS[0];\n\n// Create axios instance with timeout and retry configuration\nconst apiClient = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: config.TIMEOUT || 10000, // Utiliser le timeout de la configuration\n  validateStatus: function (status) {\n    return status >= 200 && status < 500; // Handle only 5xx errors as errors\n  },\n});\n\n// Retry configuration\nconst MAX_RETRIES = config.MAX_RETRIES || 3;\nconst RETRY_DELAY = 1000; // 1 second\n\n// Modified retry logic to try different base URLs\nconst retryRequest = async (error) => {\n  const config = error.config;\n  config.retryCount = config.retryCount || 0;\n  \n  if (config.retryCount >= MAX_RETRIES * BASE_URLS.length) {\n    return Promise.reject(error);\n  }\n  \n  // Try different base URLs if connection fails\n  if (error.code === 'ECONNABORTED' || !error.response) {\n    const urlIndex = Math.floor(config.retryCount / MAX_RETRIES) % BASE_URLS.length;\n    config.baseURL = BASE_URLS[urlIndex];\n    console.log(`Trying different base URL: ${config.baseURL}`);\n  }\n  \n  config.retryCount += 1;\n  await new Promise(resolve => setTimeout(resolve, RETRY_DELAY * (config.retryCount % MAX_RETRIES + 1)));\n  return apiClient(config);\n};\n\n// Request interceptor for adding the auth token\napiClient.interceptors.request.use(\n  async (config) => {\n    try {\n      // First try to get token from AsyncStorage\n      let token = await AsyncStorage.getItem('userToken');\n      \n      // If token doesn't exist in AsyncStorage, try to get userInfo\n      if (!token) {\n        const userInfoString = await AsyncStorage.getItem('userInfo');\n        if (userInfoString) {\n          const userInfo = JSON.parse(userInfoString);\n          token = userInfo.token;\n        }\n      }\n      \n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n        console.log(`Adding auth token to request: ${token.substring(0, 15)}...`);\n      } else {\n        console.log('No auth token available for request');\n      }\n      \n      console.log(`API Request: ${config.method.toUpperCase()} ${config.baseURL}${config.url}`);\n      return config;\n    } catch (error) {\n      console.error('Error in request interceptor:', error);\n      return config;\n    }\n  },\n  (error) => {\n    console.error('Request interceptor error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for global error handling\napiClient.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  async (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    \n    // Network errors or timeout - attempt retry\n    if (!error.response || error.code === 'ECONNABORTED') {\n      console.log(`Retrying request (${error.config?.retryCount || 0 + 1}/${MAX_RETRIES})`);\n      return retryRequest(error);\n    }\n\n    if (error.response?.status === 401) {\n      // Handle unauthorized errors (token expired, etc.)\n      console.log('Unauthorized - clearing token');\n      await AsyncStorage.removeItem('userToken');\n      await AsyncStorage.removeItem('userInfo');\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Services API\nexport const servicesApi = {\n  getServices: () => apiClient.get('/services'),\n  getService: (id) => apiClient.get(`/services/${id}`),\n};\n\n// Appointments API\nexport const appointmentsApi = {\n  getUserAppointments: () => apiClient.get('/appointments'),\n  getAppointment: (id) => apiClient.get(`/appointments/${id}`),\n  createAppointment: (data) => apiClient.post('/appointments', data),\n  updateAppointment: (id, data) => apiClient.put(`/appointments/${id}`, data),\n  cancelAppointment: (id, data = {}) => {\n    console.log(`Making DELETE request to /appointments/${id} with data:`, data);\n    return apiClient.delete(`/appointments/${id}`, { data });\n  },\n  deleteAppointment: (id) => {\n    console.log(`Deleting appointment permanently: /appointments/${id}/delete`);\n    return apiClient.delete(`/appointments/${id}/delete`);\n  },\n  completeAppointment: (id) => apiClient.put(`/appointments/${id}/complete`),\n  getBarberAvailability: (barberId, date, salonId) => {\n    const encodedDate = encodeURIComponent(date);\n    const encodedSalonId = encodeURIComponent(salonId);\n    return apiClient.get(`/appointments/availability/${barberId}?date=${encodedDate}&salonId=${encodedSalonId}`);\n  },\n};\n\n// Barbers API\nexport const barbersApi = {\n  // Get all barbers\n  getBarbers: () => apiClient.get('/users/barbers'),\n};\n\nexport default apiClient;\n\n ","import React, { createContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\n\n// Import apiClient pour utiliser la configuration centralisée\nimport apiClient from '../api/client';\n\n// Fonction pour obtenir l'URL de l'API\nconst getApiUrl = () => {\n  // Utiliser la baseURL de l'instance apiClient\n  const baseUrl = apiClient.defaults.baseURL;\n  \n  // Si baseURL se termine par /api, l'utiliser directement\n  if (baseUrl.endsWith('/api')) {\n    return baseUrl;\n  }\n  \n  // Sinon, ajouter /api si nécessaire\n  return baseUrl.endsWith('/') ? `${baseUrl}api` : `${baseUrl}/api`;\n};\n\n// Obtenir l'URL de l'API\nconst API_URL = getApiUrl();\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [userToken, setUserToken] = useState(null);\n  const [userInfo, setUserInfo] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Create a test user if none exists\n  const createTestUser = async () => {\n    try {\n      console.log('Creating test user account...');\n      await apiClient.post('/users/register', {\n        name: 'Test User',\n        email: 'test@example.com',\n        password: 'password123',\n        phone: '123-456-7890',\n        role: 'customer'\n      });\n      console.log('Test user created or already exists');\n    } catch (error) {\n      // If error code is 400 and message contains \"already exists\", the user already exists\n      if (error.response?.status === 400 && error.response?.data?.message?.includes('already exists')) {\n        console.log('Test user already exists');\n      } else {\n        console.error('Error creating test user:', error.response?.data || error.message);\n      }\n    }\n  };\n\n  // Login\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      console.log(`Attempting login with ${email}`);\n      const response = await apiClient.post('/users/login', {\n        email,\n        password\n      });\n\n      const data = response.data;\n      console.log('Login response:', JSON.stringify(data));\n\n      if (data.success) {\n        // Ensure user object has the token\n        const userWithToken = {\n          ...data.user,\n          token: data.token || data.user.token\n        };\n        \n        console.log('Setting user info with token:', userWithToken.token);\n        setUserInfo(userWithToken);\n        setUserToken(userWithToken.token);\n\n        // Save user info and token to AsyncStorage\n        await AsyncStorage.setItem('userInfo', JSON.stringify(userWithToken));\n        await AsyncStorage.setItem('userToken', userWithToken.token);\n        \n        // Verify data was saved\n        const savedUserInfo = await AsyncStorage.getItem('userInfo');\n        const savedToken = await AsyncStorage.getItem('userToken');\n        console.log('Saved user info:', savedUserInfo ? 'Yes' : 'No');\n        console.log('Saved token:', savedToken ? 'Yes' : 'No');\n      }\n\n      setIsLoading(false);\n      return data;\n    } catch (error) {\n      console.error('Login error:', error.response?.data || error.message);\n      setIsLoading(false);\n      setError(\n        error.response?.data?.message || 'An error occurred during login'\n      );\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Login failed'\n      };\n    }\n  };\n\n  // Register\n  const register = async (userData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      console.log(`Registering user: ${userData.email}`);\n      const response = await apiClient.post('/users/register', userData);\n\n      const data = response.data;\n      console.log('Register response:', data);\n\n      if (data.success) {\n        setUserInfo(data.user);\n        setUserToken(data.user.token);\n\n        // Save user info and token to AsyncStorage\n        await AsyncStorage.setItem('userInfo', JSON.stringify(data.user));\n        await AsyncStorage.setItem('userToken', data.user.token);\n      }\n\n      setIsLoading(false);\n      return data;\n    } catch (error) {\n      console.error('Registration error:', error.response?.data || error.message);\n      setIsLoading(false);\n      setError(\n        error.response?.data?.message || 'An error occurred during registration'\n      );\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Registration failed'\n      };\n    }\n  };\n\n  // Logout\n  const logout = async () => {\n    try {\n      console.log('=== LOGOUT STARTED ===');\n      setIsLoading(true);\n      \n      // First clear AsyncStorage completely\n      const keys = ['userInfo', 'userToken'];\n      console.log('Clearing AsyncStorage keys:', keys);\n      \n      // Clear AsyncStorage with multiple approaches for redundancy\n      for (const key of keys) {\n        await AsyncStorage.removeItem(key);\n        console.log(`Removed key: ${key}`);\n      }\n      \n      // Double-check the keys are gone\n      const checkUserInfo = await AsyncStorage.getItem('userInfo');\n      const checkUserToken = await AsyncStorage.getItem('userToken');\n      \n      console.log('After removal - userInfo exists:', !!checkUserInfo);\n      console.log('After removal - userToken exists:', !!checkUserToken);\n      \n      // Now clear the state\n      console.log('Clearing React state...');\n      setUserToken(null);\n      setUserInfo(null);\n      \n      // Small delay to ensure state updates\n      await new Promise(resolve => setTimeout(resolve, 800));\n      \n      console.log('=== LOGOUT COMPLETED ===');\n      setIsLoading(false);\n      \n      return { success: true, message: 'Logout successful' };\n    } catch (error) {\n      console.error('Logout error:', error);\n      setIsLoading(false);\n      \n      // Even if there's an error, still clear the state as a fallback\n      setUserToken(null);\n      setUserInfo(null);\n      \n      return { success: false, message: 'Error during logout, but state was cleared' };\n    }\n  };\n\n  // Update profile\n  const updateProfile = async (userData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await apiClient.put(\n        '/users/profile',\n        userData\n      );\n\n      const data = response.data;\n\n      if (data.success) {\n        setUserInfo(data.user);\n\n        // Update user info in AsyncStorage\n        await AsyncStorage.setItem('userInfo', JSON.stringify(data.user));\n      }\n\n      setIsLoading(false);\n      return data;\n    } catch (error) {\n      console.error('Profile update error:', error.response?.data || error.message);\n      setIsLoading(false);\n      setError(\n        error.response?.data?.message || 'An error occurred while updating profile'\n      );\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Profile update failed'\n      };\n    }\n  };\n\n  // Check if user is logged in on app load\n  const isLoggedIn = async () => {\n    try {\n      setIsLoading(true);\n      let userInfo = await AsyncStorage.getItem('userInfo');\n      let userToken = await AsyncStorage.getItem('userToken');\n      \n      userInfo = JSON.parse(userInfo);\n      \n      if (userInfo) {\n        console.log('User is logged in:', userInfo.name);\n        setUserToken(userToken);\n        setUserInfo(userInfo);\n      } else {\n        console.log('No user logged in');\n      }\n      \n      setIsLoading(false);\n    } catch (error) {\n      console.log('isLogged in error:', error);\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    isLoggedIn();\n    // Create test account for demo purposes\n    createTestUser();\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoading,\n        userToken,\n        userInfo,\n        error,\n        login,\n        register,\n        logout,\n        updateProfile,\n        createTestUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}; ","import React, { useState, useContext, useEffect } from 'react';\r\nimport { \r\n  View, \r\n  StyleSheet, \r\n  ScrollView, \r\n  KeyboardAvoidingView, \r\n  Platform,\r\n  TouchableOpacity,\r\n  Image,\r\n  Alert\r\n} from 'react-native';\r\nimport { \r\n  TextInput, \r\n  Button, \r\n  Text, \r\n  ActivityIndicator,\r\n  Snackbar\r\n} from 'react-native-paper';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [visible, setVisible] = useState(false);\r\n  \r\n  const { login, isLoading, userToken } = useContext(AuthContext);\r\n  \r\n  // Redirect to Home if already logged in\r\n  useEffect(() => {\r\n    if (userToken) {\r\n      navigation.reset({\r\n        index: 0,\r\n        routes: [{ name: 'Main' }],\r\n      });\r\n    }\r\n  }, [userToken, navigation]);\r\n  \r\n  const onDismissSnackBar = () => setVisible(false);\r\n  \r\n  const handleLogin = async () => {\r\n    if (!email || !password) {\r\n      setErrorMessage('Please fill in all fields');\r\n      setVisible(true);\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const result = await login(email, password);\r\n      \r\n      if (!result.success) {\r\n        setErrorMessage(result.message);\r\n        setVisible(true);\r\n      } else {\r\n        console.log('Login successful, redirecting...');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      setErrorMessage('An unexpected error occurred. Please try again.');\r\n      setVisible(true);\r\n    }\r\n  };\r\n  \r\n  // Add test data login\r\n  const handleTestLogin = async () => {\r\n    setEmail('test@example.com');\r\n    setPassword('password123');\r\n    \r\n    // Small delay for visual feedback\r\n    setTimeout(async () => {\r\n      const result = await login('test@example.com', 'password123');\r\n      \r\n      if (!result.success) {\r\n        Alert.alert(\r\n          'Demo Mode', \r\n          'Could not log in with test account. Creating a new account...',\r\n          [{ text: 'OK' }]\r\n        );\r\n        \r\n        // You could add code here to auto-register a test account\r\n      }\r\n    }, 300);\r\n  };\r\n  \r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n      style={styles.container}\r\n    >\r\n      <ScrollView contentContainerStyle={styles.scrollView}>\r\n        <View style={styles.header}>\r\n          <Image \r\n            source={require('../../assets/logo.png')} \r\n            style={styles.logo}\r\n            resizeMode=\"contain\"\r\n          />\r\n          <Text style={styles.title}>BarberBook</Text>\r\n          <Text style={styles.subtitle}>Book your next haircut with ease</Text>\r\n        </View>\r\n        \r\n        <View style={styles.form}>\r\n          <TextInput\r\n            label=\"Email\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n            mode=\"outlined\"\r\n            style={styles.input}\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n            testID=\"email-input\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Password\"\r\n            value={password}\r\n            onChangeText={setPassword}\r\n            mode=\"outlined\"\r\n            style={styles.input}\r\n            secureTextEntry\r\n            testID=\"password-input\"\r\n          />\r\n          \r\n          <Button \r\n            mode=\"contained\" \r\n            onPress={handleLogin}\r\n            style={styles.button}\r\n            loading={isLoading}\r\n            disabled={isLoading}\r\n            testID=\"login-button\"\r\n          >\r\n            Login\r\n          </Button>\r\n          \r\n          <Button \r\n            mode=\"outlined\" \r\n            onPress={handleTestLogin}\r\n            style={styles.demoButton}\r\n            disabled={isLoading}\r\n          >\r\n            Demo Login\r\n          </Button>\r\n          \r\n          <View style={styles.registerContainer}>\r\n            <Text>Don't have an account? </Text>\r\n            <TouchableOpacity onPress={() => navigation.navigate('Register')}>\r\n              <Text style={styles.registerText}>Register here</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n        \r\n        <Snackbar\r\n          visible={visible}\r\n          onDismiss={onDismissSnackBar}\r\n          duration={3000}\r\n          style={styles.snackbar}\r\n        >\r\n          {errorMessage}\r\n        </Snackbar>\r\n      </ScrollView>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  scrollView: {\r\n    flexGrow: 1,\r\n    padding: 20,\r\n    justifyContent: 'center',\r\n  },\r\n  header: {\r\n    alignItems: 'center',\r\n    marginBottom: 40,\r\n  },\r\n  logo: {\r\n    width: 120,\r\n    height: 120,\r\n    marginBottom: 10,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n    color: '#0F4C75',\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#3282B8',\r\n    textAlign: 'center',\r\n  },\r\n  form: {\r\n    width: '100%',\r\n  },\r\n  input: {\r\n    marginBottom: 15,\r\n  },\r\n  button: {\r\n    marginTop: 10,\r\n    paddingVertical: 6,\r\n  },\r\n  demoButton: {\r\n    marginTop: 10,\r\n    paddingVertical: 6,\r\n    borderColor: '#3282B8',\r\n  },\r\n  registerContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    marginTop: 20,\r\n  },\r\n  registerText: {\r\n    color: '#0F4C75',\r\n    fontWeight: 'bold',\r\n  },\r\n  snackbar: {\r\n    backgroundColor: '#d32f2f',\r\n  },\r\n});\r\n\r\nexport default LoginScreen; ","import React, { useState, useContext } from 'react';\r\nimport { \r\n  View, \r\n  StyleSheet, \r\n  ScrollView, \r\n  KeyboardAvoidingView, \r\n  Platform, \r\n  TouchableOpacity \r\n} from 'react-native';\r\nimport { \r\n  TextInput, \r\n  Button, \r\n  Text, \r\n  Snackbar \r\n} from 'react-native-paper';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst RegisterScreen = ({ navigation }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [visible, setVisible] = useState(false);\r\n  \r\n  const { register, isLoading } = useContext(AuthContext);\r\n  \r\n  const onDismissSnackBar = () => setVisible(false);\r\n  \r\n  const handleRegister = async () => {\r\n    if (!name || !email || !password || !confirmPassword) {\r\n      setErrorMessage('Please fill in all required fields');\r\n      setVisible(true);\r\n      return;\r\n    }\r\n    \r\n    if (password !== confirmPassword) {\r\n      setErrorMessage('Passwords do not match');\r\n      setVisible(true);\r\n      return;\r\n    }\r\n    \r\n    const userData = {\r\n      name,\r\n      email,\r\n      password,\r\n      phone\r\n    };\r\n    \r\n    const result = await register(userData);\r\n    \r\n    if (!result.success) {\r\n      setErrorMessage(result.message);\r\n      setVisible(true);\r\n    } else {\r\n      navigation.navigate('Login');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n      style={styles.container}\r\n    >\r\n      <ScrollView contentContainerStyle={styles.scrollView}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>Create Account</Text>\r\n          <Text style={styles.subtitle}>Sign up to book your appointment</Text>\r\n        </View>\r\n        \r\n        <View style={styles.form}>\r\n          <TextInput\r\n            label=\"Full Name\"\r\n            value={name}\r\n            onChangeText={setName}\r\n            mode=\"outlined\"\r\n            style={styles.input}\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Email\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n            mode=\"outlined\"\r\n            style={styles.input}\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Phone (optional)\"\r\n            value={phone}\r\n            onChangeText={setPhone}\r\n            mode=\"outlined\"\r\n            style={styles.input}\r\n            keyboardType=\"phone-pad\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Password\"\r\n            value={password}\r\n            onChangeText={setPassword}\r\n            mode=\"outlined\"\r\n            style={styles.input}\r\n            secureTextEntry\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChangeText={setConfirmPassword}\r\n            mode=\"outlined\"\r\n            style={styles.input}\r\n            secureTextEntry\r\n          />\r\n          \r\n          <Button \r\n            mode=\"contained\" \r\n            onPress={handleRegister}\r\n            style={styles.button}\r\n            loading={isLoading}\r\n            disabled={isLoading}\r\n          >\r\n            Register\r\n          </Button>\r\n          \r\n          <View style={styles.loginContainer}>\r\n            <Text>Already have an account? </Text>\r\n            <TouchableOpacity onPress={() => navigation.navigate('Login')}>\r\n              <Text style={styles.loginText}>Login</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n        \r\n        <Snackbar\r\n          visible={visible}\r\n          onDismiss={onDismissSnackBar}\r\n          duration={3000}\r\n          style={styles.snackbar}\r\n        >\r\n          {errorMessage}\r\n        </Snackbar>\r\n      </ScrollView>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  scrollView: {\r\n    flexGrow: 1,\r\n    padding: 20,\r\n  },\r\n  header: {\r\n    alignItems: 'center',\r\n    marginVertical: 30,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n    color: '#0F4C75',\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#3282B8',\r\n    textAlign: 'center',\r\n  },\r\n  form: {\r\n    width: '100%',\r\n  },\r\n  input: {\r\n    marginBottom: 15,\r\n  },\r\n  button: {\r\n    marginTop: 10,\r\n    paddingVertical: 6,\r\n  },\r\n  loginContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    marginTop: 20,\r\n    marginBottom: 30,\r\n  },\r\n  loginText: {\r\n    color: '#0F4C75',\r\n    fontWeight: 'bold',\r\n  },\r\n  snackbar: {\r\n    backgroundColor: '#d32f2f',\r\n  },\r\n});\r\n\r\nexport default RegisterScreen; ","import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, StyleSheet, ScrollView, Image, TouchableOpacity } from 'react-native';\r\nimport { Text, Card, Title, Paragraph, Button, ActivityIndicator } from 'react-native-paper';\r\nimport { servicesApi, appointmentsApi } from '../../api/client';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  const [services, setServices] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  const { userInfo } = useContext(AuthContext);\r\n  \r\n  useEffect(() => {\r\n    // Fetch data when component mounts\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        // Fetch featured services\r\n        const servicesResponse = await servicesApi.getServices();\r\n        const featuredServices = servicesResponse.data.services.slice(0, 3); // Get first 3 services\r\n        \r\n        // Fetch user's upcoming appointments\r\n        const appointmentsResponse = await appointmentsApi.getUserAppointments();\r\n        const upcomingAppointments = appointmentsResponse.data.appointments\r\n          .filter(app => app.status === 'confirmed' || app.status === 'pending')\r\n          .sort((a, b) => new Date(a.date) - new Date(b.date))\r\n          .slice(0, 2); // Get next 2 appointments\r\n        \r\n        setServices(featuredServices);\r\n        setAppointments(upcomingAppointments);\r\n        \r\n      } catch (error) {\r\n        console.error('Error fetching home data:', error);\r\n        setError('Failed to load data. Please try again later.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, []);\r\n  \r\n  if (loading) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  if (error) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <Text style={styles.errorText}>{error}</Text>\r\n        <Button mode=\"contained\" onPress={() => navigation.reset({ index: 0, routes: [{ name: 'Home' }] })}>\r\n          Retry\r\n        </Button>\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <Text style={styles.greeting}>Hello, {userInfo?.name?.split(' ')[0] || 'there'}! 👋</Text>\r\n        <Text style={styles.subGreeting}>Ready for a fresh cut?</Text>\r\n      </View>\r\n      \r\n      {/* Upcoming Appointments */}\r\n      <View style={styles.section}>\r\n        <View style={styles.sectionHeader}>\r\n          <Text style={styles.sectionTitle}>Upcoming Appointments</Text>\r\n          <TouchableOpacity onPress={() => navigation.navigate('Appointments')}>\r\n            <Text style={styles.seeAll}>See All</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        \r\n        {appointments.length === 0 ? (\r\n          <Card style={styles.emptyCard}>\r\n            <Card.Content>\r\n              <Paragraph>You don't have any upcoming appointments.</Paragraph>\r\n              <Button \r\n                mode=\"contained\" \r\n                style={styles.bookButton}\r\n                onPress={() => navigation.navigate('Services')}\r\n              >\r\n                Book Now\r\n              </Button>\r\n            </Card.Content>\r\n          </Card>\r\n        ) : (\r\n          appointments.map(appointment => (\r\n            <Card key={appointment._id} style={styles.card}>\r\n              <Card.Content>\r\n                <Title>{appointment.service.name}</Title>\r\n                <Paragraph>\r\n                  Date: {new Date(appointment.date).toLocaleDateString()}\r\n                </Paragraph>\r\n                <Paragraph>\r\n                  Time: {appointment.startTime} - {appointment.endTime}\r\n                </Paragraph>\r\n                <Paragraph>\r\n                  Barber: {appointment.barber.name}\r\n                </Paragraph>\r\n                <View style={styles.statusContainer}>\r\n                  <Text style={[\r\n                    styles.status, \r\n                    { \r\n                      backgroundColor: \r\n                        appointment.status === 'confirmed' ? '#4CAF50' : \r\n                        appointment.status === 'pending' ? '#FFC107' : '#F44336'\r\n                    }\r\n                  ]}>\r\n                    {appointment.status.toUpperCase()}\r\n                  </Text>\r\n                </View>\r\n              </Card.Content>\r\n            </Card>\r\n          ))\r\n        )}\r\n      </View>\r\n      \r\n      {/* Our Services */}\r\n      <View style={styles.section}>\r\n        <View style={styles.sectionHeader}>\r\n          <Text style={styles.sectionTitle}>Our Services</Text>\r\n          <TouchableOpacity onPress={() => navigation.navigate('Services')}>\r\n            <Text style={styles.seeAll}>See All</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        \r\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>\r\n          {services.map(service => (\r\n            <Card key={service._id} style={styles.horizontalCard}>\r\n              <Card.Cover \r\n                source={{ uri: service.image || 'https://via.placeholder.com/150' }} \r\n                style={styles.serviceImage}\r\n              />\r\n              <Card.Content>\r\n                <Title>{service.name}</Title>\r\n                <Paragraph numberOfLines={2}>{service.description}</Paragraph>\r\n                <Paragraph style={styles.price}>${service.price}</Paragraph>\r\n              </Card.Content>\r\n              <Card.Actions>\r\n                <Button \r\n                  mode=\"contained\" \r\n                  onPress={() => navigation.navigate('Booking', { service })}\r\n                >\r\n                  Book\r\n                </Button>\r\n              </Card.Actions>\r\n            </Card>\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  errorText: {\r\n    color: '#d32f2f',\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n  },\r\n  header: {\r\n    backgroundColor: '#0F4C75',\r\n    padding: 20,\r\n    paddingTop: 50,\r\n    borderBottomLeftRadius: 20,\r\n    borderBottomRightRadius: 20,\r\n  },\r\n  greeting: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  subGreeting: {\r\n    fontSize: 16,\r\n    color: '#BBE1FA',\r\n    marginTop: 5,\r\n  },\r\n  section: {\r\n    marginVertical: 15,\r\n    paddingHorizontal: 15,\r\n  },\r\n  sectionHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#1B262C',\r\n  },\r\n  seeAll: {\r\n    color: '#3282B8',\r\n    fontWeight: 'bold',\r\n  },\r\n  card: {\r\n    marginBottom: 15,\r\n    borderRadius: 10,\r\n    elevation: 2,\r\n  },\r\n  emptyCard: {\r\n    marginBottom: 15,\r\n    borderRadius: 10,\r\n    elevation: 2,\r\n    alignItems: 'center',\r\n    padding: 10,\r\n  },\r\n  bookButton: {\r\n    marginTop: 10,\r\n  },\r\n  horizontalCard: {\r\n    width: 220,\r\n    marginRight: 15,\r\n    borderRadius: 10,\r\n    elevation: 2,\r\n  },\r\n  serviceImage: {\r\n    height: 120,\r\n    borderTopLeftRadius: 10,\r\n    borderTopRightRadius: 10,\r\n  },\r\n  price: {\r\n    fontWeight: 'bold',\r\n    color: '#0F4C75',\r\n    marginTop: 5,\r\n  },\r\n  statusContainer: {\r\n    marginTop: 10,\r\n    alignItems: 'flex-start',\r\n  },\r\n  status: {\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 3,\r\n    borderRadius: 20,\r\n    color: 'white',\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default HomeScreen; ","import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, FlatList, TouchableOpacity, Image } from 'react-native';\r\nimport { Text, Card, Button, Searchbar, Chip, ActivityIndicator, Banner } from 'react-native-paper';\r\nimport { servicesApi } from '../../api/client';\r\n\r\n// Sample services data for fallback if API fails\r\nconst sampleServices = [\r\n  {\r\n    _id: '1',\r\n    name: 'Classic Haircut',\r\n    description: 'Traditional haircut includes consultation, shampoo, condition, and style.',\r\n    price: 25,\r\n    duration: 30,\r\n    image: 'https://images.unsplash.com/photo-1589710751893-f9aa8656451d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8aGFpcmN1dHxlbnwwfHwwfHw%3D&auto=format&fit=crop&w=500&q=60',\r\n    category: 'haircut'\r\n  },\r\n  {\r\n    _id: '2',\r\n    name: 'Beard Trim',\r\n    description: 'Professional beard grooming and shaping with razor detailing.',\r\n    price: 15,\r\n    duration: 20,\r\n    image: 'https://images.unsplash.com/photo-1621605810052-80936645a058?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8M3x8YmVhcmQlMjB0cmltfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=500&q=60',\r\n    category: 'beard'\r\n  },\r\n  {\r\n    _id: '3',\r\n    name: 'Premium Package',\r\n    description: 'Haircut, beard trim, hot towel facial, and styling in one session.',\r\n    price: 45,\r\n    duration: 60,\r\n    image: 'https://images.unsplash.com/photo-1564222256577-45e728f2c611?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTB8fGJhcmJlcnxlbnwwfHwwfHw%3D&auto=format&fit=crop&w=500&q=60',\r\n    category: 'combo'\r\n  },\r\n  {\r\n    _id: '4',\r\n    name: 'Kids Haircut',\r\n    description: 'Gentle haircut service for children under 12 years old.',\r\n    price: 20,\r\n    duration: 25,\r\n    image: 'https://images.unsplash.com/photo-1626143508000-4b31a27e9c7a?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8NXx8a2lkcyUyMGhhaXJjdXR8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60',\r\n    category: 'haircut'\r\n  },\r\n  {\r\n    _id: '5',\r\n    name: 'Hair Coloring',\r\n    description: 'Professional hair coloring service with premium products.',\r\n    price: 60,\r\n    duration: 90,\r\n    image: 'https://images.unsplash.com/photo-1619283651048-9ef01ec1da6e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MjB8fGhhaXIlMjBjb2xvcnxlbnwwfHwwfHw%3D&auto=format&fit=crop&w=500&q=60',\r\n    category: 'coloring'\r\n  },\r\n  // New service: Protein Treatment\r\n  {\r\n    _id: '6',\r\n    name: 'Protein Treatment',\r\n    description: 'Deep protein treatment to strengthen and repair damaged hair.',\r\n    price: 85,\r\n    duration: 120, // 2 hours\r\n    image: 'https://images.unsplash.com/photo-1560869713-7d0a29430803?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTJ8fGhhaXIlMjB0cmVhdG1lbnR8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60',\r\n    category: 'treatment'\r\n  },\r\n  // New service: Brushing/Blowout\r\n  {\r\n    _id: '7',\r\n    name: 'Brushing/Blowout',\r\n    description: 'Professional blow dry and styling to achieve smooth, voluminous hair.',\r\n    price: 35,\r\n    duration: 30,\r\n    image: 'https://images.unsplash.com/photo-1595922648424-6b3b0b81d044?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8M3x8aGFpciUyMGRyeWluZ3xlbnwwfHwwfHw%3D&auto=format&fit=crop&w=500&q=60',\r\n    category: 'styling'\r\n  },\r\n  // Combo: Haircut + Protein Treatment\r\n  {\r\n    _id: '8',\r\n    name: 'Haircut & Protein Combo',\r\n    description: 'Complete haircut with deep protein treatment for damaged hair. Full hair transformation.',\r\n    price: 100,\r\n    duration: 150, // 2.5 hours\r\n    image: 'https://images.unsplash.com/photo-1605497788044-5a32c7078486?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8NXx8aGFpciUyMHRyZWF0bWVudHxlbnwwfHwwfHw%3D&auto=format&fit=crop&w=500&q=60',\r\n    category: 'combo'\r\n  },\r\n  // Combo: Haircut + Brushing\r\n  {\r\n    _id: '9',\r\n    name: 'Cut & Style Combo',\r\n    description: 'Haircut followed by professional blow dry and styling for a complete new look.',\r\n    price: 55,\r\n    duration: 60,\r\n    image: 'https://images.unsplash.com/photo-1519735777090-ec97162dc266?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8OHx8aGFpcmN1dCUyMGFuZCUyMHN0eWxlfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=500&q=60',\r\n    category: 'combo'\r\n  }\r\n];\r\n\r\n// Updated categories to include new service types\r\nconst categories = [\r\n  { id: 'all', name: 'All' },\r\n  { id: 'haircut', name: 'Haircut' },\r\n  { id: 'beard', name: 'Beard' },\r\n  { id: 'treatment', name: 'Treatment' },\r\n  { id: 'styling', name: 'Styling' },\r\n  { id: 'combo', name: 'Combo' },\r\n  { id: 'coloring', name: 'Coloring' }\r\n];\r\n\r\nconst ServicesScreen = ({ navigation }) => {\r\n  const [services, setServices] = useState([]);\r\n  const [filteredServices, setFilteredServices] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [usingSampleData, setUsingSampleData] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    fetchServices();\r\n  }, []);\r\n  \r\n  const fetchServices = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      setUsingSampleData(false);\r\n      \r\n      const response = await servicesApi.getServices();\r\n      \r\n      if (response.data.services.length > 0) {\r\n        setServices(response.data.services);\r\n        setFilteredServices(response.data.services);\r\n      } else {\r\n        console.log('No services found, using sample data');\r\n        setServices(sampleServices);\r\n        setFilteredServices(sampleServices);\r\n        setUsingSampleData(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching services:', error);\r\n      setError('Failed to load services from server. Showing sample data instead.');\r\n      // Use sample data if API fails\r\n      setServices(sampleServices);\r\n      setFilteredServices(sampleServices);\r\n      setUsingSampleData(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const onChangeSearch = (query) => {\r\n    setSearchQuery(query);\r\n    filterServices(query, selectedCategory);\r\n  };\r\n  \r\n  const selectCategory = (category) => {\r\n    setSelectedCategory(category);\r\n    filterServices(searchQuery, category);\r\n  };\r\n  \r\n  const filterServices = (query, category) => {\r\n    let filtered = services;\r\n    \r\n    // Filter by search query\r\n    if (query) {\r\n      filtered = filtered.filter(service => \r\n        service.name.toLowerCase().includes(query.toLowerCase()) ||\r\n        service.description.toLowerCase().includes(query.toLowerCase())\r\n      );\r\n    }\r\n    \r\n    // Filter by category\r\n    if (category !== 'all') {\r\n      filtered = filtered.filter(service => service.category === category);\r\n    }\r\n    \r\n    setFilteredServices(filtered);\r\n  };\r\n  \r\n  const renderServiceItem = ({ item }) => (\r\n    <Card style={styles.card} onPress={() => navigation.navigate('Booking', { service: item })}>\r\n      <Card.Cover \r\n        source={{ uri: item.image || 'https://via.placeholder.com/300x150?text=No+Image' }} \r\n        style={styles.cardImage}\r\n      />\r\n      <Card.Content style={styles.cardContent}>\r\n        <Text style={styles.cardTitle}>{item.name}</Text>\r\n        <Text style={styles.cardDescription} numberOfLines={2}>{item.description}</Text>\r\n        <View style={styles.cardDetails}>\r\n          <View style={styles.priceContainer}>\r\n            <Text style={styles.price}>${item.price}</Text>\r\n            <Text style={styles.duration}>{item.duration} min</Text>\r\n          </View>\r\n          <Button \r\n            mode=\"contained\" \r\n            onPress={() => navigation.navigate('Booking', { service: item })}\r\n            style={styles.bookButton}\r\n          >\r\n            Book\r\n          </Button>\r\n        </View>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n  \r\n  if (loading) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Our Services</Text>\r\n        <Text style={styles.headerSubtitle}>Choose from our premium services</Text>\r\n      </View>\r\n      \r\n      <Searchbar\r\n        placeholder=\"Search services\"\r\n        onChangeText={onChangeSearch}\r\n        value={searchQuery}\r\n        style={styles.searchBar}\r\n      />\r\n      \r\n      <View style={styles.categoriesContainer}>\r\n        <FlatList\r\n          horizontal\r\n          data={categories}\r\n          renderItem={({ item }) => (\r\n            <Chip\r\n              selected={selectedCategory === item.id}\r\n              style={[\r\n                styles.categoryChip,\r\n                selectedCategory === item.id && styles.selectedCategoryChip\r\n              ]}\r\n              textStyle={[\r\n                styles.categoryChipText,\r\n                selectedCategory === item.id && styles.selectedCategoryChipText\r\n              ]}\r\n              onPress={() => selectCategory(item.id)}\r\n            >\r\n              {item.name}\r\n            </Chip>\r\n          )}\r\n          keyExtractor={item => item.id}\r\n          showsHorizontalScrollIndicator={false}\r\n          contentContainerStyle={styles.categoriesList}\r\n        />\r\n      </View>\r\n      \r\n      {usingSampleData && (\r\n        <Banner\r\n          visible={true}\r\n          icon=\"information\"\r\n          actions={[\r\n            {\r\n              label: 'Retry',\r\n              onPress: fetchServices,\r\n            },\r\n          ]}\r\n        >\r\n          Showing demo services. Tap \"Retry\" to attempt loading from server.\r\n        </Banner>\r\n      )}\r\n      \r\n      {error && (\r\n        <Banner\r\n          visible={true}\r\n          icon=\"alert\"\r\n          actions={[\r\n            {\r\n              label: 'Retry',\r\n              onPress: fetchServices,\r\n            },\r\n          ]}\r\n        >\r\n          {error}\r\n        </Banner>\r\n      )}\r\n      \r\n      {filteredServices.length === 0 ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyText}>No services match your search</Text>\r\n        </View>\r\n      ) : (\r\n        <FlatList\r\n          data={filteredServices}\r\n          renderItem={renderServiceItem}\r\n          keyExtractor={item => item._id}\r\n          contentContainerStyle={styles.servicesList}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  header: {\r\n    backgroundColor: '#0F4C75',\r\n    padding: 20,\r\n    paddingTop: 50,\r\n    paddingBottom: 20,\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n  headerSubtitle: {\r\n    fontSize: 16,\r\n    color: '#BBE1FA',\r\n    marginTop: 5,\r\n  },\r\n  searchBar: {\r\n    margin: 15,\r\n    borderRadius: 10,\r\n    elevation: 2,\r\n  },\r\n  categoriesContainer: {\r\n    marginBottom: 10,\r\n  },\r\n  categoriesList: {\r\n    paddingHorizontal: 15,\r\n  },\r\n  categoryChip: {\r\n    marginRight: 8,\r\n    backgroundColor: 'white',\r\n  },\r\n  selectedCategoryChip: {\r\n    backgroundColor: '#0F4C75',\r\n  },\r\n  categoryChipText: {\r\n    color: '#666',\r\n  },\r\n  selectedCategoryChipText: {\r\n    color: 'white',\r\n  },\r\n  servicesList: {\r\n    padding: 15,\r\n    paddingTop: 5,\r\n  },\r\n  card: {\r\n    marginBottom: 15,\r\n    borderRadius: 10,\r\n    elevation: 3,\r\n  },\r\n  cardImage: {\r\n    height: 150,\r\n    borderTopLeftRadius: 10,\r\n    borderTopRightRadius: 10,\r\n  },\r\n  cardContent: {\r\n    padding: 15,\r\n  },\r\n  cardTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n  },\r\n  cardDescription: {\r\n    color: '#666',\r\n    marginBottom: 10,\r\n  },\r\n  cardDetails: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n  },\r\n  priceContainer: {\r\n    flexDirection: 'column',\r\n  },\r\n  price: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#0F4C75',\r\n  },\r\n  duration: {\r\n    color: '#666',\r\n    fontSize: 12,\r\n  },\r\n  bookButton: {\r\n    borderRadius: 5,\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  emptyText: {\r\n    fontSize: 16,\r\n    color: '#666',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default ServicesScreen; ","import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, StyleSheet, ScrollView, TouchableOpacity, Alert } from 'react-native';\r\nimport { Text, Card, Button, Title, Paragraph, ActivityIndicator, Divider, Avatar, Chip } from 'react-native-paper';\r\nimport { Calendar } from 'react-native-calendars';\r\nimport { format } from 'date-fns';\r\nimport { barbersApi, appointmentsApi, servicesApi } from '../../api/client';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport apiClient from '../../api/client';\r\nimport { CommonActions } from '@react-navigation/native';\r\nimport { navigationRef, navigateToTab } from '../../App';\r\n\r\nconst BookingScreen = ({ route, navigation }) => {\r\n  const { service } = route.params;\r\n  \r\n  const [salons, setSalons] = useState([]);\r\n  const [selectedSalon, setSelectedSalon] = useState(null);\r\n  const [barbers, setBarbers] = useState([]);\r\n  const [selectedBarber, setSelectedBarber] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedTime, setSelectedTime] = useState('');\r\n  const [availableTimes, setAvailableTimes] = useState([]);\r\n  const [allTimeSlots, setAllTimeSlots] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [step, setStep] = useState(1); // 1 = select salon, 2 = select barber, 3 = select date, 4 = select time\r\n  \r\n  const { userInfo } = useContext(AuthContext);\r\n  \r\n  // Time slots from 9 AM to 6 PM\r\n  const defaultTimeSlots = [\r\n    '09:00', '09:30', '10:00', '10:30', '11:00', '11:30',\r\n    '12:00', '12:30', '13:00', '13:30', '14:00', '14:30',\r\n    '15:00', '15:30', '16:00', '16:30', '17:00', '17:30'\r\n  ];\r\n  \r\n  // Get today's date in YYYY-MM-DD format\r\n  const today = new Date();\r\n  const formattedToday = format(today, 'yyyy-MM-dd');\r\n  \r\n  // Fetch salons on component mount\r\n  useEffect(() => {\r\n    fetchSalons();\r\n  }, []);\r\n  \r\n  // Fetch barbers when salon is selected\r\n  useEffect(() => {\r\n    if (selectedSalon) {\r\n      fetchBarbersBySalon(selectedSalon._id);\r\n    }\r\n  }, [selectedSalon]);\r\n  \r\n  // Fetch available time slots when barber or date changes\r\n  useEffect(() => {\r\n    if (selectedBarber && selectedDate) {\r\n      fetchAvailableTimes();\r\n    } else {\r\n      // Reset time slots when barber or date is not selected\r\n      const timeSlots = [...defaultTimeSlots];\r\n      setAllTimeSlots(timeSlots);\r\n      setAvailableTimes([]);\r\n    }\r\n  }, [selectedBarber, selectedDate]);\r\n  \r\n  const fetchSalons = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await apiClient.get('/salons', {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo?.token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        setSalons(response.data.salons);\r\n        console.log(`Loaded ${response.data.salons.length} salons`);\r\n      } else {\r\n        throw new Error('Failed to fetch salons');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching salons:', error);\r\n      setError('Failed to load salons. Please try again.');\r\n      setLoading(false);\r\n      Alert.alert('Error', 'Failed to load salons. Please try again later.');\r\n    }\r\n  };\r\n  \r\n  const fetchBarbersBySalon = async (salonId) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      console.log(`Fetching barbers for salon ID: ${salonId}`);\r\n      \r\n      // APPROACH: Fetch the full user list first, then filter by the salon's staff IDs\r\n      // This is more reliable than expecting populated staff objects\r\n      \r\n      // Step 1: Get salon details to get staff IDs\r\n      const salonResponse = await apiClient.get(`/salons/${salonId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo?.token}`\r\n        }\r\n      });\r\n      \r\n      if (!salonResponse.data || !salonResponse.data.success) {\r\n        throw new Error('Failed to fetch salon details');\r\n      }\r\n      \r\n      const salonData = salonResponse.data.salon;\r\n      console.log(`Loaded salon: ${salonData.name}`);\r\n      \r\n      // Check if staff property exists\r\n      if (!salonData.staff || !Array.isArray(salonData.staff) || salonData.staff.length === 0) {\r\n        console.log('No staff array found in salon data or it is empty');\r\n        setBarbers([]);\r\n        setError('No barbers available for this salon. Staff not assigned.');\r\n        setLoading(false);\r\n        setStep(2); // Still move to next step to show empty state\r\n        return;\r\n      }\r\n      \r\n      // Step 2: Extract all staff IDs (whether objects or plain IDs)\r\n      const staffIds = salonData.staff.map(staff => \r\n        typeof staff === 'object' ? staff._id : staff\r\n      );\r\n      \r\n      console.log(`Found ${salonData.staff.length} staff IDs`);\r\n      \r\n      // Step 3: Get all users and filter by staff IDs + barber role\r\n      // Use the salon's staff directly if they are populated with user data\r\n      let barberStaff = [];\r\n      \r\n      if (salonData.staff.every(staff => typeof staff === 'object' && staff.role)) {\r\n        console.log('Staff objects are populated with role data, using directly');\r\n        \r\n        // Use the populated staff data directly\r\n        barberStaff = salonData.staff.filter(staff => {\r\n          const roleToCheck = (staff.role || '').toLowerCase();\r\n          const isBarberRole = roleToCheck === 'barber' || \r\n                              roleToCheck.includes('barber') || \r\n                              roleToCheck === 'stylist';\r\n          \r\n          console.log(`Direct staff member check - ${staff.name}: role=${staff.role}, isBarber=${isBarberRole}`);\r\n          return isBarberRole;\r\n        });\r\n      } else {\r\n        // Need to fetch users from the admin endpoint\r\n        try {\r\n          console.log('Using admin endpoint to fetch users');\r\n          const usersResponse = await apiClient.get('/admin/users', {\r\n            headers: {\r\n              Authorization: `Bearer ${userInfo?.token}`\r\n            }\r\n          });\r\n          \r\n          if (!usersResponse.data || !usersResponse.data.success) {\r\n            throw new Error('Failed to fetch users');\r\n          }\r\n          \r\n          const allUsers = usersResponse.data.users || [];\r\n          console.log(`Fetched ${allUsers.length} total users from admin endpoint`);\r\n          \r\n          // Find users who are both in the salon's staff list AND have a barber/stylist role\r\n          barberStaff = allUsers.filter(user => {\r\n            // First check if this user is in the salon's staff list\r\n            const isStaffMember = staffIds.includes(user._id);\r\n            if (!isStaffMember) return false;\r\n            \r\n            // Then check role (with flexible matching)\r\n            const roleToCheck = (user.role || '').toLowerCase();\r\n            const isBarberRole = roleToCheck === 'barber' || \r\n                                roleToCheck.includes('barber') || \r\n                                roleToCheck === 'stylist';\r\n            \r\n            console.log(`Admin staff check - ${user.name}: role=${user.role}, isBarber=${isBarberRole}`);\r\n            return isBarberRole;\r\n          });\r\n        } catch (error) {\r\n          console.error('Error fetching from admin endpoint:', error);\r\n          // Try a direct approach as fallback\r\n          try {\r\n            console.log('Trying direct staff ID lookup');\r\n            // Fetch each staff member directly by ID\r\n            barberStaff = [];\r\n            for (const staffId of staffIds) {\r\n              try {\r\n                const userResponse = await apiClient.get(`/admin/users/${staffId}`, {\r\n                  headers: {\r\n                    Authorization: `Bearer ${userInfo?.token}`\r\n                  }\r\n                });\r\n                \r\n                if (userResponse.data && userResponse.data.success) {\r\n                  const user = userResponse.data.user;\r\n                  const roleToCheck = (user.role || '').toLowerCase();\r\n                  const isBarberRole = roleToCheck === 'barber' || \r\n                                     roleToCheck.includes('barber') || \r\n                                     roleToCheck === 'stylist';\r\n                                      \r\n                  if (isBarberRole) {\r\n                    barberStaff.push(user);\r\n                    console.log(`Added staff member by ID: ${user.name}, role=${user.role}`);\r\n                  }\r\n                }\r\n              } catch (err) {\r\n                console.log(`Error fetching staff ID ${staffId}:`, err);\r\n              }\r\n            }\r\n          } catch (fallbackError) {\r\n            console.error('Error with fallback approach:', fallbackError);\r\n          }\r\n        }\r\n      }\r\n      \r\n      console.log(`Found ${barberStaff.length} barbers for this salon`);\r\n      \r\n      if (barberStaff.length > 0) {\r\n        setBarbers(barberStaff);\r\n        console.log(`Loaded ${barberStaff.length} barbers for salon ${salonData.name}`);\r\n      } else {\r\n        setBarbers([]);\r\n        setError('No barbers available for this salon. Staff exists but no barber roles found.');\r\n        Alert.alert(\r\n          'No Barbers', \r\n          'This salon does not have any barbers assigned. Please select another salon or use the debug button to check staff roles.'\r\n        );\r\n      }\r\n      \r\n      setLoading(false);\r\n      setStep(2); // Move to next step\r\n    } catch (error) {\r\n      console.error('Error fetching barbers by salon:', error);\r\n      setError('Failed to load barbers. Please try again.');\r\n      Alert.alert('Error', 'Failed to load barbers: ' + (error.message || 'Unknown error'));\r\n      setLoading(false);\r\n      setStep(2); // Still move to next step to show error state\r\n    }\r\n  };\r\n  \r\n  const fetchAvailableTimes = async () => {\r\n    if (!selectedBarber || !selectedDate) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Generate time slots from 9 AM to 5 PM\r\n      const timeSlots = [];\r\n      \r\n      // Get current date and selected date for comparison\r\n      const now = new Date();\r\n      const selectedDateObj = new Date(selectedDate);\r\n      const isToday = selectedDateObj.getDate() === now.getDate() && \r\n                      selectedDateObj.getMonth() === now.getMonth() && \r\n                      selectedDateObj.getFullYear() === now.getFullYear();\r\n      \r\n      const currentHour = now.getHours();\r\n      const currentMinute = now.getMinutes();\r\n      \r\n      // Generate times from 9am to 5pm\r\n      for (let hour = 9; hour <= 17; hour++) {\r\n        for (let minute of [0, 30]) {\r\n          // Skip times in the past if it's today\r\n          if (isToday && (hour < currentHour || (hour === currentHour && minute <= currentMinute))) {\r\n            continue;\r\n          }\r\n          \r\n          const formattedHour = hour.toString().padStart(2, '0');\r\n          const formattedMinute = minute.toString().padStart(2, '0');\r\n          timeSlots.push(`${formattedHour}:${formattedMinute}`);\r\n        }\r\n      }\r\n      \r\n      // Set default time slots\r\n      setAllTimeSlots(timeSlots);\r\n      \r\n      // If we have a barber, check their availability\r\n      try {\r\n        console.log('Fetching availability for:', {\r\n          barberId: selectedBarber._id,\r\n          date: selectedDate,\r\n          salonId: selectedSalon._id\r\n        });\r\n        \r\n        // Fetch existing appointments for the barber and date\r\n        const response = await appointmentsApi.getBarberAvailability(\r\n          selectedBarber._id, \r\n          selectedDate,\r\n          selectedSalon._id\r\n        );\r\n        \r\n        console.log('Availability response:', response?.data);\r\n        \r\n        if (response?.data && response.data.success) {\r\n          // Set all time slots for display\r\n          setAllTimeSlots(timeSlots);\r\n          \r\n          // Set available times from API\r\n          const availableTimes = response.data.availableTimes || [];\r\n          \r\n          console.log('Available times from API:', availableTimes);\r\n          \r\n          // Filter availableTimes to ensure they're also in our valid timeSlots\r\n          // (this ensures we don't show past times even if the API returns them)\r\n          const filteredTimes = availableTimes.filter(time => \r\n            timeSlots.includes(time)\r\n          );\r\n          \r\n          console.log('Filtered times:', filteredTimes);\r\n          \r\n          setAvailableTimes(filteredTimes);\r\n          \r\n          // If we were in step 4 (time selection) but no times are available,\r\n          // automatically go back to date selection\r\n          if (step === 4 && filteredTimes.length === 0) {\r\n            setSelectedTime(null);\r\n          }\r\n          // If we had a selected time but it's no longer available, clear it\r\n          else if (selectedTime && !filteredTimes.includes(selectedTime)) {\r\n            setSelectedTime(null);\r\n          }\r\n        } else {\r\n          console.error('API error response or no response data:', response?.data);\r\n          // FALLBACK: Use all time slots if API fails to return available times\r\n          console.log('Using fallback time slots due to API error');\r\n          setAllTimeSlots(timeSlots);\r\n          setAvailableTimes(timeSlots);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching barber availability:', error);\r\n        console.log('Using fallback time slots due to error');\r\n        // FALLBACK: Use all time slots if API call fails\r\n        setAllTimeSlots(timeSlots);\r\n        setAvailableTimes(timeSlots);\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error in fetchAvailableTimes:', error);\r\n      setLoading(false);\r\n      \r\n      // FALLBACK: Generate time slots locally as a last resort\r\n      const fallbackTimeSlots = [];\r\n      for (let hour = 9; hour <= 17; hour++) {\r\n        fallbackTimeSlots.push(`${hour}:00`);\r\n        fallbackTimeSlots.push(`${hour}:30`);\r\n      }\r\n      setAllTimeSlots(fallbackTimeSlots);\r\n      setAvailableTimes(fallbackTimeSlots);\r\n    }\r\n  };\r\n  \r\n  // Helper function to convert decimal hours to HH:MM format\r\n  const formatTimeFromHours = (decimalHours) => {\r\n    const hours = Math.floor(decimalHours);\r\n    const minutes = Math.round((decimalHours - hours) * 60);\r\n    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\r\n  };\r\n  \r\n  // Helper function to convert HH:MM to decimal hours\r\n  const getDecimalHours = (time) => {\r\n    const [hours, minutes] = time.split(':').map(Number);\r\n    return hours + (minutes / 60);\r\n  };\r\n  \r\n  // Calculate end time based on selected time and service duration\r\n  const getEndTime = (startTime) => {\r\n    const [hours, minutes] = startTime.split(':').map(Number);\r\n    const startHours = hours + (minutes / 60);\r\n    const endHours = startHours + (service.duration / 60);\r\n    return formatTimeFromHours(endHours);\r\n  };\r\n  \r\n  const handleSalonSelect = (salon) => {\r\n    setSelectedSalon(salon);\r\n    setSelectedBarber(null);\r\n    setSelectedDate('');\r\n    setSelectedTime('');\r\n    // Next step will be triggered by useEffect when barbers are loaded\r\n  };\r\n  \r\n  const handleBarberSelect = (barber) => {\r\n    setSelectedBarber(barber);\r\n    setStep(3); // Move to date selection\r\n  };\r\n  \r\n  const handleDateSelect = (date) => {\r\n    // Check if the selected date is not in the past\r\n    const selectedDateObj = new Date(date.dateString);\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0); // Set to start of day for accurate comparison\r\n    \r\n    if (selectedDateObj < today) {\r\n      Alert.alert(\r\n        \"Invalid Date\", \r\n        \"You cannot book appointments in the past. Please select today or a future date.\"\r\n      );\r\n      return;\r\n    }\r\n    \r\n    setSelectedDate(date.dateString);\r\n    setStep(4); // Move to time selection\r\n  };\r\n  \r\n  const handleTimeSelect = (time) => {\r\n    setSelectedTime(time);\r\n  };\r\n  \r\n  const handleBooking = async () => {\r\n    // Basic validation\r\n    if (!selectedBarber || !selectedDate || !selectedTime || !selectedSalon) {\r\n      Alert.alert('Error', 'Please complete all booking details');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSubmitting(true);\r\n      console.log(\"Starting booking process...\");\r\n      \r\n      // Calculate end time\r\n      const serviceDuration = service.duration || 30;\r\n      const [hour, minute] = selectedTime.split(':').map(Number);\r\n      let endHour = hour;\r\n      let endMinute = minute + serviceDuration;\r\n      \r\n      // Adjust hour if minutes overflow\r\n      if (endMinute >= 60) {\r\n        endHour += Math.floor(endMinute / 60);\r\n        endMinute = endMinute % 60;\r\n      }\r\n      \r\n      const endTime = `${endHour.toString().padStart(2, '0')}:${endMinute.toString().padStart(2, '0')}`;\r\n      \r\n      // Format booking data\r\n      const bookingData = {\r\n        barberId: selectedBarber._id,\r\n        serviceId: service._id,\r\n        salonId: selectedSalon._id,\r\n        date: selectedDate,\r\n        startTime: selectedTime,\r\n        endTime: endTime\r\n      };\r\n      \r\n      console.log('Booking data:', bookingData);\r\n      \r\n      // Simple direct API call\r\n      const response = await apiClient.post('/appointments', bookingData, {\r\n        headers: { Authorization: `Bearer ${userInfo?.token}` }\r\n      });\r\n      \r\n      setSubmitting(false);\r\n      \r\n      console.log('BOOKING SUCCESS! Response:', response?.data);\r\n      \r\n      if (response?.data?.success) {\r\n        console.log('BOOKING SUCCESS! Response:', response?.data);\r\n        \r\n        // Set a flag for successful booking\r\n        const bookingSuccess = true;\r\n        \r\n        // First just go back - this is the most reliable approach\r\n        setTimeout(() => {\r\n          try {\r\n            console.log('Navigating back to previous screen');\r\n            navigation.goBack();\r\n            \r\n            // Then show success alert\r\n            setTimeout(() => {\r\n              Alert.alert(\r\n                'Booking Confirmed!',\r\n                `Your appointment with ${selectedBarber.name} on ${format(new Date(selectedDate), 'MMMM d')} at ${selectedTime} has been booked successfully.`,\r\n                [{ text: 'OK' }]\r\n              );\r\n            }, 100);\r\n          } catch (navError) {\r\n            console.error('Navigation error:', navError);\r\n            // If navigation fails, at least show the success message\r\n            Alert.alert(\r\n              'Booking Confirmed!',\r\n              `Your appointment with ${selectedBarber.name} on ${format(new Date(selectedDate), 'MMMM d')} at ${selectedTime} has been booked successfully.`,\r\n              [{ text: 'OK' }]\r\n            );\r\n          }\r\n        }, 100);\r\n      } else {\r\n        throw new Error(response?.data?.message || 'Unknown booking error');\r\n      }\r\n    } catch (error) {\r\n      console.error('Booking error:', error);\r\n      setSubmitting(false);\r\n      Alert.alert('Error', error.message || 'Failed to book appointment. Please try again.');\r\n    }\r\n  };\r\n  \r\n  // Debug button\r\n  const debugSalonAndStaff = async (salonId) => {\r\n    try {\r\n      console.log(`Debug: Fetching detailed data for salon ${salonId}`);\r\n      \r\n      // Fetch salon details\r\n      const salonResponse = await apiClient.get(`/salons/${salonId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo?.token}`\r\n        }\r\n      });\r\n      \r\n      const salonData = salonResponse.data;\r\n      console.log('Raw salon data:', JSON.stringify(salonData));\r\n      \r\n      // Get staff IDs\r\n      let staffIds = [];\r\n      let staffDetails = '';\r\n      \r\n      if (salonData.salon && salonData.salon.staff) {\r\n        console.log('Staff array length:', salonData.salon.staff.length);\r\n        console.log('Staff array type:', typeof salonData.salon.staff);\r\n        console.log('Staff array:', JSON.stringify(salonData.salon.staff));\r\n        \r\n        // Extract staff IDs\r\n        staffIds = salonData.salon.staff.map(staff => \r\n          typeof staff === 'object' ? staff._id : staff\r\n        );\r\n        \r\n        // Log staff members\r\n        salonData.salon.staff.forEach((staffMember, idx) => {\r\n          console.log(`Staff #${idx}:`, JSON.stringify(staffMember));\r\n          if (typeof staffMember === 'object') {\r\n            const role = staffMember.role || 'unknown';\r\n            staffDetails += `${idx+1}. ${staffMember.name}: role=${role}\\n`;\r\n          } else {\r\n            staffDetails += `${idx+1}. ID only: ${staffMember}\\n`;\r\n          }\r\n        });\r\n      }\r\n      \r\n      // Always fetch all users to compare\r\n      try {\r\n        const usersResponse = await apiClient.get('/users', {\r\n          headers: {\r\n            Authorization: `Bearer ${userInfo?.token}`\r\n          }\r\n        });\r\n        \r\n        const usersData = usersResponse.data;\r\n        \r\n        if (usersData.success && usersData.users) {\r\n          // Find users who are in this salon's staff\r\n          const salonStaff = usersData.users.filter(user => \r\n            staffIds.includes(user._id)\r\n          );\r\n          \r\n          console.log(`Found ${salonStaff.length} staff members through user lookup`);\r\n          \r\n          // Count barbers specifically\r\n          const potentialBarbers = salonStaff.filter(user => {\r\n            const roleCheck = (user.role || '').toLowerCase();\r\n            const isBarber = roleCheck === 'barber' || \r\n                           roleCheck.includes('barber') || \r\n                           roleCheck === 'stylist';\r\n            console.log(`User ${user.name}, role=${user.role}, isBarber=${isBarber}`);\r\n            return isBarber;\r\n          });\r\n          \r\n          console.log(`Found ${potentialBarbers.length} potential barbers`);\r\n          \r\n          salonStaff.forEach((staff, idx) => {\r\n            const role = staff.role || 'unknown';\r\n            const isValidBarber = (role.toLowerCase() === 'barber' || \r\n                                 role.toLowerCase().includes('barber') || \r\n                                 role.toLowerCase() === 'stylist');\r\n            staffDetails += `${idx+1}. ${staff.name}: role=${role} (${isValidBarber ? 'Valid Barber' : 'Not a Barber'})\\n`;\r\n          });\r\n        }\r\n      } catch (userError) {\r\n        console.error('Error fetching users for debug:', userError);\r\n        staffDetails += '(Error fetching user details)\\n';\r\n      }\r\n      \r\n      // Show alert with details\r\n      Alert.alert(\r\n        'Debug Info', \r\n        `Salon: ${salonData.salon.name}\\n` +\r\n        `Staff count: ${salonData.salon.staff ? salonData.salon.staff.length : 0}\\n\\n` +\r\n        `Staff:\\n${staffDetails || 'No staff details available'}`\r\n      );\r\n    } catch (err) {\r\n      console.error('Debug fetch error:', err);\r\n      Alert.alert('Debug Error', err.toString());\r\n    }\r\n  };\r\n  \r\n  // Test navigation function\r\n  const testNavigation = () => {\r\n    console.log('Testing navigation to Appointments screen');\r\n    try {\r\n      navigation.navigate('Appointments');\r\n      console.log('Navigation successful');\r\n    } catch (error) {\r\n      console.error('Navigation error:', error);\r\n      \r\n      // Try alternative navigation\r\n      try {\r\n        console.log('Trying alternative navigation');\r\n        navigation.reset({\r\n          index: 0,\r\n          routes: [{ name: 'Appointments' }],\r\n        });\r\n        console.log('Alternative navigation successful');\r\n      } catch (resetError) {\r\n        console.error('Alternative navigation error:', resetError);\r\n        Alert.alert('Navigation Failed', 'Could not navigate to Appointments screen');\r\n      }\r\n    }\r\n  };\r\n  \r\n  const renderSalonSelection = () => (\r\n    <View style={styles.section}>\r\n      <Text style={styles.sectionTitle}>Select Salon</Text>\r\n      {salons.length === 0 && !loading ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyText}>No salons available.</Text>\r\n        </View>\r\n      ) : (\r\n        <View style={styles.salonList}>\r\n          {salons.map(salon => (\r\n            <TouchableOpacity\r\n              key={salon._id}\r\n              style={[\r\n                styles.salonCard,\r\n                selectedSalon && selectedSalon._id === salon._id ? styles.selectedSalonCard : null\r\n              ]}\r\n              onPress={() => handleSalonSelect(salon)}\r\n            >\r\n              <Avatar.Icon \r\n                size={60} \r\n                icon=\"store\" \r\n                backgroundColor=\"#0F4C75\" \r\n                style={styles.salonIcon}\r\n              />\r\n              <View style={styles.salonInfo}>\r\n                <Title style={styles.salonName}>{salon.name}</Title>\r\n                <Paragraph style={styles.salonAddress}>\r\n                  {salon.address && salon.address.street ? (\r\n                    <Text>{salon.address.street}, {salon.address.city}</Text>\r\n                  ) : (\r\n                    <Text>Address not available</Text>\r\n                  )}\r\n                </Paragraph>\r\n                <Paragraph style={styles.salonPhone}>\r\n                  <Text>{salon.phone || 'Phone not available'}</Text>\r\n                </Paragraph>\r\n              </View>\r\n              {selectedSalon && selectedSalon._id === salon._id && (\r\n                <View style={styles.selectedIndicator}>\r\n                  <Chip mode=\"flat\" style={styles.selectedChip}>Selected</Chip>\r\n                </View>\r\n              )}\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n      )}\r\n      \r\n      {/* Debug button */}\r\n      <View style={styles.debugContainer}>\r\n        <Button\r\n          mode=\"outlined\"\r\n          style={styles.debugButton}\r\n          onPress={() => {\r\n            if (salons && salons.length > 0) {\r\n              const salonId = salons[0]._id;\r\n              debugSalonAndStaff(salonId);\r\n            } else {\r\n              Alert.alert('Debug Info', 'No salons to debug');\r\n            }\r\n          }}\r\n        >\r\n          Debug Salon Data\r\n        </Button>\r\n      </View>\r\n    </View>\r\n  );\r\n  \r\n  const renderBarberSelection = () => (\r\n    <View style={styles.section}>\r\n      <View style={styles.sectionHeader}>\r\n        <Text style={styles.sectionTitle}>Select Barber</Text>\r\n        <Button \r\n          mode=\"outlined\" \r\n          onPress={() => setStep(1)}\r\n          compact\r\n        >\r\n          Change Salon\r\n        </Button>\r\n      </View>\r\n      \r\n      {error ? (\r\n        <View style={styles.errorContainer}>\r\n          <Text style={styles.errorText}>{error}</Text>\r\n        </View>\r\n      ) : loading ? (\r\n        <View style={styles.centeredContent}>\r\n          <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n          <Text style={styles.loadingText}>Loading barbers...</Text>\r\n        </View>\r\n      ) : barbers.length === 0 ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyText}>No barbers available for this salon.</Text>\r\n          <Button \r\n            mode=\"contained\" \r\n            onPress={() => setStep(1)}\r\n            style={styles.changeButton}\r\n          >\r\n            Select Different Salon\r\n          </Button>\r\n        </View>\r\n      ) : (\r\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.barberScroll}>\r\n          {barbers.map(barber => {\r\n            // Calculate barber availability status\r\n            const hasWorkSchedule = barber.workSchedule && barber.workSchedule.length > 0;\r\n            const today = new Date().getDay(); // 0 = Sunday, 1 = Monday, etc.\r\n            const isWorkingToday = hasWorkSchedule && \r\n              barber.workSchedule.some(schedule => \r\n                schedule.day === today && schedule.isWorking\r\n              );\r\n            \r\n            // Calculate barber's weekly schedule\r\n            const weeklySchedule = [];\r\n            const weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n            \r\n            for (let i = 0; i < 7; i++) {\r\n              const isWorking = hasWorkSchedule && \r\n                barber.workSchedule.some(schedule => \r\n                  schedule.day === i && schedule.isWorking\r\n                );\r\n              \r\n              weeklySchedule.push({\r\n                day: weekDays[i],\r\n                isWorking\r\n              });\r\n            }\r\n            \r\n            return (\r\n              <TouchableOpacity\r\n                key={barber._id}\r\n                style={[\r\n                  styles.barberCard,\r\n                  selectedBarber && selectedBarber._id === barber._id ? styles.selectedBarberCard : null\r\n                ]}\r\n                onPress={() => handleBarberSelect(barber)}\r\n              >\r\n                <Avatar.Image \r\n                  size={70} \r\n                  source={{ uri: barber.profileImage || 'https://via.placeholder.com/70' }} \r\n                  style={styles.barberImage}\r\n                />\r\n                <Text style={styles.barberName}>{barber.name}</Text>\r\n                \r\n                {/* Availability indicator */}\r\n                <View style={styles.availabilityContainer}>\r\n                  <View \r\n                    style={[\r\n                      styles.availabilityDot, \r\n                      { backgroundColor: isWorkingToday ? '#4CAF50' : '#F44336' }\r\n                    ]} \r\n                  />\r\n                  <Text style={styles.availabilityText}>\r\n                    {isWorkingToday ? 'Available Today' : 'Unavailable Today'}\r\n                  </Text>\r\n                </View>\r\n                \r\n                {/* Weekly availability */}\r\n                <View style={styles.weeklySchedule}>\r\n                  {weeklySchedule.map((day, index) => (\r\n                    <View key={index} style={styles.dayIndicator}>\r\n                      <Text style={styles.dayText}>{day.day}</Text>\r\n                      <View \r\n                        style={[\r\n                          styles.dayDot, \r\n                          { backgroundColor: day.isWorking ? '#4CAF50' : '#F44336' }\r\n                        ]} \r\n                      />\r\n                    </View>\r\n                  ))}\r\n                </View>\r\n                \r\n                {/* Specialties */}\r\n                {barber.specialties && barber.specialties.length > 0 && (\r\n                  <Text style={styles.specialties} numberOfLines={1}>\r\n                    {barber.specialties.slice(0, 2).join(', ')}\r\n                  </Text>\r\n                )}\r\n              </TouchableOpacity>\r\n            );\r\n          })}\r\n        </ScrollView>\r\n      )}\r\n    </View>\r\n  );\r\n  \r\n  const renderDateSelection = () => {\r\n    // Get current date to disable past dates\r\n    const today = new Date();\r\n    const currentDateString = today.toISOString().split('T')[0];\r\n    \r\n    // Generate marked dates object - disable past dates\r\n    const markedDates = {};\r\n    \r\n    // Mark selected date if there is one\r\n    if (selectedDate) {\r\n      markedDates[selectedDate] = { selected: true, selectedColor: '#0F4C75' };\r\n    }\r\n    \r\n    return (\r\n      <View style={styles.section}>\r\n        <View style={styles.sectionHeader}>\r\n          <Text style={styles.sectionTitle}>Select Date</Text>\r\n          <Button \r\n            mode=\"outlined\" \r\n            onPress={() => setStep(2)}\r\n            compact\r\n          >\r\n            Change Barber\r\n          </Button>\r\n        </View>\r\n        \r\n        <Calendar\r\n          current={currentDateString}\r\n          minDate={currentDateString}\r\n          onDayPress={handleDateSelect}\r\n          markedDates={markedDates}\r\n          theme={{\r\n            selectedDayBackgroundColor: '#0F4C75',\r\n            todayTextColor: '#0F4C75',\r\n            arrowColor: '#0F4C75',\r\n          }}\r\n        />\r\n      </View>\r\n    );\r\n  };\r\n  \r\n  const renderTimeSelection = () => (\r\n    <View style={styles.section}>\r\n      <View style={styles.sectionHeader}>\r\n        <Text style={styles.sectionTitle}>Select Time</Text>\r\n        <Button \r\n          mode=\"outlined\" \r\n          onPress={() => setStep(3)}\r\n          compact\r\n        >\r\n          Change Date\r\n        </Button>\r\n      </View>\r\n      \r\n      {loading ? (\r\n        <View style={styles.centeredContent}>\r\n          <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n          <Text style={styles.loadingText}>Loading available times...</Text>\r\n        </View>\r\n      ) : availableTimes.length === 0 ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyText}>No available time slots for this date.</Text>\r\n          <Text style={styles.emptySubText}>Try selecting a different date or barber.</Text>\r\n          <Button \r\n            mode=\"contained\" \r\n            onPress={() => {\r\n              // Force refresh time slots with fallback\r\n              const timeSlots = [...defaultTimeSlots];\r\n              setAllTimeSlots(timeSlots);\r\n              setAvailableTimes(timeSlots);\r\n            }}\r\n            style={styles.changeButton}\r\n          >\r\n            Force Show All Time Slots\r\n          </Button>\r\n          <Button \r\n            mode=\"contained\" \r\n            onPress={() => setStep(3)}\r\n            style={[styles.changeButton, { marginTop: 10 }]}\r\n          >\r\n            Select Different Date\r\n          </Button>\r\n        </View>\r\n      ) : (\r\n        <View style={styles.timeGrid}>\r\n          {allTimeSlots.map(time => {\r\n            const isAvailable = availableTimes.includes(time);\r\n            \r\n            return (\r\n              <TouchableOpacity\r\n                key={time}\r\n                style={[\r\n                  styles.timeCard,\r\n                  isAvailable ? styles.availableTimeCard : styles.unavailableTimeCard,\r\n                  selectedTime === time ? styles.selectedTimeCard : null\r\n                ]}\r\n                onPress={() => isAvailable && handleTimeSelect(time)}\r\n                disabled={!isAvailable}\r\n              >\r\n                <Text \r\n                  style={[\r\n                    styles.timeText,\r\n                    isAvailable ? styles.availableTimeText : styles.unavailableTimeText,\r\n                    selectedTime === time ? styles.selectedTimeText : null\r\n                  ]}\r\n                >\r\n                  {time}\r\n                </Text>\r\n                <Text style={styles.endTimeText}>\r\n                  {isAvailable ? `- ${getEndTime(time)}` : '(Booked)'}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            );\r\n          })}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n  \r\n  const renderBookingSummary = () => (\r\n    <View style={styles.section}>\r\n      <Text style={styles.sectionTitle}>Booking Summary</Text>\r\n      <Card style={styles.summaryCard}>\r\n        <Card.Content>\r\n          <View style={styles.summaryRow}>\r\n            <Text style={styles.summaryLabel}>Salon:</Text>\r\n            <Text style={styles.summaryValue}>{selectedSalon.name}</Text>\r\n          </View>\r\n          <Divider style={styles.divider} />\r\n          <View style={styles.summaryRow}>\r\n            <Text style={styles.summaryLabel}>Service:</Text>\r\n            <Text style={styles.summaryValue}>{service.name}</Text>\r\n          </View>\r\n          <Divider style={styles.divider} />\r\n          <View style={styles.summaryRow}>\r\n            <Text style={styles.summaryLabel}>Barber:</Text>\r\n            <Text style={styles.summaryValue}>{selectedBarber.name}</Text>\r\n          </View>\r\n          <Divider style={styles.divider} />\r\n          <View style={styles.summaryRow}>\r\n            <Text style={styles.summaryLabel}>Date:</Text>\r\n            <Text style={styles.summaryValue}>{format(new Date(selectedDate), 'MMMM d, yyyy')}</Text>\r\n          </View>\r\n          <Divider style={styles.divider} />\r\n          <View style={styles.summaryRow}>\r\n            <Text style={styles.summaryLabel}>Time:</Text>\r\n            <Text style={styles.summaryValue}>{selectedTime} - {getEndTime(selectedTime)}</Text>\r\n          </View>\r\n          <Divider style={styles.divider} />\r\n          <View style={styles.summaryRow}>\r\n            <Text style={styles.summaryLabel}>Price:</Text>\r\n            <Text style={styles.summaryValue}>${service.price}</Text>\r\n          </View>\r\n        </Card.Content>\r\n      </Card>\r\n      \r\n      <Button \r\n        mode=\"contained\" \r\n        style={[\r\n          styles.bookButton, \r\n          { \r\n            backgroundColor: '#3F51B5', \r\n            height: 65, \r\n            margin: 20,\r\n            borderRadius: 10,\r\n            elevation: 10\r\n          }\r\n        ]}\r\n        contentStyle={{ height: 65 }}\r\n        loading={submitting}\r\n        disabled={submitting}\r\n        labelStyle={{ fontSize: 18, fontWeight: 'bold', color: 'white' }}\r\n        onPress={handleBooking}\r\n      >\r\n        CONFIRM APPOINTMENT\r\n      </Button>\r\n    </View>\r\n  );\r\n  \r\n  if (loading && salons.length === 0) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n        <Text style={{ marginTop: 10 }}>Loading salons...</Text>\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Book Appointment</Text>\r\n      </View>\r\n      \r\n      {/* Service Details */}\r\n      <Card style={styles.serviceCard}>\r\n        <Card.Content>\r\n          <Title>{service.name}</Title>\r\n          <View style={styles.serviceDetails}>\r\n            <Paragraph style={styles.price}>${service.price}</Paragraph>\r\n            <Paragraph style={styles.duration}>{service.duration} min</Paragraph>\r\n          </View>\r\n          <Paragraph>{service.description}</Paragraph>\r\n        </Card.Content>\r\n      </Card>\r\n      \r\n      {/* Booking progress indicator */}\r\n      <View style={styles.progressContainer}>\r\n        <View style={styles.progressItem}>\r\n          <View style={[styles.progressDot, step >= 1 ? styles.progressActive : null]}>\r\n            <Text style={styles.progressNumber}>1</Text>\r\n          </View>\r\n          <Text style={styles.progressText}>Salon</Text>\r\n        </View>\r\n        <View style={styles.progressLine} />\r\n        <View style={styles.progressItem}>\r\n          <View style={[styles.progressDot, step >= 2 ? styles.progressActive : null]}>\r\n            <Text style={styles.progressNumber}>2</Text>\r\n          </View>\r\n          <Text style={styles.progressText}>Barber</Text>\r\n        </View>\r\n        <View style={styles.progressLine} />\r\n        <View style={styles.progressItem}>\r\n          <View style={[styles.progressDot, step >= 3 ? styles.progressActive : null]}>\r\n            <Text style={styles.progressNumber}>3</Text>\r\n          </View>\r\n          <Text style={styles.progressText}>Date</Text>\r\n        </View>\r\n        <View style={styles.progressLine} />\r\n        <View style={styles.progressItem}>\r\n          <View style={[styles.progressDot, step >= 4 ? styles.progressActive : null]}>\r\n            <Text style={styles.progressNumber}>4</Text>\r\n          </View>\r\n          <Text style={styles.progressText}>Time</Text>\r\n        </View>\r\n      </View>\r\n      \r\n      {/* Current step content */}\r\n      {step === 1 && renderSalonSelection()}\r\n      {step === 2 && renderBarberSelection()}\r\n      {step === 3 && renderDateSelection()}\r\n      {step === 4 && renderTimeSelection()}\r\n      \r\n      {/* Booking Summary & Confirmation */}\r\n      {selectedSalon && selectedBarber && selectedDate && selectedTime && renderBookingSummary()}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  header: {\r\n    backgroundColor: '#0F4C75',\r\n    padding: 20,\r\n    paddingTop: 50,\r\n    paddingBottom: 20,\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  serviceCard: {\r\n    margin: 15,\r\n    elevation: 2,\r\n  },\r\n  serviceDetails: {\r\n    flexDirection: 'row',\r\n    marginVertical: 10,\r\n  },\r\n  price: {\r\n    fontWeight: 'bold',\r\n    marginRight: 15,\r\n  },\r\n  duration: {\r\n    color: '#666',\r\n  },\r\n  // Progress indicator styles\r\n  progressContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n    marginVertical: 15,\r\n  },\r\n  progressItem: {\r\n    alignItems: 'center',\r\n  },\r\n  progressDot: {\r\n    width: 30,\r\n    height: 30,\r\n    borderRadius: 15,\r\n    backgroundColor: '#E0E0E0',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: 5,\r\n  },\r\n  progressActive: {\r\n    backgroundColor: '#0F4C75',\r\n  },\r\n  progressNumber: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n  progressLine: {\r\n    flex: 1,\r\n    height: 2,\r\n    backgroundColor: '#E0E0E0',\r\n    marginHorizontal: 5,\r\n  },\r\n  progressText: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  },\r\n  section: {\r\n    padding: 15,\r\n    marginBottom: 10,\r\n  },\r\n  sectionHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 15,\r\n  },\r\n  // Salon selection styles\r\n  salonList: {\r\n    marginTop: 10,\r\n  },\r\n  salonCard: {\r\n    flexDirection: 'row',\r\n    backgroundColor: 'white',\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n    elevation: 2,\r\n    alignItems: 'center',\r\n  },\r\n  selectedSalonCard: {\r\n    backgroundColor: '#E1F5FE',\r\n    borderWidth: 1,\r\n    borderColor: '#0F4C75',\r\n  },\r\n  salonIcon: {\r\n    marginRight: 10,\r\n  },\r\n  salonInfo: {\r\n    flex: 1,\r\n  },\r\n  salonName: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  salonAddress: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n    marginBottom: 3,\r\n  },\r\n  salonPhone: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  },\r\n  selectedIndicator: {\r\n    marginLeft: 10,\r\n  },\r\n  selectedChip: {\r\n    backgroundColor: '#0F4C75',\r\n  },\r\n  // Barber selection styles\r\n  barberScroll: {\r\n    marginTop: 10,\r\n    paddingBottom: 5,\r\n  },\r\n  barberCard: {\r\n    width: 160,\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginRight: 10,\r\n    alignItems: 'center',\r\n    elevation: 2,\r\n  },\r\n  selectedBarberCard: {\r\n    backgroundColor: '#E1F5FE',\r\n    borderWidth: 1,\r\n    borderColor: '#0F4C75',\r\n  },\r\n  barberImage: {\r\n    marginBottom: 10,\r\n  },\r\n  barberName: {\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    marginBottom: 5,\r\n  },\r\n  availabilityContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginVertical: 5,\r\n  },\r\n  availabilityDot: {\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: 4,\r\n    marginRight: 5,\r\n  },\r\n  availabilityText: {\r\n    fontSize: 10,\r\n    color: '#666',\r\n  },\r\n  specialties: {\r\n    fontSize: 10,\r\n    color: '#666',\r\n    textAlign: 'center',\r\n  },\r\n  // Time selection styles\r\n  timeGrid: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n    marginTop: 10,\r\n  },\r\n  timeCard: {\r\n    width: '30%',\r\n    backgroundColor: 'white',\r\n    padding: 15,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n    elevation: 1,\r\n  },\r\n  selectedTimeCard: {\r\n    backgroundColor: '#0F4C75',\r\n  },\r\n  timeText: {\r\n    color: '#333',\r\n  },\r\n  endTimeText: {\r\n    color: '#666',\r\n  },\r\n  availableTimeCard: {\r\n    backgroundColor: '#4CAF50',\r\n  },\r\n  unavailableTimeCard: {\r\n    backgroundColor: '#F44336',\r\n  },\r\n  availableTimeText: {\r\n    color: 'white',\r\n  },\r\n  unavailableTimeText: {\r\n    color: 'white',\r\n  },\r\n  selectedTimeText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n  noTimesText: {\r\n    textAlign: 'center',\r\n    color: '#666',\r\n    marginTop: 20,\r\n  },\r\n  // Summary styles\r\n  summaryCard: {\r\n    marginBottom: 20,\r\n  },\r\n  summaryRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    paddingVertical: 10,\r\n  },\r\n  summaryLabel: {\r\n    fontWeight: 'bold',\r\n  },\r\n  summaryValue: {\r\n    textAlign: 'right',\r\n  },\r\n  divider: {\r\n    backgroundColor: '#e0e0e0',\r\n  },\r\n  bookButton: {\r\n    padding: 10,\r\n    marginTop: 20,\r\n    borderRadius: 8,\r\n    elevation: 8,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 4,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 4.65,\r\n  },\r\n  errorContainer: {\r\n    padding: 10,\r\n    backgroundColor: '#FFCCCC',\r\n    borderWidth: 1,\r\n    borderColor: '#FF0000',\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n  },\r\n  errorText: {\r\n    color: '#FF0000',\r\n    fontWeight: 'bold',\r\n  },\r\n  centeredContent: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    color: '#666',\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  emptyText: {\r\n    color: '#666',\r\n    marginBottom: 10,\r\n  },\r\n  changeButton: {\r\n    padding: 10,\r\n  },\r\n  debugContainer: {\r\n    marginTop: 10,\r\n    padding: 10,\r\n    backgroundColor: '#E1F5FE',\r\n    borderRadius: 5,\r\n  },\r\n  debugButton: {\r\n    padding: 10,\r\n  },\r\n  weeklySchedule: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    width: '90%',\r\n    backgroundColor: '#f5f5f5',\r\n    borderRadius: 5,\r\n    padding: 5,\r\n    marginTop: 10,\r\n  },\r\n  dayIndicator: {\r\n    alignItems: 'center',\r\n    padding: 2,\r\n  },\r\n  dayText: {\r\n    fontSize: 10,\r\n    fontWeight: 'bold',\r\n    color: '#666',\r\n    marginBottom: 3,\r\n  },\r\n  dayDot: {\r\n    width: 10,\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  emptySubText: {\r\n    fontSize: 14,\r\n    color: '#888',\r\n    textAlign: 'center',\r\n    marginTop: 5,\r\n    marginBottom: 15,\r\n  },\r\n  buttonContent: {\r\n    height: 60,\r\n    paddingVertical: 10,\r\n  },\r\n});\r\n\r\nexport default BookingScreen; ","import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, FlatList, RefreshControl, Alert, TextInput } from 'react-native';\r\nimport { Text, Card, Title, Paragraph, Button, ActivityIndicator, Chip, FAB, Divider, Banner, Dialog, Portal } from 'react-native-paper';\r\nimport { format } from 'date-fns';\r\nimport { appointmentsApi } from '../../api/client';\r\n\r\n// Sample appointments for fallback if API fails\r\nconst sampleAppointments = [\r\n  {\r\n    _id: '1',\r\n    service: {\r\n      _id: '101',\r\n      name: 'Classic Haircut',\r\n      price: 25,\r\n      duration: 30\r\n    },\r\n    barber: {\r\n      _id: '201',\r\n      name: 'John Barber'\r\n    },\r\n    date: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000).toISOString(), // 2 days from now\r\n    startTime: '10:00',\r\n    endTime: '10:30',\r\n    status: 'confirmed'\r\n  },\r\n  {\r\n    _id: '2',\r\n    service: {\r\n      _id: '102',\r\n      name: 'Beard Trim',\r\n      price: 15,\r\n      duration: 20\r\n    },\r\n    barber: {\r\n      _id: '202',\r\n      name: 'Mike Scissors'\r\n    },\r\n    date: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000).toISOString(), // 5 days from now\r\n    startTime: '14:00',\r\n    endTime: '14:20',\r\n    status: 'pending'\r\n  },\r\n  {\r\n    _id: '3',\r\n    service: {\r\n      _id: '103',\r\n      name: 'Premium Package',\r\n      price: 45,\r\n      duration: 60\r\n    },\r\n    barber: {\r\n      _id: '203',\r\n      name: 'Sarah Style'\r\n    },\r\n    date: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(), // 3 days ago\r\n    startTime: '11:00',\r\n    endTime: '12:00',\r\n    status: 'completed'\r\n  },\r\n  {\r\n    _id: '4',\r\n    service: {\r\n      _id: '104',\r\n      name: 'Hair Coloring',\r\n      price: 60,\r\n      duration: 90\r\n    },\r\n    barber: {\r\n      _id: '204',\r\n      name: 'Alex Color'\r\n    },\r\n    date: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(), // 7 days ago\r\n    startTime: '09:00',\r\n    endTime: '10:30',\r\n    status: 'cancelled'\r\n  }\r\n];\r\n\r\nconst AppointmentsScreen = ({ navigation }) => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('upcoming'); // 'upcoming' or 'past'\r\n  const [usingSampleData, setUsingSampleData] = useState(false);\r\n  const [cancellationReason, setCancellationReason] = useState('');\r\n  const [dialogVisible, setDialogVisible] = useState(false);\r\n  const [appointmentToCancel, setAppointmentToCancel] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    fetchAppointments();\r\n    \r\n    // Refresh appointments when screen is focused\r\n    const unsubscribe = navigation.addListener('focus', () => {\r\n      fetchAppointments();\r\n    });\r\n    \r\n    return unsubscribe;\r\n  }, [navigation]);\r\n  \r\n  const fetchAppointments = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      setUsingSampleData(false);\r\n      \r\n      console.log('Fetching appointments...');\r\n      const response = await appointmentsApi.getUserAppointments();\r\n      \r\n      if (response.data.appointments && response.data.appointments.length > 0) {\r\n        console.log(`Received ${response.data.appointments.length} appointments from API`);\r\n        // Log the status of each appointment to debug\r\n        response.data.appointments.forEach(app => {\r\n          console.log(`Appointment ${app._id}: status=${app.status}, date=${new Date(app.date).toDateString()}`);\r\n        });\r\n        setAppointments(response.data.appointments);\r\n      } else {\r\n        console.log('No appointments found or empty response, using sample data');\r\n        setAppointments(sampleAppointments);\r\n        setUsingSampleData(true);\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching appointments:', error);\r\n      setError('Failed to load appointments from server. Showing sample data instead.');\r\n      // Use sample data if API fails\r\n      setAppointments(sampleAppointments);\r\n      setUsingSampleData(true);\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const onRefresh = async () => {\r\n    setRefreshing(true);\r\n    await fetchAppointments();\r\n    setRefreshing(false);\r\n  };\r\n  \r\n  const promptCancellation = (appointmentId) => {\r\n    // Find the appointment to get more details for a better user experience\r\n    const appointment = appointments.find(app => app._id === appointmentId);\r\n    setAppointmentToCancel(appointmentId);\r\n    setDialogVisible(true);\r\n    setCancellationReason('');\r\n    \r\n    // Debug info\r\n    console.log(`Prompted cancellation for appointment ${appointmentId}`);\r\n    if (appointment) {\r\n      console.log(`Appointment details: ${appointment.service.name} on ${format(new Date(appointment.date), 'MMM d')}`);\r\n    }\r\n  };\r\n  \r\n  const cancelAppointment = async (appointmentId, reason) => {\r\n    try {\r\n      setLoading(true);\r\n      console.log(`Cancelling appointment ${appointmentId} with reason: ${reason || 'No reason provided'}`);\r\n      \r\n      // If using sample data, just update the local state\r\n      if (usingSampleData) {\r\n        console.log('Using sample data, updating locally');\r\n        const updatedAppointments = appointments.map(appointment => \r\n          appointment._id === appointmentId \r\n            ? { ...appointment, status: 'cancelled', cancellationReason: reason }\r\n            : appointment\r\n        );\r\n        setAppointments(updatedAppointments);\r\n        setLoading(false);\r\n        Alert.alert('Success', 'Appointment cancelled successfully');\r\n        return;\r\n      }\r\n      \r\n      // Otherwise, call the API\r\n      console.log('Sending cancellation request with reason:', reason);\r\n      const response = await appointmentsApi.cancelAppointment(appointmentId, { cancellationReason: reason });\r\n      console.log('Cancel appointment response:', response.data);\r\n      \r\n      if (response.data && response.data.success) {\r\n        Alert.alert('Success', 'Appointment cancelled successfully');\r\n        // Reload appointments to get updated status\r\n        await fetchAppointments();\r\n      } else {\r\n        console.error('Failed to cancel appointment:', response.data);\r\n        Alert.alert('Error', response.data?.message || 'Failed to cancel appointment');\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cancelling appointment:', error);\r\n      Alert.alert('Error', error.response?.data?.message || 'Failed to cancel appointment. Please try again.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Add a new deleteAppointment function\r\n  const deleteAppointment = async (appointmentId) => {\r\n    try {\r\n      setLoading(true);\r\n      console.log(`Deleting appointment ${appointmentId}`);\r\n      \r\n      // If using sample data, just update the local state\r\n      if (usingSampleData) {\r\n        console.log('Using sample data, updating locally');\r\n        const updatedAppointments = appointments.filter(appointment => \r\n          appointment._id !== appointmentId\r\n        );\r\n        setAppointments(updatedAppointments);\r\n        setLoading(false);\r\n        Alert.alert('Success', 'Appointment deleted successfully');\r\n        return;\r\n      }\r\n      \r\n      // Otherwise, call the API\r\n      console.log('Sending delete request');\r\n      const response = await appointmentsApi.deleteAppointment(appointmentId);\r\n      console.log('Delete appointment response:', response.data);\r\n      \r\n      if (response.data && response.data.success) {\r\n        Alert.alert('Success', 'Appointment deleted successfully');\r\n        // Reload appointments to refresh the list\r\n        await fetchAppointments();\r\n      } else {\r\n        console.error('Failed to delete appointment:', response.data);\r\n        Alert.alert('Error', response.data?.message || 'Failed to delete appointment');\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting appointment:', error);\r\n      Alert.alert('Error', error.response?.data?.message || 'Failed to delete appointment. Please try again.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Add a function to prompt for deletion confirmation\r\n  const promptDelete = (appointmentId) => {\r\n    // Find the appointment to get more details for a better user experience\r\n    const appointment = appointments.find(app => app._id === appointmentId);\r\n    \r\n    Alert.alert(\r\n      'Delete Appointment',\r\n      `Are you sure you want to delete this appointment${appointment ? ` for ${appointment.service.name}` : ''}?`,\r\n      [\r\n        {\r\n          text: 'Cancel',\r\n          style: 'cancel'\r\n        },\r\n        {\r\n          text: 'Delete',\r\n          onPress: () => deleteAppointment(appointmentId),\r\n          style: 'destructive'\r\n        }\r\n      ]\r\n    );\r\n    \r\n    // Debug info\r\n    console.log(`Prompted deletion for appointment ${appointmentId}`);\r\n  };\r\n  \r\n  // Filter appointments by upcoming or past\r\n  const filteredAppointments = appointments.filter(appointment => {\r\n    const appointmentDate = new Date(appointment.date);\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    if (activeTab === 'upcoming') {\r\n      return appointmentDate >= today || \r\n             (appointmentDate.getDate() === today.getDate() && \r\n              appointment.status !== 'completed' && \r\n              appointment.status !== 'cancelled');\r\n    } else {\r\n      return appointmentDate < today || \r\n             appointment.status === 'completed' || \r\n             appointment.status === 'cancelled';\r\n    }\r\n  }).sort((a, b) => {\r\n    // Sort by date\r\n    const dateA = new Date(a.date);\r\n    const dateB = new Date(b.date);\r\n    \r\n    if (activeTab === 'upcoming') {\r\n      return dateA - dateB; // Ascending for upcoming\r\n    } else {\r\n      return dateB - dateA; // Descending for past\r\n    }\r\n  });\r\n  \r\n  const renderAppointmentItem = ({ item }) => {\r\n    // Improved date comparison\r\n    const appointmentDate = new Date(item.date);\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0); // Set to start of day\r\n    \r\n    const isPast = appointmentDate < today || \r\n                  item.status === 'completed' || \r\n                  item.status === 'cancelled';\r\n    \r\n    const canCancel = !isPast && \r\n                     (item.status === 'confirmed' || item.status === 'pending');\r\n    \r\n    console.log(`Appointment ${item._id}: date=${appointmentDate.toDateString()}, status=${item.status}, isPast=${isPast}, canCancel=${canCancel}`);\r\n    \r\n    return (\r\n      <Card style={[styles.card, isPast && styles.pastCard]}>\r\n        <Card.Content>\r\n          <View style={styles.headerRow}>\r\n            <Title>{item.service.name}</Title>\r\n            {canCancel && (\r\n              <Chip \r\n                mode=\"outlined\" \r\n                style={styles.actionChip}\r\n                textStyle={{color: '#F44336'}}\r\n              >\r\n                Cancellable\r\n              </Chip>\r\n            )}\r\n          </View>\r\n          \r\n          <View style={styles.row}>\r\n            <Text style={styles.label}>Date:</Text>\r\n            <Text>{format(new Date(item.date), 'MMMM d, yyyy')}</Text>\r\n          </View>\r\n          <View style={styles.row}>\r\n            <Text style={styles.label}>Time:</Text>\r\n            <Text>{item.startTime} - {item.endTime}</Text>\r\n          </View>\r\n          <View style={styles.row}>\r\n            <Text style={styles.label}>Barber:</Text>\r\n            <Text style={styles.barberName}>{item.barber.name}</Text>\r\n          </View>\r\n          <View style={styles.row}>\r\n            <Text style={styles.label}>Price:</Text>\r\n            <Text>${item.service.price}</Text>\r\n          </View>\r\n          \r\n          <View style={styles.statusContainer}>\r\n            <Chip\r\n              style={{\r\n                backgroundColor: \r\n                  item.status === 'confirmed' ? '#4CAF50' :\r\n                  item.status === 'pending' ? '#FFC107' :\r\n                  item.status === 'completed' ? '#3282B8' : '#F44336'\r\n              }}\r\n              textStyle={{ color: 'white' }}\r\n            >\r\n              {item.status.toUpperCase()}\r\n            </Chip>\r\n          </View>\r\n          \r\n          <View style={styles.buttonContainer}>\r\n            {canCancel && (\r\n              <Button\r\n                mode=\"contained\"\r\n                style={styles.cancelButton}\r\n                icon=\"close\"\r\n                color=\"#F44336\"\r\n                onPress={() => promptCancellation(item._id)}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            )}\r\n            \r\n            {/* Add delete button */}\r\n            <Button\r\n              mode=\"outlined\"\r\n              style={styles.deleteButton}\r\n              icon=\"delete\"\r\n              color=\"#FF5722\"\r\n              onPress={() => promptDelete(item._id)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </View>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  };\r\n  \r\n  if (loading && !refreshing) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>My Appointments</Text>\r\n      </View>\r\n      \r\n      <View style={styles.tabContainer}>\r\n        <Button\r\n          mode={activeTab === 'upcoming' ? 'contained' : 'outlined'}\r\n          onPress={() => setActiveTab('upcoming')}\r\n          style={styles.tabButton}\r\n        >\r\n          Upcoming\r\n        </Button>\r\n        <Button\r\n          mode={activeTab === 'past' ? 'contained' : 'outlined'}\r\n          onPress={() => setActiveTab('past')}\r\n          style={styles.tabButton}\r\n        >\r\n          Past\r\n        </Button>\r\n      </View>\r\n      \r\n      <Divider />\r\n      \r\n      {usingSampleData && (\r\n        <Banner\r\n          visible={true}\r\n          icon=\"information\"\r\n          actions={[\r\n            {\r\n              label: 'Retry',\r\n              onPress: fetchAppointments,\r\n            },\r\n          ]}\r\n        >\r\n          Showing demo appointments. Tap \"Retry\" to attempt loading from server.\r\n        </Banner>\r\n      )}\r\n      \r\n      {error ? (\r\n        <Banner\r\n          visible={true}\r\n          icon=\"alert\"\r\n          actions={[\r\n            {\r\n              label: 'Retry',\r\n              onPress: fetchAppointments,\r\n            },\r\n          ]}\r\n        >\r\n          {error}\r\n        </Banner>\r\n      ) : (\r\n        <>\r\n          <FlatList\r\n            data={filteredAppointments}\r\n            renderItem={renderAppointmentItem}\r\n            keyExtractor={(item) => item._id}\r\n            contentContainerStyle={styles.appointmentsList}\r\n            refreshControl={\r\n              <RefreshControl\r\n                refreshing={refreshing}\r\n                onRefresh={onRefresh}\r\n                colors={['#0F4C75']}\r\n              />\r\n            }\r\n            ListEmptyComponent={\r\n              <View style={styles.emptyContainer}>\r\n                <Text style={styles.emptyText}>\r\n                  {activeTab === 'upcoming'\r\n                    ? \"You don't have any upcoming appointments\"\r\n                    : \"You don't have any past appointments\"}\r\n                </Text>\r\n                {activeTab === 'upcoming' && (\r\n                  <Button\r\n                    mode=\"contained\"\r\n                    style={styles.bookButton}\r\n                    onPress={() => navigation.navigate('Services')}\r\n                  >\r\n                    Book an Appointment\r\n                  </Button>\r\n                )}\r\n              </View>\r\n            }\r\n          />\r\n          \r\n          {activeTab === 'upcoming' && (\r\n            <FAB\r\n              style={styles.fab}\r\n              icon=\"plus\"\r\n              label=\"Book\"\r\n              onPress={() => navigation.navigate('Services')}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n      \r\n      <Portal>\r\n        <Dialog visible={dialogVisible} onDismiss={() => setDialogVisible(false)}>\r\n          <Dialog.Title style={styles.dialogTitle}>Confirm Cancellation</Dialog.Title>\r\n          <Dialog.Content>\r\n            <Text style={styles.dialogText}>\r\n              Are you sure you want to cancel this appointment? This action cannot be undone.\r\n            </Text>\r\n            <Text style={styles.dialogSubText}>\r\n              Please provide a reason for cancelling (optional):\r\n            </Text>\r\n            <TextInput\r\n              style={styles.input}\r\n              value={cancellationReason}\r\n              onChangeText={setCancellationReason}\r\n              placeholder=\"e.g., Schedule conflict, illness, etc.\"\r\n              multiline\r\n            />\r\n          </Dialog.Content>\r\n          <Dialog.Actions>\r\n            <Button onPress={() => setDialogVisible(false)} style={styles.dialogButton}>Go Back</Button>\r\n            <Button \r\n              onPress={() => {\r\n                setDialogVisible(false);\r\n                cancelAppointment(appointmentToCancel, cancellationReason);\r\n              }}\r\n              mode=\"contained\"\r\n              color=\"#F44336\"\r\n              style={styles.dialogConfirmButton}\r\n            >\r\n              Confirm Cancellation\r\n            </Button>\r\n          </Dialog.Actions>\r\n        </Dialog>\r\n      </Portal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  errorText: {\r\n    color: '#d32f2f',\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n  },\r\n  header: {\r\n    backgroundColor: '#0F4C75',\r\n    padding: 20,\r\n    paddingTop: 50,\r\n    paddingBottom: 20,\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n  tabContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    padding: 10,\r\n    backgroundColor: 'white',\r\n  },\r\n  tabButton: {\r\n    flex: 1,\r\n    margin: 5,\r\n  },\r\n  appointmentsList: {\r\n    padding: 15,\r\n    paddingBottom: 80, // Add extra padding at bottom for FAB\r\n  },\r\n  card: {\r\n    marginBottom: 15,\r\n    borderRadius: 10,\r\n    elevation: 3,\r\n  },\r\n  pastCard: {\r\n    opacity: 0.8,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginVertical: 5,\r\n  },\r\n  label: {\r\n    fontWeight: 'bold',\r\n    color: '#666',\r\n  },\r\n  statusContainer: {\r\n    marginTop: 10,\r\n    marginBottom: 15,\r\n    alignItems: 'flex-start',\r\n  },\r\n  cancelButton: {\r\n    marginTop: 15,\r\n    borderColor: '#F44336',\r\n    backgroundColor: '#F44336',\r\n    padding: 5,\r\n    marginHorizontal: 20,\r\n  },\r\n  emptyContainer: {\r\n    padding: 20,\r\n    alignItems: 'center',\r\n  },\r\n  emptyText: {\r\n    fontSize: 16,\r\n    color: 'gray',\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n  },\r\n  bookButton: {\r\n    marginTop: 10,\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: '#0F4C75',\r\n  },\r\n  dialogTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  dialogText: {\r\n    marginBottom: 10,\r\n  },\r\n  dialogSubText: {\r\n    marginBottom: 10,\r\n  },\r\n  dialogButton: {\r\n    marginRight: 10,\r\n  },\r\n  dialogConfirmButton: {\r\n    marginLeft: 10,\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginTop: 5,\r\n    minHeight: 80,\r\n  },\r\n  barberName: {\r\n    fontWeight: 'bold',\r\n  },\r\n  headerRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  actionChip: {\r\n    borderColor: '#F44336',\r\n    backgroundColor: 'white',\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: 10,\r\n  },\r\n  deleteButton: {\r\n    borderColor: '#FF5722',\r\n    backgroundColor: 'white',\r\n  },\r\n});\r\n\r\nexport default AppointmentsScreen; ","import React, { useState, useContext, useEffect } from 'react';\r\nimport { View, StyleSheet, ScrollView, TouchableOpacity, Alert } from 'react-native';\r\nimport { Text, Avatar, TextInput, Button, Divider, List, Switch, ActivityIndicator, Card } from 'react-native-paper';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { CommonActions } from '@react-navigation/native';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport apiClient from '../../api/client';\r\n\r\nconst ProfileScreen = () => {\r\n  const { userInfo, updateProfile, logout, isLoading } = useContext(AuthContext);\r\n  const navigation = useNavigation();\r\n  \r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [name, setName] = useState(userInfo?.name || '');\r\n  const [email, setEmail] = useState(userInfo?.email || '');\r\n  const [phone, setPhone] = useState(userInfo?.phone || '');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [notifications, setNotifications] = useState(true);\r\n  const [loggingOut, setLoggingOut] = useState(false);\r\n  \r\n  // Get salon info for managers and barbers\r\n  const [salons, setSalons] = useState([]);\r\n  const [loadingSalons, setLoadingSalons] = useState(false);\r\n  \r\n  // Fetch salons for managers and barbers\r\n  useEffect(() => {\r\n    if (userInfo && (userInfo.role === 'manager' || userInfo.role === 'barber')) {\r\n      fetchSalons();\r\n    }\r\n  }, [userInfo]);\r\n  \r\n  const fetchSalons = async () => {\r\n    try {\r\n      setLoadingSalons(true);\r\n      \r\n      // Different endpoints based on role\r\n      const endpoint = userInfo.role === 'manager' \r\n        ? '/manager/salons' \r\n        : `/users/barber/${userInfo._id}/salons`;\r\n      \r\n      const response = await apiClient.get(endpoint, {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        setSalons(response.data.salons || []);\r\n      } else {\r\n        console.error('Failed to load salons:', response.data);\r\n      }\r\n      \r\n      setLoadingSalons(false);\r\n    } catch (error) {\r\n      console.error('Error fetching salons:', error);\r\n      setLoadingSalons(false);\r\n    }\r\n  };\r\n  \r\n  const handleSaveProfile = async () => {\r\n    // Validate input\r\n    if (!name.trim()) {\r\n      Alert.alert('Error', 'Please enter your name');\r\n      return;\r\n    }\r\n    \r\n    if (password && password !== confirmPassword) {\r\n      Alert.alert('Error', 'Passwords do not match');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const userData = {\r\n        name,\r\n        phone,\r\n      };\r\n      \r\n      // Only include password if it was updated\r\n      if (password) {\r\n        userData.password = password;\r\n      }\r\n      \r\n      // Email can't be updated in this version\r\n      // userData.email = email;\r\n      \r\n      const result = await updateProfile(userData);\r\n      \r\n      if (result.success) {\r\n        Alert.alert('Success', 'Profile updated successfully');\r\n        setIsEditing(false);\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n      } else {\r\n        Alert.alert('Error', result.message || 'Failed to update profile');\r\n      }\r\n    } catch (error) {\r\n      Alert.alert('Error', 'Something went wrong. Please try again.');\r\n      console.error('Profile update error:', error);\r\n    }\r\n  };\r\n  \r\n  const handleLogout = () => {\r\n    // Show immediate feedback\r\n    setLoggingOut(true);\r\n    \r\n    // Skip the context logout and directly handle it\r\n    try {\r\n      // Clear only the essential auth keys, don't touch other app settings\r\n      const keysToRemove = ['userInfo', 'userToken'];\r\n      \r\n      AsyncStorage.multiRemove(keysToRemove, (err) => {\r\n        if (err) {\r\n          console.error('Error removing keys:', err);\r\n        } else {\r\n          console.log('Successfully removed keys');\r\n        }\r\n        \r\n        // In any case, try to navigate away\r\n        try {\r\n          // Use the more direct navigation first\r\n          navigation.reset({\r\n            index: 0,\r\n            routes: [{ name: 'Auth' }]\r\n          });\r\n        } catch (navError) {\r\n          console.error('Navigation reset error:', navError);\r\n          \r\n          // Fallback to simpler navigation\r\n          try {\r\n            navigation.navigate('Login');\r\n          } catch (navError2) {\r\n            console.error('Navigation error:', navError2);\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('General logout error:', error);\r\n      // Still try to navigate away even if there was an error\r\n      navigation.navigate('Login');\r\n    }\r\n  };\r\n  \r\n  if (!userInfo) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Avatar.Image \r\n          size={100} \r\n          source={{ uri: userInfo.profileImage || 'https://via.placeholder.com/100' }} \r\n          style={styles.avatar}\r\n        />\r\n        <Text style={styles.name}>{userInfo.name}</Text>\r\n        <Text style={styles.role}>{userInfo.role.charAt(0).toUpperCase() + userInfo.role.slice(1)}</Text>\r\n        \r\n        {!isEditing && (\r\n          <Button \r\n            mode=\"outlined\" \r\n            style={styles.editButton}\r\n            onPress={() => setIsEditing(true)}\r\n          >\r\n            Edit Profile\r\n          </Button>\r\n        )}\r\n\r\n        {/* Admin Dashboard Button - Only show for admin users or specific email */}\r\n        {userInfo.role === 'admin' || userInfo.email === 'seif.ayadi.3.9.2@gmail.com' ? (\r\n          <Button \r\n            mode=\"contained\" \r\n            style={styles.adminButton}\r\n            onPress={() => navigation.navigate('AdminDashboard')}\r\n          >\r\n            Admin Dashboard\r\n          </Button>\r\n        ) : null}\r\n\r\n        {/* Manager Dashboard Button - Only show for manager users */}\r\n        {userInfo.role === 'manager' ? (\r\n          <>\r\n            <Button \r\n              mode=\"contained\" \r\n              style={styles.adminButton}\r\n              onPress={() => navigation.navigate('ManagerDashboard')}\r\n            >\r\n              Staff Dashboard\r\n            </Button>\r\n            <Button \r\n              mode=\"contained\" \r\n              style={[styles.adminButton, { marginTop: 10 }]}\r\n              onPress={() => navigation.navigate('SalonDashboard')}\r\n            >\r\n              Salon Dashboard\r\n            </Button>\r\n          </>\r\n        ) : null}\r\n      </View>\r\n      \r\n      <View style={styles.content}>\r\n        {isEditing ? (\r\n          <View style={styles.form}>\r\n            <TextInput\r\n              label=\"Name\"\r\n              value={name}\r\n              onChangeText={setName}\r\n              mode=\"outlined\"\r\n              style={styles.input}\r\n            />\r\n            \r\n            <TextInput\r\n              label=\"Email\"\r\n              value={email}\r\n              onChangeText={setEmail}\r\n              mode=\"outlined\"\r\n              style={styles.input}\r\n              disabled\r\n              // Email change is disabled in this version\r\n            />\r\n            \r\n            <TextInput\r\n              label=\"Phone\"\r\n              value={phone}\r\n              onChangeText={setPhone}\r\n              mode=\"outlined\"\r\n              style={styles.input}\r\n              keyboardType=\"phone-pad\"\r\n            />\r\n            \r\n            <TextInput\r\n              label=\"New Password (leave blank to keep current)\"\r\n              value={password}\r\n              onChangeText={setPassword}\r\n              mode=\"outlined\"\r\n              style={styles.input}\r\n              secureTextEntry\r\n            />\r\n            \r\n            <TextInput\r\n              label=\"Confirm New Password\"\r\n              value={confirmPassword}\r\n              onChangeText={setConfirmPassword}\r\n              mode=\"outlined\"\r\n              style={styles.input}\r\n              secureTextEntry\r\n            />\r\n            \r\n            <View style={styles.buttonContainer}>\r\n              <Button \r\n                mode=\"outlined\" \r\n                onPress={() => {\r\n                  setIsEditing(false);\r\n                  setName(userInfo.name);\r\n                  setEmail(userInfo.email);\r\n                  setPhone(userInfo.phone || '');\r\n                  setPassword('');\r\n                  setConfirmPassword('');\r\n                }}\r\n                style={styles.cancelButton}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              \r\n              <Button \r\n                mode=\"contained\" \r\n                onPress={handleSaveProfile}\r\n                loading={isLoading}\r\n                disabled={isLoading}\r\n                style={styles.saveButton}\r\n              >\r\n                Save\r\n              </Button>\r\n            </View>\r\n          </View>\r\n        ) : (\r\n          <>\r\n            <List.Section>\r\n              <List.Subheader>Account Information</List.Subheader>\r\n              <List.Item\r\n                title=\"Email\"\r\n                description={userInfo.email}\r\n                left={props => <List.Icon {...props} icon=\"email\" />}\r\n              />\r\n              <List.Item\r\n                title=\"Phone\"\r\n                description={userInfo.phone || 'Not provided'}\r\n                left={props => <List.Icon {...props} icon=\"phone\" />}\r\n              />\r\n              <Divider />\r\n              \r\n              <List.Subheader>Preferences</List.Subheader>\r\n              <List.Item\r\n                title=\"Notifications\"\r\n                left={props => <List.Icon {...props} icon=\"bell\" />}\r\n                right={() => (\r\n                  <Switch\r\n                    value={notifications}\r\n                    onValueChange={setNotifications}\r\n                    color=\"#0F4C75\"\r\n                  />\r\n                )}\r\n              />\r\n              <Divider />\r\n              \r\n              <List.Subheader>About</List.Subheader>\r\n              <List.Item\r\n                title=\"Terms of Service\"\r\n                left={props => <List.Icon {...props} icon=\"file-document\" />}\r\n                onPress={() => {}}\r\n              />\r\n              <List.Item\r\n                title=\"Privacy Policy\"\r\n                left={props => <List.Icon {...props} icon=\"shield-account\" />}\r\n                onPress={() => {}}\r\n              />\r\n              <List.Item\r\n                title=\"App Version\"\r\n                description=\"1.0.0\"\r\n                left={props => <List.Icon {...props} icon=\"information\" />}\r\n              />\r\n            </List.Section>\r\n          </>\r\n        )}\r\n        \r\n        {/* Salon Section - Only for managers and barbers */}\r\n        {userInfo && (userInfo.role === 'manager' || userInfo.role === 'barber') && (\r\n          <Card style={styles.card}>\r\n            <Card.Title title=\"Your Salons\" />\r\n            <Card.Content>\r\n              {loadingSalons ? (\r\n                <ActivityIndicator size=\"small\" color=\"#0F4C75\" />\r\n              ) : salons.length > 0 ? (\r\n                <View>\r\n                  {salons.map((salon) => (\r\n                    <TouchableOpacity \r\n                      key={salon._id}\r\n                      onPress={() => navigation.navigate('SalonDashboard', { salonId: salon._id })}\r\n                      style={styles.salonItem}\r\n                    >\r\n                      <View style={styles.salonInfo}>\r\n                        <Text style={styles.salonName}>{salon.name}</Text>\r\n                        <Text style={styles.salonAddress}>\r\n                          {salon.address?.street}, {salon.address?.city}\r\n                        </Text>\r\n                      </View>\r\n                      <Ionicons name=\"chevron-forward\" size={20} color=\"#888\" />\r\n                    </TouchableOpacity>\r\n                  ))}\r\n                </View>\r\n              ) : (\r\n                <Text>No salons associated with your account</Text>\r\n              )}\r\n            </Card.Content>\r\n          </Card>\r\n        )}\r\n        \r\n        <TouchableOpacity\r\n          style={styles.directLogoutButton}\r\n          activeOpacity={0.6}\r\n          onPress={() => {\r\n            console.log(\"FORCE LOGOUT - no navigation approach\");\r\n            \r\n            // 1. Clear storage directly\r\n            AsyncStorage.clear();\r\n            \r\n            // 2. For web - force reload the app which will show login screen\r\n            if (typeof window !== 'undefined') {\r\n              console.log(\"Reloading browser\");\r\n              window.location.reload();\r\n              return;\r\n            }\r\n            \r\n            // 3. For native - trigger a state update in parent components\r\n            if (logout) {\r\n              logout();\r\n            }\r\n            \r\n            // 4. Alert the user as a last resort\r\n            Alert.alert(\r\n              \"Logout Complete\", \r\n              \"Please restart the app to complete logout\",\r\n              [{ text: \"OK\" }]\r\n            );\r\n          }}\r\n        >\r\n          <Text style={styles.logoutButtonText}>LOGOUT</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  header: {\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    paddingTop: 50,\r\n    backgroundColor: 'white',\r\n  },\r\n  avatar: {\r\n    marginBottom: 10,\r\n  },\r\n  name: {\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n    color: '#1B262C',\r\n  },\r\n  role: {\r\n    fontSize: 16,\r\n    color: '#3282B8',\r\n    marginBottom: 10,\r\n  },\r\n  editButton: {\r\n    marginVertical: 10,\r\n    borderColor: '#0F4C75',\r\n    borderWidth: 1,\r\n  },\r\n  adminButton: {\r\n    marginTop: 10,\r\n    backgroundColor: '#0F4C75',\r\n  },\r\n  content: {\r\n    padding: 15,\r\n  },\r\n  form: {\r\n    marginVertical: 10,\r\n  },\r\n  input: {\r\n    marginBottom: 15,\r\n    backgroundColor: 'white',\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: 10,\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 10,\r\n  },\r\n  saveButton: {\r\n    flex: 1,\r\n    marginLeft: 10,\r\n  },\r\n  logoutButton: {\r\n    marginVertical: 30,\r\n    borderColor: '#d32f2f',\r\n    borderWidth: 1,\r\n  },\r\n  directLogoutButton: {\r\n    marginVertical: 30,\r\n    borderColor: '#d32f2f',\r\n    borderWidth: 1,\r\n    backgroundColor: '#d32f2f',\r\n    padding: 15,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n  },\r\n  logoutButtonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n  },\r\n  card: {\r\n    marginTop: 10,\r\n  },\r\n  salonItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    paddingVertical: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#eee',\r\n  },\r\n  salonInfo: {\r\n    flex: 1,\r\n  },\r\n  salonName: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  salonAddress: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n    marginTop: 3,\r\n  },\r\n});\r\n\r\nexport default ProfileScreen; ","import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, StyleSheet, FlatList, RefreshControl, Alert, TextInput } from 'react-native';\r\nimport { Text, Card, Title, Button, ActivityIndicator, Chip, Divider, Banner, Dialog, Portal, Menu, IconButton } from 'react-native-paper';\r\nimport { format } from 'date-fns';\r\nimport { appointmentsApi } from '../../api/client';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst BarberAppointmentsScreen = ({ navigation }) => {\r\n  const { userInfo } = useContext(AuthContext);\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('upcoming'); // 'upcoming', 'past', 'today'\r\n  \r\n  // Dialog states\r\n  const [dialogVisible, setDialogVisible] = useState(false);\r\n  const [actionDialogType, setActionDialogType] = useState(''); // 'cancel', 'complete', 'noshow'\r\n  const [actionReason, setActionReason] = useState('');\r\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\r\n  const [menuVisible, setMenuVisible] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchAppointments();\r\n    \r\n    // Refresh appointments when screen is focused\r\n    const unsubscribe = navigation.addListener('focus', () => {\r\n      fetchAppointments();\r\n    });\r\n    \r\n    return unsubscribe;\r\n  }, [navigation]);\r\n  \r\n  const fetchAppointments = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await appointmentsApi.getUserAppointments();\r\n      \r\n      if (response.data.appointments && response.data.appointments.length > 0) {\r\n        setAppointments(response.data.appointments);\r\n      } else {\r\n        setAppointments([]);\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching appointments:', error);\r\n      setError('Failed to load appointments. Please try again.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const onRefresh = async () => {\r\n    setRefreshing(true);\r\n    await fetchAppointments();\r\n    setRefreshing(false);\r\n  };\r\n  \r\n  const openActionDialog = (appointment, type) => {\r\n    setSelectedAppointment(appointment);\r\n    setActionDialogType(type);\r\n    setActionReason('');\r\n    setDialogVisible(true);\r\n    setMenuVisible({});\r\n  };\r\n  \r\n  const performAppointmentAction = async () => {\r\n    if (!selectedAppointment) return;\r\n    \r\n    setDialogVisible(false);\r\n    setLoading(true);\r\n    \r\n    try {\r\n      let response;\r\n      \r\n      switch (actionDialogType) {\r\n        case 'cancel':\r\n          response = await appointmentsApi.cancelAppointment(\r\n            selectedAppointment._id,\r\n            { cancellationReason: actionReason }\r\n          );\r\n          if (response.data.success) {\r\n            Alert.alert('Success', 'Appointment cancelled successfully');\r\n          }\r\n          break;\r\n          \r\n        case 'complete':\r\n          response = await appointmentsApi.updateAppointment(\r\n            selectedAppointment._id, \r\n            { \r\n              status: 'completed',\r\n              notes: actionReason\r\n            }\r\n          );\r\n          if (response.data.success) {\r\n            Alert.alert('Success', 'Appointment marked as completed');\r\n          }\r\n          break;\r\n          \r\n        case 'noshow':\r\n          response = await appointmentsApi.updateAppointment(\r\n            selectedAppointment._id, \r\n            { \r\n              status: 'no-show',\r\n              notes: actionReason\r\n            }\r\n          );\r\n          if (response.data.success) {\r\n            Alert.alert('Success', 'Appointment marked as no-show');\r\n          }\r\n          break;\r\n      }\r\n      \r\n      await fetchAppointments();\r\n    } catch (error) {\r\n      console.error('Error updating appointment:', error);\r\n      Alert.alert('Error', error.response?.data?.message || 'Failed to update appointment');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // First, add a promptDelete function to handle appointment deletion\r\n  const promptDelete = (appointmentId) => {\r\n    // Find the appointment to get more details for a better user experience\r\n    const appointment = appointments.find(app => app._id === appointmentId);\r\n    \r\n    Alert.alert(\r\n      'Delete Appointment',\r\n      `Are you sure you want to delete this appointment${appointment ? ` for ${appointment.service.name}` : ''}? This action cannot be undone.`,\r\n      [\r\n        {\r\n          text: 'Cancel',\r\n          style: 'cancel'\r\n        },\r\n        {\r\n          text: 'Delete',\r\n          onPress: () => deleteAppointment(appointmentId),\r\n          style: 'destructive'\r\n        }\r\n      ]\r\n    );\r\n    \r\n    // Debug info\r\n    console.log(`Prompted deletion for appointment ${appointmentId}`);\r\n  };\r\n\r\n  // Add a function to handle appointment deletion\r\n  const deleteAppointment = async (appointmentId) => {\r\n    try {\r\n      setLoading(true);\r\n      console.log(`Deleting appointment ${appointmentId}`);\r\n      \r\n      // Call the API to delete the appointment\r\n      const response = await appointmentsApi.deleteAppointment(appointmentId);\r\n      console.log('Delete appointment response:', response.data);\r\n      \r\n      if (response.data && response.data.success) {\r\n        Alert.alert('Success', 'Appointment deleted successfully');\r\n        // Reload appointments to refresh the list\r\n        await fetchAppointments();\r\n      } else {\r\n        console.error('Failed to delete appointment:', response.data);\r\n        Alert.alert('Error', response.data?.message || 'Failed to delete appointment');\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting appointment:', error);\r\n      Alert.alert('Error', error.response?.data?.message || 'Failed to delete appointment. Please try again.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Filter appointments by tab\r\n  const filteredAppointments = appointments.filter(appointment => {\r\n    // Improved date comparison\r\n    const appointmentDate = new Date(appointment.date);\r\n    const today = new Date();\r\n    \r\n    // Reset hours for date comparison\r\n    const todayForComparison = new Date();\r\n    todayForComparison.setHours(0, 0, 0, 0);\r\n    \r\n    const appointmentDay = appointmentDate.getDate();\r\n    const appointmentMonth = appointmentDate.getMonth();\r\n    const appointmentYear = appointmentDate.getFullYear();\r\n    \r\n    const todayDay = todayForComparison.getDate();\r\n    const todayMonth = todayForComparison.getMonth();\r\n    const todayYear = todayForComparison.getFullYear();\r\n    \r\n    // Check if the appointment is today\r\n    const isToday = appointmentDay === todayDay && \r\n                    appointmentMonth === todayMonth && \r\n                    appointmentYear === todayYear;\r\n    \r\n    // Check appointment status\r\n    const isCancelled = appointment.status === 'cancelled';\r\n    const isCompleted = appointment.status === 'completed';\r\n    const isNoShow = appointment.status === 'no-show';\r\n    const isActive = !isCancelled && !isCompleted && !isNoShow;\r\n    \r\n    // Use appointmentDate with time reset for proper comparison\r\n    const appointmentDateNoTime = new Date(appointmentDate);\r\n    appointmentDateNoTime.setHours(0, 0, 0, 0);\r\n    \r\n    // Future date (tomorrow or later)\r\n    const isFuture = appointmentDateNoTime > todayForComparison;\r\n    \r\n    // Past date (yesterday or earlier)\r\n    const isPast = appointmentDateNoTime < todayForComparison;\r\n    \r\n    if (activeTab === 'today') {\r\n      // Today tab should only show active appointments for today\r\n      return isToday && isActive;\r\n    } else if (activeTab === 'upcoming') {\r\n      // Upcoming tab should show future active appointments\r\n      // This includes tomorrow and later (not today)\r\n      return isFuture && isActive;\r\n    } else { // past tab\r\n      // Past tab shows:\r\n      // 1. Any appointment with status completed/cancelled/no-show (regardless of date)\r\n      // 2. Any appointment with date in the past (yesterday or earlier)\r\n      return isPast || isCancelled || isCompleted || isNoShow;\r\n    }\r\n  }).sort((a, b) => {\r\n    // Sort by date and time\r\n    const dateA = new Date(a.date);\r\n    const dateB = new Date(b.date);\r\n    \r\n    // For same day, sort by time\r\n    if (dateA.toDateString() === dateB.toDateString()) {\r\n      const [hoursA, minutesA] = a.startTime.split(':').map(Number);\r\n      const [hoursB, minutesB] = b.startTime.split(':').map(Number);\r\n      return (hoursA * 60 + minutesA) - (hoursB * 60 + minutesB);\r\n    }\r\n    \r\n    if (activeTab === 'past') {\r\n      return dateB - dateA; // Descending for past\r\n    } else {\r\n      return dateA - dateB; // Ascending for upcoming and today\r\n    }\r\n  });\r\n  \r\n  const renderAppointmentItem = ({ item }) => {\r\n    const isPast = new Date(item.date) < new Date() || \r\n                  item.status === 'completed' || \r\n                  item.status === 'cancelled' ||\r\n                  item.status === 'no-show';\r\n    \r\n    const toggleMenu = (id) => {\r\n      setMenuVisible({\r\n        ...menuVisible,\r\n        [id]: !menuVisible[id]\r\n      });\r\n    };\r\n    \r\n    return (\r\n      <Card style={[styles.card, isPast && styles.pastCard]}>\r\n        <Card.Content>\r\n          <View style={styles.headerRow}>\r\n            <Title>{item.service.name}</Title>\r\n            \r\n            {!isPast && (\r\n              <View>\r\n                <IconButton\r\n                  icon=\"dots-vertical\"\r\n                  onPress={() => toggleMenu(item._id)}\r\n                  size={24}\r\n                />\r\n                <Menu\r\n                  visible={menuVisible[item._id] || false}\r\n                  onDismiss={() => toggleMenu(item._id)}\r\n                  anchor={{ x: 200, y: 0 }}\r\n                  style={styles.menu}\r\n                >\r\n                  <Menu.Item\r\n                    onPress={() => openActionDialog(item, 'complete')}\r\n                    title=\"Mark as Complete\"\r\n                    icon=\"check\"\r\n                  />\r\n                  <Menu.Item\r\n                    onPress={() => openActionDialog(item, 'cancel')}\r\n                    title=\"Cancel Appointment\"\r\n                    icon=\"close\"\r\n                  />\r\n                  <Menu.Item\r\n                    onPress={() => openActionDialog(item, 'noshow')}\r\n                    title=\"Mark as No-Show\"\r\n                    icon=\"account-off\"\r\n                  />\r\n                  <Menu.Item\r\n                    onPress={() => promptDelete(item._id)}\r\n                    title=\"Delete Appointment\"\r\n                    icon=\"delete\"\r\n                  />\r\n                </Menu>\r\n              </View>\r\n            )}\r\n          </View>\r\n          \r\n          <View style={styles.row}>\r\n            <Text style={styles.label}>Customer:</Text>\r\n            <Text>{item.customer.name}</Text>\r\n          </View>\r\n          \r\n          <View style={styles.row}>\r\n            <Text style={styles.label}>Barber:</Text>\r\n            <Text>{item.barber.name}</Text>\r\n          </View>\r\n          \r\n          <View style={styles.row}>\r\n            <Text style={styles.label}>Date:</Text>\r\n            <Text>{format(new Date(item.date), 'MMMM d, yyyy')}</Text>\r\n          </View>\r\n          \r\n          <View style={styles.row}>\r\n            <Text style={styles.label}>Time:</Text>\r\n            <Text>{item.startTime} - {item.endTime}</Text>\r\n          </View>\r\n          \r\n          <View style={styles.row}>\r\n            <Text style={styles.label}>Service:</Text>\r\n            <Text>{item.service.name}</Text>\r\n          </View>\r\n          \r\n          <View style={styles.row}>\r\n            <Text style={styles.label}>Price:</Text>\r\n            <Text>${item.service.price}</Text>\r\n          </View>\r\n          \r\n          <View style={styles.statusContainer}>\r\n            <Chip\r\n              style={{\r\n                backgroundColor: \r\n                  item.status === 'confirmed' ? '#4CAF50' :\r\n                  item.status === 'pending' ? '#FFC107' :\r\n                  item.status === 'completed' ? '#3282B8' :\r\n                  item.status === 'no-show' ? '#9C27B0' : '#F44336'\r\n              }}\r\n              textStyle={{ color: 'white' }}\r\n            >\r\n              {item.status.toUpperCase()}\r\n            </Chip>\r\n          </View>\r\n          \r\n          {item.cancellationReason && (\r\n            <View style={styles.infoBox}>\r\n              <Text style={styles.label}>Cancellation Reason:</Text>\r\n              <Text>{item.cancellationReason}</Text>\r\n              {item.cancelledBy && (\r\n                <Text style={styles.subText}>Cancelled by: {item.cancelledBy}</Text>\r\n              )}\r\n            </View>\r\n          )}\r\n          \r\n          {item.notes && (\r\n            <View style={styles.infoBox}>\r\n              <Text style={styles.label}>Notes:</Text>\r\n              <Text>{item.notes}</Text>\r\n            </View>\r\n          )}\r\n          \r\n          {!isPast && (\r\n            <Button\r\n              mode=\"outlined\"\r\n              style={styles.cancelButton}\r\n              icon=\"close\"\r\n              onPress={() => openActionDialog(item, 'cancel')}\r\n            >\r\n              Cancel Appointment\r\n            </Button>\r\n          )}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  };\r\n  \r\n  if (loading && !refreshing) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Appointments Management</Text>\r\n      </View>\r\n      \r\n      <View style={styles.tabContainer}>\r\n        <Button\r\n          mode={activeTab === 'today' ? 'contained' : 'outlined'}\r\n          onPress={() => setActiveTab('today')}\r\n          style={[styles.tabButton, { flex: 1 }]}\r\n        >\r\n          Today\r\n        </Button>\r\n        <Button\r\n          mode={activeTab === 'upcoming' ? 'contained' : 'outlined'}\r\n          onPress={() => setActiveTab('upcoming')}\r\n          style={[styles.tabButton, { flex: 1 }]}\r\n        >\r\n          Upcoming\r\n        </Button>\r\n        <Button\r\n          mode={activeTab === 'past' ? 'contained' : 'outlined'}\r\n          onPress={() => setActiveTab('past')}\r\n          style={[styles.tabButton, { flex: 1 }]}\r\n        >\r\n          Past\r\n        </Button>\r\n      </View>\r\n      \r\n      <Divider />\r\n      \r\n      {error ? (\r\n        <Banner\r\n          visible={true}\r\n          icon=\"alert\"\r\n          actions={[\r\n            {\r\n              label: 'Retry',\r\n              onPress: fetchAppointments,\r\n            },\r\n          ]}\r\n        >\r\n          {error}\r\n        </Banner>\r\n      ) : (\r\n        <FlatList\r\n          data={filteredAppointments}\r\n          renderItem={renderAppointmentItem}\r\n          keyExtractor={(item) => item._id}\r\n          contentContainerStyle={styles.appointmentsList}\r\n          refreshControl={\r\n            <RefreshControl\r\n              refreshing={refreshing}\r\n              onRefresh={onRefresh}\r\n              colors={['#0F4C75']}\r\n            />\r\n          }\r\n          ListEmptyComponent={\r\n            <View style={styles.emptyContainer}>\r\n              <Text style={styles.emptyText}>\r\n                {activeTab === 'today'\r\n                  ? \"You don't have any appointments scheduled for today\"\r\n                  : activeTab === 'upcoming'\r\n                  ? \"You don't have any upcoming appointments\"\r\n                  : \"You don't have any past appointments\"}\r\n              </Text>\r\n            </View>\r\n          }\r\n        />\r\n      )}\r\n      \r\n      <Portal>\r\n        <Dialog visible={dialogVisible} onDismiss={() => setDialogVisible(false)}>\r\n          <Dialog.Title>\r\n            {actionDialogType === 'cancel' ? 'Cancel Appointment' : \r\n             actionDialogType === 'complete' ? 'Complete Appointment' : \r\n             'Mark as No-Show'}\r\n          </Dialog.Title>\r\n          <Dialog.Content>\r\n            <Text style={styles.dialogText}>\r\n              {actionDialogType === 'cancel' ? 'Please provide a reason for cancelling:' : \r\n               actionDialogType === 'complete' ? 'Add any notes about this appointment (optional):' : \r\n               'Add any notes about this no-show (optional):'}\r\n            </Text>\r\n            <TextInput\r\n              style={styles.input}\r\n              value={actionReason}\r\n              onChangeText={setActionReason}\r\n              placeholder={\r\n                actionDialogType === 'cancel' ? \"e.g., Customer requested cancellation\" : \r\n                actionDialogType === 'complete' ? \"e.g., Service notes, products used\" : \r\n                \"e.g., Customer didn't show up, no call\"\r\n              }\r\n              multiline\r\n            />\r\n          </Dialog.Content>\r\n          <Dialog.Actions>\r\n            <Button onPress={() => setDialogVisible(false)}>Cancel</Button>\r\n            <Button onPress={performAppointmentAction}>Confirm</Button>\r\n          </Dialog.Actions>\r\n        </Dialog>\r\n      </Portal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  header: {\r\n    backgroundColor: '#0F4C75',\r\n    padding: 20,\r\n    paddingTop: 50,\r\n    paddingBottom: 20,\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n  tabContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    padding: 10,\r\n    backgroundColor: 'white',\r\n  },\r\n  tabButton: {\r\n    margin: 5,\r\n  },\r\n  appointmentsList: {\r\n    padding: 15,\r\n    paddingBottom: 80,\r\n  },\r\n  card: {\r\n    marginBottom: 15,\r\n    borderRadius: 10,\r\n    elevation: 3,\r\n  },\r\n  pastCard: {\r\n    opacity: 0.8,\r\n  },\r\n  headerRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginVertical: 5,\r\n  },\r\n  label: {\r\n    fontWeight: 'bold',\r\n    color: '#666',\r\n  },\r\n  subText: {\r\n    fontSize: 12,\r\n    color: '#888',\r\n    fontStyle: 'italic',\r\n    marginTop: 2,\r\n  },\r\n  statusContainer: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    alignItems: 'flex-start',\r\n  },\r\n  emptyContainer: {\r\n    padding: 20,\r\n    alignItems: 'center',\r\n  },\r\n  emptyText: {\r\n    fontSize: 16,\r\n    color: 'gray',\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n  },\r\n  dialogText: {\r\n    marginBottom: 10,\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginTop: 5,\r\n    minHeight: 80,\r\n  },\r\n  menu: {\r\n    position: 'absolute',\r\n    top: 50,\r\n    right: 10,\r\n  },\r\n  infoBox: {\r\n    backgroundColor: '#f9f9f9',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    marginTop: 10,\r\n  },\r\n  cancelButton: {\r\n    marginTop: 15,\r\n    borderColor: '#F44336',\r\n    borderWidth: 1,\r\n  },\r\n});\r\n\r\nexport default BarberAppointmentsScreen; ","import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, StyleSheet, ScrollView, TouchableOpacity, Alert, Platform } from 'react-native';\r\nimport { Text, Card, Title, Paragraph, Button, FAB, Avatar, ActivityIndicator, Chip, Modal, Portal, TextInput, Divider } from 'react-native-paper';\r\nimport { Calendar } from 'react-native-calendars';\r\nimport { format } from 'date-fns';\r\nimport { appointmentsApi } from '../../api/client';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst BarberDashboardScreen = ({ navigation }) => {\r\n  const { userInfo } = useContext(AuthContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(format(new Date(), 'yyyy-MM-dd'));\r\n  const [markedDates, setMarkedDates] = useState({});\r\n  const [dailySchedule, setDailySchedule] = useState([]);\r\n  \r\n  // Modal states\r\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [modalAction, setModalAction] = useState('');\r\n  const [modalNote, setModalNote] = useState('');\r\n  const [swapModalVisible, setSwapModalVisible] = useState(false);\r\n  const [availableSlots, setAvailableSlots] = useState([]);\r\n  const [newTimeSlot, setNewTimeSlot] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchAppointments();\r\n    \r\n    // Refresh when screen is focused\r\n    const unsubscribe = navigation.addListener('focus', fetchAppointments);\r\n    return unsubscribe;\r\n  }, [navigation]);\r\n  \r\n  useEffect(() => {\r\n    if (appointments.length > 0) {\r\n      generateMarkedDates();\r\n      filterDailySchedule();\r\n    }\r\n  }, [appointments, selectedDate]);\r\n  \r\n  const fetchAppointments = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const response = await appointmentsApi.getUserAppointments();\r\n      \r\n      if (response.data && response.data.appointments) {\r\n        setAppointments(response.data.appointments);\r\n      } else {\r\n        setAppointments([]);\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching appointments:', error);\r\n      setLoading(false);\r\n      Alert.alert('Error', 'Failed to load appointments. Please try again.');\r\n    }\r\n  };\r\n  \r\n  const generateMarkedDates = () => {\r\n    const dates = {};\r\n    \r\n    // Group appointments by date\r\n    appointments.forEach(appointment => {\r\n      const dateStr = appointment.date.split('T')[0];\r\n      \r\n      if (!dates[dateStr]) {\r\n        dates[dateStr] = {\r\n          marked: true,\r\n          dotColor: getStatusColor(appointment.status),\r\n          dots: [{ color: getStatusColor(appointment.status) }]\r\n        };\r\n      } else {\r\n        // Add another dot if the date already exists\r\n        dates[dateStr].dots.push({ color: getStatusColor(appointment.status) });\r\n      }\r\n    });\r\n    \r\n    // Highlight selected date\r\n    if (dates[selectedDate]) {\r\n      dates[selectedDate] = {\r\n        ...dates[selectedDate],\r\n        selected: true,\r\n        selectedColor: 'rgba(15, 76, 117, 0.2)'  // Semi-transparent primary color\r\n      };\r\n    } else {\r\n      dates[selectedDate] = {\r\n        selected: true,\r\n        selectedColor: 'rgba(15, 76, 117, 0.2)'\r\n      };\r\n    }\r\n    \r\n    setMarkedDates(dates);\r\n  };\r\n  \r\n  const filterDailySchedule = () => {\r\n    // Filter appointments for the selected date\r\n    const dailyAppointments = appointments.filter(\r\n      appointment => appointment.date.split('T')[0] === selectedDate\r\n    );\r\n    \r\n    // Sort by start time\r\n    dailyAppointments.sort((a, b) => {\r\n      const [aHour, aMinute] = a.startTime.split(':').map(Number);\r\n      const [bHour, bMinute] = b.startTime.split(':').map(Number);\r\n      return (aHour * 60 + aMinute) - (bHour * 60 + bMinute);\r\n    });\r\n    \r\n    // Create full day schedule with 30-minute slots (9am-6pm)\r\n    const schedule = [];\r\n    \r\n    for (let hour = 9; hour < 18; hour++) {\r\n      for (let minute of [0, 30]) {\r\n        const timeString = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\r\n        const endHour = minute === 30 ? hour + 1 : hour;\r\n        const endMinute = minute === 30 ? 0 : 30;\r\n        const endTimeString = `${endHour.toString().padStart(2, '0')}:${endMinute.toString().padStart(2, '0')}`;\r\n        \r\n        // Find appointment for this time slot\r\n        const appointment = dailyAppointments.find(\r\n          appt => appt.startTime === timeString\r\n        );\r\n        \r\n        schedule.push({\r\n          time: timeString,\r\n          endTime: endTimeString,\r\n          appointment: appointment || null,\r\n          status: appointment ? appointment.status : 'free'\r\n        });\r\n      }\r\n    }\r\n    \r\n    setDailySchedule(schedule);\r\n    \r\n    // Also update available slots for potential appointment changes\r\n    setAvailableSlots(\r\n      schedule.filter(slot => slot.status === 'free').map(slot => ({\r\n        startTime: slot.time,\r\n        endTime: slot.endTime\r\n      }))\r\n    );\r\n  };\r\n  \r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'confirmed': return '#4CAF50';  // Green\r\n      case 'pending': return '#FFC107';    // Yellow\r\n      case 'completed': return '#3282B8';  // Blue\r\n      case 'cancelled': return '#F44336';  // Red\r\n      case 'no-show': return '#9C27B0';    // Purple\r\n      default: return '#757575';           // Grey\r\n    }\r\n  };\r\n  \r\n  const handleDateSelect = (date) => {\r\n    setSelectedDate(date.dateString);\r\n  };\r\n  \r\n  const openAppointmentActions = (appointment) => {\r\n    setSelectedAppointment(appointment);\r\n    setModalVisible(true);\r\n    setModalAction('');\r\n    setModalNote('');\r\n  };\r\n  \r\n  const handleActionSelect = (action) => {\r\n    setModalAction(action);\r\n  };\r\n  \r\n  const handleAppointmentAction = async () => {\r\n    if (!selectedAppointment || !modalAction) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setModalVisible(false);\r\n      \r\n      let response;\r\n      \r\n      switch (modalAction) {\r\n        case 'complete':\r\n          response = await appointmentsApi.updateAppointment(\r\n            selectedAppointment._id,\r\n            {\r\n              status: 'completed',\r\n              notes: modalNote\r\n            }\r\n          );\r\n          \r\n          if (response.data && response.data.success) {\r\n            Alert.alert('Success', 'Appointment marked as completed');\r\n          }\r\n          break;\r\n          \r\n        case 'cancel':\r\n          response = await appointmentsApi.cancelAppointment(\r\n            selectedAppointment._id,\r\n            { cancellationReason: modalNote }\r\n          );\r\n          \r\n          if (response.data && response.data.success) {\r\n            Alert.alert('Success', 'Appointment cancelled successfully');\r\n          }\r\n          break;\r\n          \r\n        case 'noshow':\r\n          response = await appointmentsApi.updateAppointment(\r\n            selectedAppointment._id,\r\n            {\r\n              status: 'no-show',\r\n              notes: modalNote\r\n            }\r\n          );\r\n          \r\n          if (response.data && response.data.success) {\r\n            Alert.alert('Success', 'Appointment marked as no-show');\r\n          }\r\n          break;\r\n          \r\n        case 'swap':\r\n          setSwapModalVisible(true);\r\n          setModalVisible(false);\r\n          return;\r\n      }\r\n      \r\n      await fetchAppointments();\r\n      setLoading(false);\r\n      \r\n    } catch (error) {\r\n      console.error('Error updating appointment:', error);\r\n      setLoading(false);\r\n      Alert.alert('Error', error.response?.data?.message || 'Failed to update appointment');\r\n    }\r\n  };\r\n  \r\n  const handleTimeSwap = async () => {\r\n    if (!selectedAppointment || !newTimeSlot) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setSwapModalVisible(false);\r\n      \r\n      const response = await appointmentsApi.updateAppointment(\r\n        selectedAppointment._id,\r\n        {\r\n          startTime: newTimeSlot.startTime,\r\n          endTime: newTimeSlot.endTime,\r\n          notes: `Time changed from ${selectedAppointment.startTime}-${selectedAppointment.endTime} to ${newTimeSlot.startTime}-${newTimeSlot.endTime}`\r\n        }\r\n      );\r\n      \r\n      if (response.data && response.data.success) {\r\n        Alert.alert('Success', 'Appointment time updated successfully');\r\n        await fetchAppointments();\r\n      } else {\r\n        Alert.alert('Error', 'Failed to update appointment time');\r\n      }\r\n      \r\n      setNewTimeSlot(null);\r\n      setLoading(false);\r\n      \r\n    } catch (error) {\r\n      console.error('Error updating appointment time:', error);\r\n      setLoading(false);\r\n      Alert.alert('Error', error.response?.data?.message || 'Failed to update appointment time');\r\n    }\r\n  };\r\n  \r\n  const renderTimeSlot = (slot, index) => {\r\n    const isCurrent = () => {\r\n      const now = new Date();\r\n      const today = format(now, 'yyyy-MM-dd');\r\n      \r\n      if (selectedDate !== today) return false;\r\n      \r\n      const currentHour = now.getHours();\r\n      const currentMinute = now.getMinutes();\r\n      const [slotHour, slotMinute] = slot.time.split(':').map(Number);\r\n      const [endHour, endMinute] = slot.endTime.split(':').map(Number);\r\n      \r\n      return (\r\n        (currentHour > slotHour || (currentHour === slotHour && currentMinute >= slotMinute)) &&\r\n        (currentHour < endHour || (currentHour === endHour && currentMinute < endMinute))\r\n      );\r\n    };\r\n    \r\n    return (\r\n      <View key={index} style={[\r\n        styles.timeSlot,\r\n        isCurrent() && styles.currentTimeSlot\r\n      ]}>\r\n        <View style={styles.timeColumn}>\r\n          <Text style={styles.timeText}>{slot.time}</Text>\r\n        </View>\r\n        \r\n        <View style={[\r\n          styles.appointmentColumn,\r\n          { backgroundColor: slot.appointment ? getStatusColor(slot.appointment.status) + '30' : 'transparent' }\r\n        ]}>\r\n          {slot.appointment ? (\r\n            <TouchableOpacity \r\n              style={styles.appointmentCard} \r\n              onPress={() => openAppointmentActions(slot.appointment)}\r\n            >\r\n              <View style={styles.appointmentHeader}>\r\n                <Text style={styles.customerName}>{slot.appointment.customer.name}</Text>\r\n                <Chip \r\n                  style={[styles.statusChip, { backgroundColor: getStatusColor(slot.appointment.status) }]}\r\n                  textStyle={styles.statusChipText}\r\n                >\r\n                  {slot.appointment.status.toUpperCase()}\r\n                </Chip>\r\n              </View>\r\n              <Text style={styles.serviceText}>{slot.appointment.service.name}</Text>\r\n              <Text style={styles.priceText}>${slot.appointment.service.price}</Text>\r\n            </TouchableOpacity>\r\n          ) : (\r\n            <View style={styles.emptySlot}>\r\n              <Text style={styles.emptySlotText}>Free</Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n  \r\n  if (loading && appointments.length === 0) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n        <Text style={{ marginTop: 20 }}>Loading your schedule...</Text>\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Barber Dashboard</Text>\r\n        <Text style={styles.headerSubtitle}>Welcome, {userInfo?.name}</Text>\r\n      </View>\r\n      \r\n      <ScrollView style={styles.content}>\r\n        {/* Calendar */}\r\n        <View style={styles.calendarContainer}>\r\n          <Calendar\r\n            markingType={'multi-dot'}\r\n            markedDates={markedDates}\r\n            onDayPress={handleDateSelect}\r\n            theme={{\r\n              todayTextColor: '#0F4C75',\r\n              arrowColor: '#0F4C75',\r\n            }}\r\n          />\r\n        </View>\r\n        \r\n        {/* Daily Schedule */}\r\n        <View style={styles.scheduleContainer}>\r\n          <Text style={styles.scheduleTitle}>\r\n            Schedule for {format(new Date(selectedDate), 'MMMM d, yyyy')}\r\n          </Text>\r\n          \r\n          {dailySchedule.length > 0 ? (\r\n            <View style={styles.scheduleGrid}>\r\n              {dailySchedule.map((slot, index) => renderTimeSlot(slot, index))}\r\n            </View>\r\n          ) : (\r\n            <View style={styles.emptySchedule}>\r\n              <Text style={styles.emptyText}>No appointments scheduled for this day.</Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n      </ScrollView>\r\n      \r\n      <FAB\r\n        style={styles.fab}\r\n        icon=\"refresh\"\r\n        onPress={fetchAppointments}\r\n      />\r\n      \r\n      {/* Appointment Actions Modal */}\r\n      <Portal>\r\n        <Modal\r\n          visible={modalVisible}\r\n          onDismiss={() => setModalVisible(false)}\r\n          contentContainerStyle={styles.modalContent}\r\n        >\r\n          <Title style={styles.modalTitle}>Appointment Actions</Title>\r\n          \r\n          {selectedAppointment && (\r\n            <View style={styles.appointmentDetails}>\r\n              <Text style={styles.appointmentDetail}>\r\n                <Text style={styles.detailLabel}>Customer: </Text>\r\n                {selectedAppointment.customer.name}\r\n              </Text>\r\n              <Text style={styles.appointmentDetail}>\r\n                <Text style={styles.detailLabel}>Service: </Text>\r\n                {selectedAppointment.service.name}\r\n              </Text>\r\n              <Text style={styles.appointmentDetail}>\r\n                <Text style={styles.detailLabel}>Time: </Text>\r\n                {selectedAppointment.startTime} - {selectedAppointment.endTime}\r\n              </Text>\r\n              <Text style={styles.appointmentDetail}>\r\n                <Text style={styles.detailLabel}>Status: </Text>\r\n                {selectedAppointment.status.toUpperCase()}\r\n              </Text>\r\n            </View>\r\n          )}\r\n          \r\n          <Divider style={styles.divider} />\r\n          \r\n          <View style={styles.actionButtons}>\r\n            <TouchableOpacity \r\n              style={[\r\n                styles.actionButton, \r\n                modalAction === 'complete' && styles.actionButtonSelected\r\n              ]}\r\n              onPress={() => handleActionSelect('complete')}\r\n            >\r\n              <Text style={styles.actionButtonText}>Complete</Text>\r\n            </TouchableOpacity>\r\n            \r\n            <TouchableOpacity \r\n              style={[\r\n                styles.actionButton, \r\n                modalAction === 'cancel' && styles.actionButtonSelected\r\n              ]}\r\n              onPress={() => handleActionSelect('cancel')}\r\n            >\r\n              <Text style={styles.actionButtonText}>Cancel</Text>\r\n            </TouchableOpacity>\r\n            \r\n            <TouchableOpacity \r\n              style={[\r\n                styles.actionButton, \r\n                modalAction === 'noshow' && styles.actionButtonSelected\r\n              ]}\r\n              onPress={() => handleActionSelect('noshow')}\r\n            >\r\n              <Text style={styles.actionButtonText}>No-Show</Text>\r\n            </TouchableOpacity>\r\n            \r\n            <TouchableOpacity \r\n              style={[\r\n                styles.actionButton, \r\n                modalAction === 'swap' && styles.actionButtonSelected\r\n              ]}\r\n              onPress={() => handleActionSelect('swap')}\r\n            >\r\n              <Text style={styles.actionButtonText}>Change Time</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          \r\n          {modalAction && modalAction !== 'swap' && (\r\n            <TextInput\r\n              label={\r\n                modalAction === 'complete' ? 'Notes (optional)' :\r\n                modalAction === 'cancel' ? 'Cancellation Reason' : 'No-Show Notes'\r\n              }\r\n              value={modalNote}\r\n              onChangeText={setModalNote}\r\n              style={styles.noteInput}\r\n              multiline\r\n            />\r\n          )}\r\n          \r\n          <View style={styles.modalActions}>\r\n            <Button onPress={() => setModalVisible(false)} style={styles.modalButton}>\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              mode=\"contained\" \r\n              onPress={handleAppointmentAction}\r\n              disabled={modalAction === 'cancel' && !modalNote}\r\n              style={styles.modalButton}\r\n            >\r\n              Confirm\r\n            </Button>\r\n          </View>\r\n        </Modal>\r\n      </Portal>\r\n      \r\n      {/* Swap Time Modal */}\r\n      <Portal>\r\n        <Modal\r\n          visible={swapModalVisible}\r\n          onDismiss={() => setSwapModalVisible(false)}\r\n          contentContainerStyle={styles.modalContent}\r\n        >\r\n          <Title style={styles.modalTitle}>Select New Time</Title>\r\n          \r\n          {availableSlots.length > 0 ? (\r\n            <ScrollView style={styles.timeSlotsContainer}>\r\n              {availableSlots.map((slot, index) => (\r\n                <TouchableOpacity\r\n                  key={index}\r\n                  style={[\r\n                    styles.timeSlotButton,\r\n                    newTimeSlot && newTimeSlot.startTime === slot.startTime && styles.selectedTimeSlot\r\n                  ]}\r\n                  onPress={() => setNewTimeSlot(slot)}\r\n                >\r\n                  <Text style={styles.timeSlotButtonText}>\r\n                    {slot.startTime} - {slot.endTime}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              ))}\r\n            </ScrollView>\r\n          ) : (\r\n            <Text style={styles.noSlotsText}>No available time slots for this day.</Text>\r\n          )}\r\n          \r\n          <View style={styles.modalActions}>\r\n            <Button onPress={() => setSwapModalVisible(false)} style={styles.modalButton}>\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              mode=\"contained\" \r\n              onPress={handleTimeSwap}\r\n              disabled={!newTimeSlot}\r\n              style={styles.modalButton}\r\n            >\r\n              Change Time\r\n            </Button>\r\n          </View>\r\n        </Modal>\r\n      </Portal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  header: {\r\n    backgroundColor: '#0F4C75',\r\n    padding: 20,\r\n    paddingTop: 50,\r\n    paddingBottom: 20,\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  headerSubtitle: {\r\n    fontSize: 16,\r\n    color: '#BBE1FA',\r\n    marginTop: 5,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n  },\r\n  calendarContainer: {\r\n    margin: 10,\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    overflow: 'hidden',\r\n    ...Platform.select({\r\n      ios: {\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.1,\r\n        shadowRadius: 4,\r\n      },\r\n      android: {\r\n        elevation: 3,\r\n      },\r\n    }),\r\n  },\r\n  scheduleContainer: {\r\n    margin: 10,\r\n    marginTop: 5,\r\n    padding: 15,\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    ...Platform.select({\r\n      ios: {\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.1,\r\n        shadowRadius: 4,\r\n      },\r\n      android: {\r\n        elevation: 3,\r\n      },\r\n    }),\r\n  },\r\n  scheduleTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 15,\r\n    color: '#1B262C',\r\n  },\r\n  scheduleGrid: {\r\n    marginTop: 5,\r\n  },\r\n  timeSlot: {\r\n    flexDirection: 'row',\r\n    marginBottom: 10,\r\n    height: 80,\r\n  },\r\n  currentTimeSlot: {\r\n    borderLeftWidth: 3,\r\n    borderLeftColor: '#0F4C75',\r\n  },\r\n  timeColumn: {\r\n    width: 60,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#f0f0f0',\r\n    borderRadius: 5,\r\n  },\r\n  timeText: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  appointmentColumn: {\r\n    flex: 1,\r\n    marginLeft: 10,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    justifyContent: 'center',\r\n  },\r\n  appointmentCard: {\r\n    padding: 5,\r\n  },\r\n  appointmentHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 5,\r\n  },\r\n  customerName: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n  },\r\n  serviceText: {\r\n    fontSize: 12,\r\n  },\r\n  priceText: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n    marginTop: 5,\r\n  },\r\n  statusChip: {\r\n    height: 20,\r\n    paddingHorizontal: 5,\r\n  },\r\n  statusChipText: {\r\n    fontSize: 8,\r\n    color: 'white',\r\n  },\r\n  emptySlot: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n  },\r\n  emptySlotText: {\r\n    color: '#757575',\r\n    fontStyle: 'italic',\r\n  },\r\n  emptySchedule: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 30,\r\n  },\r\n  emptyText: {\r\n    color: '#757575',\r\n    textAlign: 'center',\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: '#0F4C75',\r\n  },\r\n  modalContent: {\r\n    backgroundColor: 'white',\r\n    padding: 20,\r\n    margin: 20,\r\n    borderRadius: 10,\r\n  },\r\n  modalTitle: {\r\n    textAlign: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  appointmentDetails: {\r\n    marginBottom: 15,\r\n  },\r\n  appointmentDetail: {\r\n    marginBottom: 5,\r\n  },\r\n  detailLabel: {\r\n    fontWeight: 'bold',\r\n  },\r\n  divider: {\r\n    marginVertical: 10,\r\n  },\r\n  actionButtons: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n    marginVertical: 10,\r\n  },\r\n  actionButton: {\r\n    width: '48%',\r\n    padding: 10,\r\n    alignItems: 'center',\r\n    borderWidth: 1,\r\n    borderColor: '#0F4C75',\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n  },\r\n  actionButtonSelected: {\r\n    backgroundColor: '#0F4C75',\r\n  },\r\n  actionButtonText: {\r\n    color: '#0F4C75',\r\n  },\r\n  noteInput: {\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n  },\r\n  modalActions: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  modalButton: {\r\n    flex: 1,\r\n    marginHorizontal: 5,\r\n  },\r\n  timeSlotsContainer: {\r\n    maxHeight: 300,\r\n    marginVertical: 10,\r\n  },\r\n  timeSlotButton: {\r\n    padding: 15,\r\n    marginVertical: 5,\r\n    backgroundColor: '#f0f0f0',\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n  },\r\n  selectedTimeSlot: {\r\n    backgroundColor: '#BBE1FA',\r\n    borderWidth: 1,\r\n    borderColor: '#0F4C75',\r\n  },\r\n  timeSlotButtonText: {\r\n    fontSize: 16,\r\n  },\r\n  noSlotsText: {\r\n    textAlign: 'center',\r\n    margin: 20,\r\n    color: '#757575',\r\n  },\r\n});\r\n\r\nexport default BarberDashboardScreen; ","import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, StyleSheet, ScrollView, Alert, TouchableOpacity, FlatList } from 'react-native';\r\nimport { Text, Card, Button, Title, Paragraph, FAB, Avatar, ActivityIndicator, Searchbar, Chip, Modal, Portal, TextInput, Divider } from 'react-native-paper';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport apiClient from '../../api/client';\r\n\r\nconst DashboardScreen = ({ navigation }) => {\r\n  const { userInfo } = useContext(AuthContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const [users, setUsers] = useState([]);\r\n  const [barbers, setBarbers] = useState([]);\r\n  const [managers, setManagers] = useState([]);\r\n  const [salons, setSalons] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [staffVisible, setStaffVisible] = useState(false);\r\n  const [salonVisible, setSalonVisible] = useState(false);\r\n  const [newUserForm, setNewUserForm] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    phone: '',\r\n    role: 'barber'\r\n  });\r\n  const [newSalonForm, setNewSalonForm] = useState({\r\n    name: '',\r\n    address: {\r\n      street: '',\r\n      city: '',\r\n      state: '',\r\n      postalCode: ''\r\n    },\r\n    phone: '',\r\n    email: '',\r\n    description: ''\r\n  });\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n  const [editUserForm, setEditUserForm] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    role: 'barber',\r\n    isActive: true\r\n  });\r\n  const [stats, setStats] = useState({\r\n    totalAppointments: 0,\r\n    completedAppointments: 0,\r\n    totalUsers: 0,\r\n    totalBarbers: 0,\r\n    totalManagers: 0\r\n  });\r\n\r\n  // Check if user is admin\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.email !== 'seif.ayadi.3.9.2@gmail.com') {\r\n      Alert.alert('Access Denied', 'Only the admin account can access this screen.');\r\n      navigation.goBack();\r\n    } else {\r\n      fetchUsers();\r\n      fetchStats();\r\n      fetchSalons();\r\n    }\r\n  }, [userInfo]);\r\n\r\n  // Admin API endpoints\r\n  const adminApi = {\r\n    getUsers: () => apiClient.get('/admin/users'),\r\n    createUser: (userData) => apiClient.post('/admin/users', userData),\r\n    updateUser: (id, userData) => apiClient.put(`/admin/users/${id}`, userData),\r\n    deleteUser: (id) => apiClient.delete(`/admin/users/${id}`),\r\n    getStats: () => apiClient.get('/admin/stats'),\r\n    getSalons: () => apiClient.get('/admin/salons')\r\n  };\r\n\r\n  // Fetch users\r\n  const fetchUsers = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Use our admin API endpoints instead of hardcoded data\r\n      const response = await apiClient.get('/admin/users', {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        const allUsers = response.data.users || [];\r\n        setUsers(allUsers);\r\n        setBarbers(allUsers.filter(u => u.role === 'barber'));\r\n        setManagers(allUsers.filter(u => u.role === 'manager'));\r\n        console.log(`Loaded ${allUsers.length} users, ${barbers.length} barbers, ${managers.length} managers`);\r\n      } else {\r\n        console.error('Failed to load users:', response.data);\r\n        Alert.alert('Error', 'Failed to load users');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n      setLoading(false);\r\n      Alert.alert('Error', 'Failed to load users: ' + (error.message || 'Unknown error'));\r\n    }\r\n  };\r\n\r\n  // Fetch dashboard stats\r\n  const fetchStats = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Use our admin stats API endpoint\r\n      const response = await apiClient.get('/admin/stats', {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        const { stats: apiStats } = response.data;\r\n        \r\n        setStats({\r\n          totalAppointments: apiStats.appointments.total || 0,\r\n          completedAppointments: apiStats.appointments.completed || 0,\r\n          totalUsers: apiStats.users.total || 0,\r\n          totalBarbers: apiStats.users.barbers || 0,\r\n          totalManagers: apiStats.users.managers || 0\r\n        });\r\n        \r\n        console.log('Dashboard stats loaded successfully');\r\n      } else {\r\n        console.error('Failed to load stats:', response.data);\r\n        // Fallback to zeros if API fails\r\n        setStats({\r\n          totalAppointments: 0,\r\n          completedAppointments: 0,\r\n          totalUsers: 0,\r\n          totalBarbers: 0,\r\n          totalManagers: 0\r\n        });\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching stats:', error);\r\n      setLoading(false);\r\n      \r\n      // Fallback to zeros if API fails\r\n      setStats({\r\n        totalAppointments: 0,\r\n        completedAppointments: 0,\r\n        totalUsers: 0,\r\n        totalBarbers: 0,\r\n        totalManagers: 0\r\n      });\r\n    }\r\n  };\r\n\r\n  // Fetch salons\r\n  const fetchSalons = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const response = await apiClient.get('/admin/salons', {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        const allSalons = response.data.salons || [];\r\n        setSalons(allSalons);\r\n        console.log(`Loaded ${allSalons.length} salons`);\r\n      } else {\r\n        console.error('Failed to load salons:', response.data);\r\n        Alert.alert('Error', 'Failed to load salons');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching salons:', error);\r\n      setLoading(false);\r\n      Alert.alert('Error', 'Failed to load salons: ' + (error.message || 'Unknown error'));\r\n    }\r\n  };\r\n\r\n  // Create new user\r\n  const handleCreateUser = async () => {\r\n    try {\r\n      setLoading(true);\r\n      // Validate form\r\n      if (!newUserForm.name || !newUserForm.email || !newUserForm.password) {\r\n        Alert.alert('Error', 'Please fill in all required fields');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Generate staff ID based on role and name\r\n      const nameInitials = newUserForm.name\r\n        .split(' ')\r\n        .map(n => n[0])\r\n        .join('')\r\n        .toUpperCase();\r\n      const randomNum = Math.floor(1000 + Math.random() * 9000); // 4-digit number\r\n      const rolePrefix = newUserForm.role === 'manager' ? 'MGR' : 'BRB';\r\n      const staffId = `${rolePrefix}-${nameInitials}${randomNum}`;\r\n\r\n      // Prepare the complete form data with staffId\r\n      const completeFormData = {\r\n        ...newUserForm,\r\n        staffId,\r\n        isActive: true,\r\n        joinDate: new Date().toISOString()\r\n      };\r\n\r\n      console.log('Creating new staff with data:', JSON.stringify(completeFormData));\r\n      \r\n      // Get token from userInfo object\r\n      const token = userInfo.token;\r\n      \r\n      // Make the API call with explicit token in header\r\n      const response = await apiClient.post('/admin/users', completeFormData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      console.log('API response:', JSON.stringify(response.data));\r\n      \r\n      if (response.data && response.data.success) {\r\n        console.log('Staff member created successfully:', response.data.user);\r\n        // Fetch users again to get the updated list from server\r\n        await fetchUsers();\r\n        \r\n        // Reset form\r\n        setNewUserForm({\r\n          name: '',\r\n          email: '',\r\n          password: '',\r\n          phone: '',\r\n          role: 'barber'\r\n        });\r\n        setStaffVisible(false);\r\n        \r\n        Alert.alert(\r\n          'Success', \r\n          `${newUserForm.role === 'manager' ? 'Manager' : 'Barber'} added successfully with ID: ${staffId}`\r\n        );\r\n      } else {\r\n        console.error('Failed to create staff member, response:', JSON.stringify(response.data));\r\n        Alert.alert('Error', response.data?.message || 'Failed to create staff member');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error creating staff member:', error);\r\n      console.error('Error details:', error.response?.data || error.message);\r\n      setLoading(false);\r\n      Alert.alert('Error', error.response?.data?.message || 'Failed to create staff member. Check console for details.');\r\n    }\r\n  };\r\n\r\n  // Handle user deletion\r\n  const handleDeleteUser = (userId) => {\r\n    Alert.alert(\r\n      'Confirm Delete',\r\n      'Are you sure you want to delete this user?',\r\n      [\r\n        {\r\n          text: 'Cancel',\r\n          style: 'cancel'\r\n        },\r\n        {\r\n          text: 'Delete',\r\n          style: 'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              setLoading(true);\r\n              \r\n              // Call the API to delete the user\r\n              const response = await apiClient.delete(`/admin/users/${userId}`, {\r\n                headers: {\r\n                  Authorization: `Bearer ${userInfo.token}`\r\n                }\r\n              });\r\n              \r\n              if (response.data && response.data.success) {\r\n                console.log('User deleted successfully:', response.data);\r\n                // Refresh the user list\r\n                await fetchUsers();\r\n                Alert.alert('Success', 'User deleted successfully');\r\n              } else {\r\n                console.error('Failed to delete user:', response.data);\r\n                Alert.alert('Error', response.data?.message || 'Failed to delete user');\r\n              }\r\n              \r\n              setLoading(false);\r\n            } catch (error) {\r\n              console.error('Error deleting user:', error);\r\n              setLoading(false);\r\n              Alert.alert('Error', error.response?.data?.message || 'Failed to delete user');\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n\r\n  // Fetch user data for editing\r\n  useEffect(() => {\r\n    if (selectedUserId) {\r\n      const userToEdit = users.find(user => user._id === selectedUserId);\r\n      if (userToEdit) {\r\n        setEditUserForm({\r\n          name: userToEdit.name || '',\r\n          email: userToEdit.email || '',\r\n          phone: userToEdit.phone || '',\r\n          role: userToEdit.role || 'barber',\r\n          isActive: userToEdit.isActive !== undefined ? userToEdit.isActive : true\r\n        });\r\n      }\r\n    }\r\n  }, [selectedUserId]);\r\n\r\n  // Handle user update\r\n  const handleUpdateUser = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Validate form\r\n      if (!editUserForm.name || !editUserForm.email) {\r\n        Alert.alert('Error', 'Please fill in all required fields');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      console.log('Updating user with data:', JSON.stringify(editUserForm));\r\n      \r\n      // Get token from userInfo object\r\n      const token = userInfo.token;\r\n      \r\n      // Make the API call with explicit token in header\r\n      const response = await apiClient.put(`/admin/users/${selectedUserId}`, editUserForm, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        console.log('User updated successfully:', response.data.user);\r\n        // Fetch users again to get the updated list\r\n        await fetchUsers();\r\n        \r\n        // Reset form and close modal\r\n        setSelectedUserId(null);\r\n        \r\n        Alert.alert('Success', 'User updated successfully');\r\n      } else {\r\n        console.error('Failed to update user, response:', JSON.stringify(response.data));\r\n        Alert.alert('Error', response.data?.message || 'Failed to update user');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error updating user:', error);\r\n      console.error('Error details:', error.response?.data || error.message);\r\n      setLoading(false);\r\n      Alert.alert('Error', error.response?.data?.message || 'Failed to update user. Check console for details.');\r\n    }\r\n  };\r\n\r\n  // Render user item\r\n  const renderUserItem = ({ item }) => (\r\n    <Card style={styles.userCard}>\r\n      <Card.Content>\r\n        <View style={styles.userCardHeader}>\r\n          <Avatar.Text \r\n            size={40} \r\n            label={item.name.split(' ').map(n => n[0]).join('')} \r\n            backgroundColor=\"#0F4C75\" \r\n          />\r\n          <View style={styles.userInfo}>\r\n            <Title>{item.name}</Title>\r\n            <View style={styles.userDetailsRow}>\r\n              <Paragraph style={styles.userEmail}>{item.email}</Paragraph>\r\n              {item.phone && <Paragraph style={styles.userPhone}>• {item.phone}</Paragraph>}\r\n            </View>\r\n            {item.staffId && (\r\n              <View style={styles.staffIdContainer}>\r\n                <Paragraph style={styles.staffId}>ID: {item.staffId}</Paragraph>\r\n                <Chip \r\n                  mode=\"flat\" \r\n                  style={[styles.statusChip, {backgroundColor: item.isActive ? '#C8E6C9' : '#FFCDD2'}]}\r\n                >\r\n                  {item.isActive ? 'Active' : 'Inactive'}\r\n                </Chip>\r\n              </View>\r\n            )}\r\n          </View>\r\n          <Chip mode=\"outlined\" style={styles.roleChip}>\r\n            {item.role.charAt(0).toUpperCase() + item.role.slice(1)}\r\n          </Chip>\r\n        </View>\r\n        <Divider style={{ marginVertical: 10 }} />\r\n        <View style={styles.userCardActions}>\r\n          <Button \r\n            mode=\"outlined\" \r\n            compact \r\n            icon=\"pencil\"\r\n            onPress={() => setSelectedUserId(item._id)}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button \r\n            mode=\"outlined\" \r\n            compact \r\n            icon=\"delete\" \r\n            textColor=\"#D32F2F\"\r\n            onPress={() => handleDeleteUser(item._id)}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </View>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n\r\n  // Create new salon\r\n  const handleCreateSalon = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Validate form\r\n      if (!newSalonForm.name || !newSalonForm.address.street || !newSalonForm.address.city || !newSalonForm.phone) {\r\n        Alert.alert('Error', 'Please fill in all required fields (name, address, phone)');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      // Create salon data with basic location\r\n      const salonData = {\r\n        ...newSalonForm,\r\n        coordinates: [10.1815, 36.8065] // Default coordinates (Tunis)\r\n      };\r\n      \r\n      console.log('Creating new salon with data:', JSON.stringify(salonData));\r\n      \r\n      const response = await apiClient.post('/admin/salons', salonData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        console.log('Salon created successfully:', response.data.salon);\r\n        await fetchSalons();\r\n        \r\n        // Reset form\r\n        setNewSalonForm({\r\n          name: '',\r\n          address: {\r\n            street: '',\r\n            city: '',\r\n            state: '',\r\n            postalCode: ''\r\n          },\r\n          phone: '',\r\n          email: '',\r\n          description: ''\r\n        });\r\n        setSalonVisible(false);\r\n        \r\n        Alert.alert('Success', 'Salon added successfully');\r\n      } else {\r\n        console.error('Failed to create salon, response:', JSON.stringify(response.data));\r\n        Alert.alert('Error', response.data?.message || 'Failed to create salon');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error creating salon:', error);\r\n      console.error('Error details:', error.response?.data || error.message);\r\n      setLoading(false);\r\n      Alert.alert('Error', error.response?.data?.message || 'Failed to create salon. Check console for details.');\r\n    }\r\n  };\r\n  \r\n  // Handle salon deletion\r\n  const handleDeleteSalon = (salonId) => {\r\n    Alert.alert(\r\n      'Confirm Delete',\r\n      'Are you sure you want to delete this salon?',\r\n      [\r\n        {\r\n          text: 'Cancel',\r\n          style: 'cancel'\r\n        },\r\n        {\r\n          text: 'Delete',\r\n          style: 'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              setLoading(true);\r\n              \r\n              const response = await apiClient.delete(`/admin/salons/${salonId}`, {\r\n                headers: {\r\n                  Authorization: `Bearer ${userInfo.token}`\r\n                }\r\n              });\r\n              \r\n              if (response.data && response.data.success) {\r\n                console.log('Salon deleted successfully:', response.data);\r\n                await fetchSalons();\r\n                Alert.alert('Success', 'Salon deleted successfully');\r\n              } else {\r\n                console.error('Failed to delete salon:', response.data);\r\n                Alert.alert('Error', response.data?.message || 'Failed to delete salon');\r\n              }\r\n              \r\n              setLoading(false);\r\n            } catch (error) {\r\n              console.error('Error deleting salon:', error);\r\n              setLoading(false);\r\n              Alert.alert('Error', error.response?.data?.message || 'Failed to delete salon');\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n  \r\n  // Render salon item\r\n  const renderSalonItem = ({ item }) => (\r\n    <Card style={styles.salonCard}>\r\n      <Card.Content>\r\n        <View style={styles.salonCardHeader}>\r\n          <Avatar.Icon \r\n            size={40} \r\n            icon=\"store\" \r\n            backgroundColor=\"#0F4C75\" \r\n          />\r\n          <View style={styles.salonInfo}>\r\n            <Title>{item.name}</Title>\r\n            <Paragraph style={styles.salonAddress}>\r\n              {item.address.street}, {item.address.city}\r\n            </Paragraph>\r\n            <Paragraph style={styles.salonPhone}>{item.phone}</Paragraph>\r\n          </View>\r\n          <Chip \r\n            mode=\"flat\" \r\n            style={[styles.statusChip, {backgroundColor: item.isActive ? '#C8E6C9' : '#FFCDD2'}]}\r\n          >\r\n            {item.isActive ? 'Active' : 'Inactive'}\r\n          </Chip>\r\n        </View>\r\n        <Divider style={{ marginVertical: 10 }} />\r\n        <View style={styles.salonCardActions}>\r\n          <Button \r\n            mode=\"outlined\" \r\n            compact \r\n            icon=\"pencil\"\r\n            onPress={() => navigation.navigate('SalonDetails', { salonId: item._id })}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button \r\n            mode=\"outlined\" \r\n            compact \r\n            icon=\"account-group\"\r\n            onPress={() => navigation.navigate('SalonStaff', { salonId: item._id })}\r\n          >\r\n            Staff\r\n          </Button>\r\n          <Button \r\n            mode=\"outlined\" \r\n            compact \r\n            icon=\"delete\" \r\n            textColor=\"#D32F2F\"\r\n            onPress={() => handleDeleteSalon(item._id)}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </View>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n\r\n  if (loading && users.length === 0) {\r\n    return (\r\n      <View style={styles.centeredContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n        <Text style={{ marginTop: 20 }}>Loading dashboard...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Admin Header */}\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Admin Dashboard</Text>\r\n        <Text style={styles.headerSubtitle}>Welcome, {userInfo?.name}</Text>\r\n      </View>\r\n\r\n      <ScrollView style={styles.content}>\r\n        {/* Stats Cards */}\r\n        <View style={styles.statsContainer}>\r\n          <Card style={[styles.statsCard, { backgroundColor: '#BBE1FA' }]}>\r\n            <Card.Content>\r\n              <Title style={styles.statsValue}>{stats.totalAppointments}</Title>\r\n              <Paragraph>Total Appointments</Paragraph>\r\n            </Card.Content>\r\n          </Card>\r\n          \r\n          <Card style={[styles.statsCard, { backgroundColor: '#C8E6C9' }]}>\r\n            <Card.Content>\r\n              <Title style={styles.statsValue}>{stats.totalUsers}</Title>\r\n              <Paragraph>Customers</Paragraph>\r\n            </Card.Content>\r\n          </Card>\r\n          \r\n          <Card style={[styles.statsCard, { backgroundColor: '#FFECB3' }]}>\r\n            <Card.Content>\r\n              <Title style={styles.statsValue}>{stats.totalBarbers}</Title>\r\n              <Paragraph>Barbers</Paragraph>\r\n            </Card.Content>\r\n          </Card>\r\n        </View>\r\n\r\n        {/* Salon Management */}\r\n        <View style={styles.section}>\r\n          <View style={styles.sectionHeader}>\r\n            <Text style={styles.sectionTitle}>Salon Management</Text>\r\n            <Button \r\n              mode=\"contained\" \r\n              icon=\"plus\" \r\n              onPress={() => setSalonVisible(true)}\r\n            >\r\n              Add Salon\r\n            </Button>\r\n          </View>\r\n\r\n          <FlatList\r\n            data={salons}\r\n            renderItem={renderSalonItem}\r\n            keyExtractor={item => item._id}\r\n            contentContainerStyle={{ paddingBottom: 10 }}\r\n            ListEmptyComponent={\r\n              <View style={styles.emptyContainer}>\r\n                <Text style={styles.emptyText}>No salons found</Text>\r\n              </View>\r\n            }\r\n          />\r\n        </View>\r\n\r\n        {/* Staff Management */}\r\n        <View style={styles.section}>\r\n          <View style={styles.sectionHeader}>\r\n            <Text style={styles.sectionTitle}>Staff Management</Text>\r\n            <Button \r\n              mode=\"contained\" \r\n              icon=\"plus\" \r\n              onPress={() => setStaffVisible(true)}\r\n            >\r\n              Add Staff\r\n            </Button>\r\n          </View>\r\n\r\n          <Searchbar\r\n            placeholder=\"Search users...\"\r\n            onChangeText={setSearchQuery}\r\n            value={searchQuery}\r\n            style={styles.searchbar}\r\n          />\r\n\r\n          <Text style={styles.subtitle}>Barbers ({barbers.length})</Text>\r\n          <FlatList\r\n            data={barbers.filter(b => \r\n              b.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n              b.email.toLowerCase().includes(searchQuery.toLowerCase())\r\n            )}\r\n            renderItem={renderUserItem}\r\n            keyExtractor={item => item._id}\r\n            contentContainerStyle={{ paddingBottom: 10 }}\r\n            ListEmptyComponent={\r\n              <View style={styles.emptyContainer}>\r\n                <Text style={styles.emptyText}>No barbers found</Text>\r\n              </View>\r\n            }\r\n          />\r\n\r\n          <Text style={styles.subtitle}>Managers ({managers.length})</Text>\r\n          <FlatList\r\n            data={managers.filter(m => \r\n              m.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n              m.email.toLowerCase().includes(searchQuery.toLowerCase())\r\n            )}\r\n            renderItem={renderUserItem}\r\n            keyExtractor={item => item._id}\r\n            contentContainerStyle={{ paddingBottom: 10 }}\r\n            ListEmptyComponent={\r\n              <View style={styles.emptyContainer}>\r\n                <Text style={styles.emptyText}>No managers found</Text>\r\n              </View>\r\n            }\r\n          />\r\n        </View>\r\n      </ScrollView>\r\n\r\n      {/* Add Staff Modal */}\r\n      <Portal>\r\n        <Modal\r\n          visible={staffVisible}\r\n          onDismiss={() => setStaffVisible(false)}\r\n          contentContainerStyle={styles.modalContent}\r\n        >\r\n          <Title style={styles.modalTitle}>Add New Staff Member</Title>\r\n          \r\n          <TextInput\r\n            label=\"Full Name\"\r\n            value={newUserForm.name}\r\n            onChangeText={text => {\r\n              setNewUserForm({...newUserForm, name: text});\r\n              \r\n              // Auto-generate staff ID when name changes and role is selected\r\n              if (text && ['barber', 'manager'].includes(newUserForm.role)) {\r\n                const nameInitials = text\r\n                  .split(' ')\r\n                  .map(n => n[0])\r\n                  .join('')\r\n                  .toUpperCase();\r\n                const randomNum = Math.floor(1000 + Math.random() * 9000);\r\n                const rolePrefix = newUserForm.role === 'manager' ? 'MGR' : 'BRB';\r\n                const staffId = `${rolePrefix}-${nameInitials}${randomNum}`;\r\n                console.log('Auto-generated Staff ID:', staffId);\r\n              }\r\n            }}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Email\"\r\n            value={newUserForm.email}\r\n            onChangeText={text => setNewUserForm({...newUserForm, email: text})}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Password\"\r\n            value={newUserForm.password}\r\n            onChangeText={text => setNewUserForm({...newUserForm, password: text})}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n            secureTextEntry\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Phone\"\r\n            value={newUserForm.phone}\r\n            onChangeText={text => setNewUserForm({...newUserForm, phone: text})}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n            keyboardType=\"phone-pad\"\r\n          />\r\n          \r\n          <View style={styles.roleSelector}>\r\n            <Text style={styles.roleLabel}>Role:</Text>\r\n            <View style={styles.roleButtons}>\r\n              <Button\r\n                mode={newUserForm.role === 'barber' ? 'contained' : 'outlined'}\r\n                onPress={() => {\r\n                  // Update role and regenerate ID if name exists\r\n                  const role = 'barber';\r\n                  setNewUserForm({...newUserForm, role});\r\n                  \r\n                  if (newUserForm.name) {\r\n                    const nameInitials = newUserForm.name\r\n                      .split(' ')\r\n                      .map(n => n[0])\r\n                      .join('')\r\n                      .toUpperCase();\r\n                    const randomNum = Math.floor(1000 + Math.random() * 9000);\r\n                    console.log('Auto-generated Barber ID:', `BRB-${nameInitials}${randomNum}`);\r\n                  }\r\n                }}\r\n                style={styles.roleButton}\r\n              >\r\n                Barber\r\n              </Button>\r\n              \r\n              <Button\r\n                mode={newUserForm.role === 'manager' ? 'contained' : 'outlined'}\r\n                onPress={() => {\r\n                  // Update role and regenerate ID if name exists\r\n                  const role = 'manager';\r\n                  setNewUserForm({...newUserForm, role});\r\n                  \r\n                  if (newUserForm.name) {\r\n                    const nameInitials = newUserForm.name\r\n                      .split(' ')\r\n                      .map(n => n[0])\r\n                      .join('')\r\n                      .toUpperCase();\r\n                    const randomNum = Math.floor(1000 + Math.random() * 9000);\r\n                    console.log('Auto-generated Manager ID:', `MGR-${nameInitials}${randomNum}`);\r\n                  }\r\n                }}\r\n                style={styles.roleButton}\r\n              >\r\n                Manager\r\n              </Button>\r\n            </View>\r\n          </View>\r\n          \r\n          <View style={styles.modalActions}>\r\n            <Button onPress={() => setStaffVisible(false)} style={styles.button}>\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              mode=\"contained\" \r\n              onPress={handleCreateUser} \r\n              loading={loading}\r\n              style={styles.button}\r\n            >\r\n              Add Staff\r\n            </Button>\r\n          </View>\r\n        </Modal>\r\n      </Portal>\r\n\r\n      {/* Add Salon Modal */}\r\n      <Portal>\r\n        <Modal\r\n          visible={salonVisible}\r\n          onDismiss={() => setSalonVisible(false)}\r\n          contentContainerStyle={styles.modalContent}\r\n        >\r\n          <Title style={styles.modalTitle}>Add New Salon</Title>\r\n          \r\n          <TextInput\r\n            label=\"Salon Name\"\r\n            value={newSalonForm.name}\r\n            onChangeText={text => setNewSalonForm({...newSalonForm, name: text})}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Street Address\"\r\n            value={newSalonForm.address.street}\r\n            onChangeText={text => setNewSalonForm({\r\n              ...newSalonForm, \r\n              address: {...newSalonForm.address, street: text}\r\n            })}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"City\"\r\n            value={newSalonForm.address.city}\r\n            onChangeText={text => setNewSalonForm({\r\n              ...newSalonForm, \r\n              address: {...newSalonForm.address, city: text}\r\n            })}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"State/Region\"\r\n            value={newSalonForm.address.state}\r\n            onChangeText={text => setNewSalonForm({\r\n              ...newSalonForm, \r\n              address: {...newSalonForm.address, state: text}\r\n            })}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Postal Code\"\r\n            value={newSalonForm.address.postalCode}\r\n            onChangeText={text => setNewSalonForm({\r\n              ...newSalonForm, \r\n              address: {...newSalonForm.address, postalCode: text}\r\n            })}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n            keyboardType=\"numeric\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Phone\"\r\n            value={newSalonForm.phone}\r\n            onChangeText={text => setNewSalonForm({...newSalonForm, phone: text})}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n            keyboardType=\"phone-pad\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Email\"\r\n            value={newSalonForm.email}\r\n            onChangeText={text => setNewSalonForm({...newSalonForm, email: text})}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Description\"\r\n            value={newSalonForm.description}\r\n            onChangeText={text => setNewSalonForm({...newSalonForm, description: text})}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n            multiline\r\n            numberOfLines={3}\r\n          />\r\n          \r\n          <View style={styles.modalActions}>\r\n            <Button onPress={() => setSalonVisible(false)} style={styles.button}>\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              mode=\"contained\" \r\n              onPress={handleCreateSalon} \r\n              loading={loading}\r\n              style={styles.button}\r\n            >\r\n              Add Salon\r\n            </Button>\r\n          </View>\r\n        </Modal>\r\n      </Portal>\r\n\r\n      <FAB\r\n        style={styles.fab}\r\n        icon=\"refresh\"\r\n        onPress={() => {\r\n          fetchUsers();\r\n          fetchSalons();\r\n          fetchStats();\r\n        }}\r\n        label=\"Refresh\"\r\n      />\r\n\r\n      {/* Edit User Modal */}\r\n      <Portal>\r\n        <Modal\r\n          visible={selectedUserId !== null}\r\n          onDismiss={() => setSelectedUserId(null)}\r\n          contentContainerStyle={styles.modalContent}\r\n        >\r\n          <Title style={styles.modalTitle}>Edit Staff Member</Title>\r\n          \r\n          <TextInput\r\n            label=\"Full Name\"\r\n            value={editUserForm.name}\r\n            onChangeText={text => setEditUserForm({...editUserForm, name: text})}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Email\"\r\n            value={editUserForm.email}\r\n            onChangeText={text => setEditUserForm({...editUserForm, email: text})}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Phone\"\r\n            value={editUserForm.phone}\r\n            onChangeText={text => setEditUserForm({...editUserForm, phone: text})}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n            keyboardType=\"phone-pad\"\r\n          />\r\n          \r\n          <View style={styles.roleSelector}>\r\n            <Text style={styles.roleLabel}>Role:</Text>\r\n            <View style={styles.roleButtons}>\r\n              <Button\r\n                mode={editUserForm.role === 'barber' ? 'contained' : 'outlined'}\r\n                onPress={() => setEditUserForm({...editUserForm, role: 'barber'})}\r\n                style={styles.roleButton}\r\n              >\r\n                Barber\r\n              </Button>\r\n              \r\n              <Button\r\n                mode={editUserForm.role === 'manager' ? 'contained' : 'outlined'}\r\n                onPress={() => setEditUserForm({...editUserForm, role: 'manager'})}\r\n                style={styles.roleButton}\r\n              >\r\n                Manager\r\n              </Button>\r\n            </View>\r\n          </View>\r\n          \r\n          <View style={styles.statusSelector}>\r\n            <Text style={styles.roleLabel}>Status:</Text>\r\n            <View style={styles.roleButtons}>\r\n              <Button\r\n                mode={editUserForm.isActive ? 'contained' : 'outlined'}\r\n                onPress={() => setEditUserForm({...editUserForm, isActive: true})}\r\n                style={[styles.roleButton, {backgroundColor: editUserForm.isActive ? '#4CAF50' : 'transparent'}]}\r\n                labelStyle={{color: editUserForm.isActive ? 'white' : '#4CAF50'}}\r\n              >\r\n                Active\r\n              </Button>\r\n              \r\n              <Button\r\n                mode={!editUserForm.isActive ? 'contained' : 'outlined'}\r\n                onPress={() => setEditUserForm({...editUserForm, isActive: false})}\r\n                style={[styles.roleButton, {backgroundColor: !editUserForm.isActive ? '#F44336' : 'transparent'}]}\r\n                labelStyle={{color: !editUserForm.isActive ? 'white' : '#F44336'}}\r\n              >\r\n                Inactive\r\n              </Button>\r\n            </View>\r\n          </View>\r\n          \r\n          <View style={styles.modalActions}>\r\n            <Button onPress={() => setSelectedUserId(null)} style={styles.button}>\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              mode=\"contained\" \r\n              onPress={handleUpdateUser} \r\n              loading={loading}\r\n              style={styles.button}\r\n            >\r\n              Update Staff\r\n            </Button>\r\n          </View>\r\n        </Modal>\r\n      </Portal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  centeredContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  header: {\r\n    backgroundColor: '#0F4C75',\r\n    padding: 20,\r\n    paddingTop: 50,\r\n    paddingBottom: 20,\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  headerSubtitle: {\r\n    fontSize: 16,\r\n    color: '#BBE1FA',\r\n    marginTop: 5,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n  },\r\n  statsContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    padding: 15,\r\n  },\r\n  statsCard: {\r\n    width: '30%',\r\n    elevation: 2,\r\n  },\r\n  statsValue: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n  },\r\n  section: {\r\n    padding: 15,\r\n    marginBottom: 20,\r\n  },\r\n  sectionHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#1B262C',\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginTop: 15,\r\n    marginBottom: 10,\r\n    color: '#1B262C',\r\n  },\r\n  searchbar: {\r\n    marginBottom: 15,\r\n    elevation: 2,\r\n  },\r\n  userCard: {\r\n    marginBottom: 10,\r\n    elevation: 2,\r\n  },\r\n  userCardHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  userInfo: {\r\n    flex: 1,\r\n    marginLeft: 10,\r\n  },\r\n  userDetailsRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginTop: 2,\r\n  },\r\n  userEmail: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  },\r\n  userPhone: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  },\r\n  staffIdContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  staffId: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  },\r\n  roleChip: {\r\n    marginLeft: 10,\r\n  },\r\n  userCardActions: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginTop: 10,\r\n  },\r\n  emptyText: {\r\n    textAlign: 'center',\r\n    padding: 20,\r\n    color: '#666',\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: '#0F4C75',\r\n  },\r\n  modalContent: {\r\n    backgroundColor: 'white',\r\n    padding: 20,\r\n    margin: 20,\r\n    borderRadius: 5,\r\n  },\r\n  modalTitle: {\r\n    marginBottom: 15,\r\n    textAlign: 'center',\r\n  },\r\n  input: {\r\n    marginBottom: 15,\r\n  },\r\n  roleSelector: {\r\n    marginVertical: 15,\r\n  },\r\n  roleLabel: {\r\n    marginBottom: 10,\r\n    fontSize: 16,\r\n  },\r\n  roleButtons: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n  },\r\n  roleButton: {\r\n    width: '45%',\r\n  },\r\n  modalActions: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginTop: 20,\r\n  },\r\n  button: {\r\n    marginHorizontal: 5,\r\n    width: '45%',\r\n  },\r\n  statusChip: {\r\n    marginLeft: 10,\r\n  },\r\n  salonCard: {\r\n    marginBottom: 10,\r\n    elevation: 2,\r\n  },\r\n  salonCardHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  salonInfo: {\r\n    flex: 1,\r\n    marginLeft: 10,\r\n  },\r\n  salonAddress: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  },\r\n  salonPhone: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  },\r\n  salonCardActions: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginTop: 10,\r\n  },\r\n  emptyContainer: {\r\n    padding: 20,\r\n    alignItems: 'center',\r\n  },\r\n  statusSelector: {\r\n    marginVertical: 15,\r\n  },\r\n});\r\n\r\nexport default DashboardScreen; ","import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, StyleSheet, ScrollView, Alert } from 'react-native';\r\nimport { Text, Card, Button, Title, TextInput, ActivityIndicator, Divider } from 'react-native-paper';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport apiClient from '../../api/client';\r\n\r\nconst SalonDetailsScreen = ({ route, navigation }) => {\r\n  const { salonId } = route.params;\r\n  const { userInfo } = useContext(AuthContext);\r\n  \r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [salon, setSalon] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    address: {\r\n      street: '',\r\n      city: '',\r\n      state: '',\r\n      postalCode: ''\r\n    },\r\n    phone: '',\r\n    email: '',\r\n    description: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchSalonDetails();\r\n  }, [salonId]);\r\n\r\n  const fetchSalonDetails = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const response = await apiClient.get(`/admin/salons/${salonId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        const salonData = response.data.salon;\r\n        setSalon(salonData);\r\n        setFormData({\r\n          name: salonData.name || '',\r\n          address: {\r\n            street: salonData.address?.street || '',\r\n            city: salonData.address?.city || '',\r\n            state: salonData.address?.state || '',\r\n            postalCode: salonData.address?.postalCode || ''\r\n          },\r\n          phone: salonData.phone || '',\r\n          email: salonData.email || '',\r\n          description: salonData.description || ''\r\n        });\r\n        \r\n        console.log('Salon details loaded');\r\n      } else {\r\n        console.error('Failed to load salon details:', response.data);\r\n        Alert.alert('Error', 'Failed to load salon details');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching salon details:', error);\r\n      setLoading(false);\r\n      Alert.alert('Error', 'Failed to load salon details: ' + (error.message || 'Unknown error'));\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    // Validate form\r\n    if (!formData.name || !formData.address.street || !formData.address.city || !formData.phone) {\r\n      Alert.alert('Error', 'Please fill in all required fields (name, address, phone)');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setSaving(true);\r\n      \r\n      const response = await apiClient.put(`/admin/salons/${salonId}`, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        Alert.alert('Success', 'Salon updated successfully', [\r\n          { text: 'OK', onPress: () => navigation.goBack() }\r\n        ]);\r\n      } else {\r\n        console.error('Failed to update salon:', response.data);\r\n        Alert.alert('Error', response.data?.message || 'Failed to update salon');\r\n      }\r\n      \r\n      setSaving(false);\r\n    } catch (error) {\r\n      console.error('Error updating salon:', error);\r\n      setSaving(false);\r\n      Alert.alert('Error', error.response?.data?.message || 'Failed to update salon');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n        <Text style={{ marginTop: 20 }}>Loading salon details...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Edit Salon</Text>\r\n      </View>\r\n      \r\n      <ScrollView style={styles.content}>\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <Title style={styles.title}>Salon Information</Title>\r\n            \r\n            <TextInput\r\n              label=\"Salon Name *\"\r\n              value={formData.name}\r\n              onChangeText={(text) => setFormData({...formData, name: text})}\r\n              style={styles.input}\r\n              mode=\"outlined\"\r\n            />\r\n            \r\n            <TextInput\r\n              label=\"Street Address *\"\r\n              value={formData.address.street}\r\n              onChangeText={(text) => setFormData({\r\n                ...formData, \r\n                address: {...formData.address, street: text}\r\n              })}\r\n              style={styles.input}\r\n              mode=\"outlined\"\r\n            />\r\n            \r\n            <TextInput\r\n              label=\"City *\"\r\n              value={formData.address.city}\r\n              onChangeText={(text) => setFormData({\r\n                ...formData, \r\n                address: {...formData.address, city: text}\r\n              })}\r\n              style={styles.input}\r\n              mode=\"outlined\"\r\n            />\r\n            \r\n            <TextInput\r\n              label=\"State/Region\"\r\n              value={formData.address.state}\r\n              onChangeText={(text) => setFormData({\r\n                ...formData, \r\n                address: {...formData.address, state: text}\r\n              })}\r\n              style={styles.input}\r\n              mode=\"outlined\"\r\n            />\r\n            \r\n            <TextInput\r\n              label=\"Postal Code\"\r\n              value={formData.address.postalCode}\r\n              onChangeText={(text) => setFormData({\r\n                ...formData, \r\n                address: {...formData.address, postalCode: text}\r\n              })}\r\n              style={styles.input}\r\n              mode=\"outlined\"\r\n              keyboardType=\"numeric\"\r\n            />\r\n            \r\n            <TextInput\r\n              label=\"Phone *\"\r\n              value={formData.phone}\r\n              onChangeText={(text) => setFormData({...formData, phone: text})}\r\n              style={styles.input}\r\n              mode=\"outlined\"\r\n              keyboardType=\"phone-pad\"\r\n            />\r\n            \r\n            <TextInput\r\n              label=\"Email\"\r\n              value={formData.email}\r\n              onChangeText={(text) => setFormData({...formData, email: text})}\r\n              style={styles.input}\r\n              mode=\"outlined\"\r\n              keyboardType=\"email-address\"\r\n              autoCapitalize=\"none\"\r\n            />\r\n            \r\n            <TextInput\r\n              label=\"Description\"\r\n              value={formData.description}\r\n              onChangeText={(text) => setFormData({...formData, description: text})}\r\n              style={styles.input}\r\n              mode=\"outlined\"\r\n              multiline\r\n              numberOfLines={3}\r\n            />\r\n            \r\n            <Text style={styles.note}>* Required fields</Text>\r\n            \r\n            <View style={styles.buttonContainer}>\r\n              <Button \r\n                mode=\"outlined\" \r\n                onPress={() => navigation.goBack()}\r\n                style={styles.button}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button \r\n                mode=\"contained\" \r\n                onPress={handleSave}\r\n                loading={saving}\r\n                disabled={saving}\r\n                style={styles.button}\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </View>\r\n          </Card.Content>\r\n        </Card>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  header: {\r\n    backgroundColor: '#0F4C75',\r\n    padding: 20,\r\n    paddingTop: 50,\r\n    paddingBottom: 20,\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: 15,\r\n  },\r\n  card: {\r\n    marginBottom: 20,\r\n    elevation: 2,\r\n  },\r\n  title: {\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    marginBottom: 15,\r\n  },\r\n  note: {\r\n    color: '#666',\r\n    marginBottom: 20,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginTop: 10,\r\n  },\r\n  button: {\r\n    width: '45%',\r\n  }\r\n});\r\n\r\nexport default SalonDetailsScreen; ","import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, StyleSheet, ScrollView, Alert, FlatList } from 'react-native';\r\nimport { Text, Card, Button, Title, ActivityIndicator, Divider, Avatar, Chip, Portal, Modal, RadioButton } from 'react-native-paper';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport apiClient from '../../api/client';\r\n\r\nconst SalonStaffScreen = ({ route, navigation }) => {\r\n  const { salonId } = route.params;\r\n  const { userInfo } = useContext(AuthContext);\r\n  \r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [salon, setSalon] = useState(null);\r\n  const [staff, setStaff] = useState([]);\r\n  const [availableUsers, setAvailableUsers] = useState([]);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchSalonWithStaff();\r\n  }, [salonId]);\r\n\r\n  const fetchSalonWithStaff = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Get salon details with staff\r\n      const response = await apiClient.get(`/admin/salons/${salonId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        const salonData = response.data.salon;\r\n        setSalon(salonData);\r\n        \r\n        // Fetch staff details\r\n        if (salonData.staff && salonData.staff.length > 0) {\r\n          const staffIds = Array.isArray(salonData.staff) \r\n            ? salonData.staff.map(s => typeof s === 'object' ? s._id : s) \r\n            : [];\r\n            \r\n          const staffResponse = await apiClient.get('/admin/users', {\r\n            headers: {\r\n              Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n          });\r\n          \r\n          if (staffResponse.data && staffResponse.data.success) {\r\n            // Filter users that are in the salon's staff\r\n            const staffMembers = staffResponse.data.users.filter(user => \r\n              staffIds.includes(user._id)\r\n            );\r\n            setStaff(staffMembers);\r\n            \r\n            // Filter available barbers and managers not in this salon\r\n            const availableStaff = staffResponse.data.users.filter(user => \r\n              (user.role === 'barber' || user.role === 'manager') && \r\n              !staffIds.includes(user._id)\r\n            );\r\n            setAvailableUsers(availableStaff);\r\n          }\r\n        } else {\r\n          // If no staff, get available barbers and managers\r\n          const usersResponse = await apiClient.get('/admin/users', {\r\n            headers: {\r\n              Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n          });\r\n          \r\n          if (usersResponse.data && usersResponse.data.success) {\r\n            const availableStaff = usersResponse.data.users.filter(user => \r\n              user.role === 'barber' || user.role === 'manager'\r\n            );\r\n            setAvailableUsers(availableStaff);\r\n          }\r\n        }\r\n        \r\n        console.log('Salon staff loaded');\r\n      } else {\r\n        console.error('Failed to load salon details:', response.data);\r\n        Alert.alert('Error', 'Failed to load salon details');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching salon staff:', error);\r\n      setLoading(false);\r\n      Alert.alert('Error', 'Failed to load salon staff: ' + (error.message || 'Unknown error'));\r\n    }\r\n  };\r\n\r\n  const addStaffToSalon = async () => {\r\n    if (!selectedUser) {\r\n      Alert.alert('Error', 'Please select a user to add');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setSaving(true);\r\n      \r\n      // First, ensure the user has the role of 'barber' (lowercase)\r\n      const userUpdateResponse = await apiClient.put(`/admin/users/${selectedUser._id}`, \r\n        { role: 'barber' },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n        }\r\n      );\r\n      \r\n      if (!userUpdateResponse.data || !userUpdateResponse.data.success) {\r\n        throw new Error('Failed to update user role');\r\n      }\r\n      \r\n      // Then add to salon\r\n      const response = await apiClient.post(`/admin/salons/${salonId}/staff`, \r\n        { staffId: selectedUser._id },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n        }\r\n      );\r\n      \r\n      if (response.data && response.data.success) {\r\n        Alert.alert('Success', `${selectedUser.name} has been added to the salon staff`);\r\n        setModalVisible(false);\r\n        setSelectedUser(null);\r\n        fetchSalonWithStaff(); // Refresh data\r\n      } else {\r\n        throw new Error('Failed to add staff to salon');\r\n      }\r\n      \r\n      setSaving(false);\r\n    } catch (error) {\r\n      console.error('Error adding staff:', error);\r\n      Alert.alert('Error', error.message || 'Failed to add staff to salon');\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleRemoveStaff = (staffId) => {\r\n    Alert.alert(\r\n      'Confirm Removal',\r\n      'Are you sure you want to remove this staff member from the salon?',\r\n      [\r\n        {\r\n          text: 'Cancel',\r\n          style: 'cancel',\r\n        },\r\n        {\r\n          text: 'Remove',\r\n          style: 'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              setLoading(true);\r\n              \r\n              const response = await apiClient.delete(`/admin/salons/${salonId}/staff/${staffId}`, {\r\n                headers: {\r\n                  Authorization: `Bearer ${userInfo.token}`\r\n                }\r\n              });\r\n              \r\n              if (response.data && response.data.success) {\r\n                Alert.alert('Success', 'Staff member removed successfully');\r\n                fetchSalonWithStaff();\r\n              } else {\r\n                console.error('Failed to remove staff:', response.data);\r\n                Alert.alert('Error', response.data?.message || 'Failed to remove staff member');\r\n              }\r\n              \r\n              setLoading(false);\r\n            } catch (error) {\r\n              console.error('Error removing staff:', error);\r\n              setLoading(false);\r\n              Alert.alert('Error', error.response?.data?.message || 'Failed to remove staff member');\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n\r\n  const renderStaffItem = ({ item }) => (\r\n    <Card style={styles.staffCard}>\r\n      <Card.Content>\r\n        <View style={styles.staffCardHeader}>\r\n          <Avatar.Text \r\n            size={40} \r\n            label={item.name.split(' ').map(n => n[0]).join('')} \r\n            backgroundColor=\"#0F4C75\" \r\n          />\r\n          <View style={styles.staffInfo}>\r\n            <Title>{item.name}</Title>\r\n            <View style={styles.staffDetailsRow}>\r\n              <Text style={styles.staffEmail}>{item.email}</Text>\r\n              {item.phone && <Text style={styles.staffPhone}>• {item.phone}</Text>}\r\n            </View>\r\n            {item.staffId && (\r\n              <Text style={styles.staffId}>ID: {item.staffId}</Text>\r\n            )}\r\n          </View>\r\n          <Chip \r\n            mode=\"outlined\" \r\n            style={[styles.roleChip, {\r\n              backgroundColor: item.role === 'manager' ? '#FFD700' : '#BBE1FA'\r\n            }]}\r\n          >\r\n            {item.role.charAt(0).toUpperCase() + item.role.slice(1)}\r\n          </Chip>\r\n        </View>\r\n        <Divider style={{ marginVertical: 10 }} />\r\n        <Button \r\n          mode=\"outlined\" \r\n          icon=\"account-remove\" \r\n          textColor=\"#D32F2F\"\r\n          onPress={() => handleRemoveStaff(item._id)}\r\n        >\r\n          Remove from Salon\r\n        </Button>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n\r\n  const renderAvailableUserItem = ({ item }) => (\r\n    <View style={styles.radioItem}>\r\n      <RadioButton\r\n        value={item._id}\r\n        status={selectedUser && selectedUser._id === item._id ? 'checked' : 'unchecked'}\r\n        onPress={() => setSelectedUser(item)}\r\n      />\r\n      <View style={styles.radioItemContent}>\r\n        <Text style={styles.radioItemName}>{item.name}</Text>\r\n        <Text style={styles.radioItemRole}>{item.role || 'No role'}</Text>\r\n        {item.staffId && <Text style={styles.radioItemId}>ID: {item.staffId}</Text>}\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  if (loading && !salon) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n        <Text style={{ marginTop: 20 }}>Loading salon staff...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Salon Staff</Text>\r\n        {salon && <Text style={styles.headerSubtitle}>{salon.name}</Text>}\r\n      </View>\r\n      \r\n      <View style={styles.content}>\r\n        <View style={styles.actionBar}>\r\n          <Button \r\n            mode=\"contained\" \r\n            icon=\"account-plus\" \r\n            onPress={() => setModalVisible(true)}\r\n          >\r\n            Add Staff Member\r\n          </Button>\r\n        </View>\r\n        \r\n        <Title style={styles.title}>Current Staff ({staff.length})</Title>\r\n        \r\n        {staff.length > 0 ? (\r\n          <FlatList\r\n            data={staff}\r\n            renderItem={renderStaffItem}\r\n            keyExtractor={item => item._id}\r\n            contentContainerStyle={{ paddingBottom: 20 }}\r\n          />\r\n        ) : (\r\n          <Card style={styles.emptyCard}>\r\n            <Card.Content>\r\n              <Text style={styles.emptyText}>No staff members assigned to this salon</Text>\r\n            </Card.Content>\r\n          </Card>\r\n        )}\r\n      </View>\r\n      \r\n      <Portal>\r\n        <Modal\r\n          visible={modalVisible}\r\n          onDismiss={() => {\r\n            setModalVisible(false);\r\n            setSelectedUser(null);\r\n          }}\r\n          contentContainerStyle={styles.modalContent}\r\n        >\r\n          <Title style={styles.modalTitle}>Add Staff to Salon</Title>\r\n          \r\n          <ScrollView style={styles.userList}>\r\n            {availableUsers.length > 0 ? (\r\n              <FlatList\r\n                data={availableUsers}\r\n                renderItem={renderAvailableUserItem}\r\n                keyExtractor={item => item._id}\r\n                scrollEnabled={false}\r\n              />\r\n            ) : (\r\n              <View style={styles.emptyUserList}>\r\n                <Text style={styles.emptyText}>No available users to add as staff</Text>\r\n              </View>\r\n            )}\r\n          </ScrollView>\r\n          \r\n          <View style={styles.modalActions}>\r\n            <Button \r\n              onPress={() => {\r\n                setModalVisible(false);\r\n                setSelectedUser(null);\r\n              }}\r\n              style={styles.button}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              mode=\"contained\" \r\n              onPress={addStaffToSalon}\r\n              loading={saving}\r\n              disabled={!selectedUser || saving}\r\n              style={styles.button}\r\n            >\r\n              Add to Salon\r\n            </Button>\r\n          </View>\r\n        </Modal>\r\n      </Portal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  header: {\r\n    backgroundColor: '#0F4C75',\r\n    padding: 20,\r\n    paddingTop: 50,\r\n    paddingBottom: 20,\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  headerSubtitle: {\r\n    fontSize: 16,\r\n    color: '#BBE1FA',\r\n    marginTop: 5,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: 15,\r\n  },\r\n  actionBar: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    marginBottom: 15,\r\n  },\r\n  title: {\r\n    marginBottom: 15,\r\n  },\r\n  staffCard: {\r\n    marginBottom: 10,\r\n    elevation: 2,\r\n  },\r\n  staffCardHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  staffInfo: {\r\n    flex: 1,\r\n    marginLeft: 10,\r\n  },\r\n  staffDetailsRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  staffEmail: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  },\r\n  staffPhone: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n    marginLeft: 5,\r\n  },\r\n  staffId: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n    marginTop: 3,\r\n  },\r\n  roleChip: {\r\n    marginLeft: 10,\r\n  },\r\n  emptyCard: {\r\n    padding: 20,\r\n    alignItems: 'center',\r\n  },\r\n  emptyText: {\r\n    textAlign: 'center',\r\n    color: '#666',\r\n  },\r\n  modalContent: {\r\n    backgroundColor: 'white',\r\n    padding: 20,\r\n    margin: 20,\r\n    borderRadius: 5,\r\n    maxHeight: '80%',\r\n  },\r\n  modalTitle: {\r\n    marginBottom: 15,\r\n    textAlign: 'center',\r\n  },\r\n  userList: {\r\n    maxHeight: 300,\r\n  },\r\n  radioItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#eee',\r\n  },\r\n  radioItemContent: {\r\n    marginLeft: 10,\r\n  },\r\n  radioItemName: {\r\n    fontWeight: 'bold',\r\n  },\r\n  radioItemRole: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n    textTransform: 'capitalize',\r\n  },\r\n  radioItemId: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  },\r\n  modalActions: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginTop: 20,\r\n  },\r\n  button: {\r\n    marginHorizontal: 5,\r\n    width: '45%',\r\n  },\r\n  noUsersText: {\r\n    textAlign: 'center',\r\n    marginVertical: 20,\r\n    color: '#666',\r\n  },\r\n  emptyUserList: {\r\n    padding: 20,\r\n    alignItems: 'center',\r\n  }\r\n});\r\n\r\nexport default SalonStaffScreen; ","import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, StyleSheet, ScrollView, FlatList, Alert, TouchableOpacity } from 'react-native';\r\nimport { Text, Card, Title, Paragraph, Avatar, Button, ActivityIndicator, Chip, Searchbar, ProgressBar, Modal, Portal, DataTable } from 'react-native-paper';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport apiClient from '../../api/client';\r\nimport { format } from 'date-fns';\r\n\r\nconst ManagerDashboardScreen = ({ navigation }) => {\r\n  const { userInfo } = useContext(AuthContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const [barbers, setBarbers] = useState([]);\r\n  const [selectedBarber, setSelectedBarber] = useState(null);\r\n  const [barberStats, setBarberStats] = useState({});\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [dateFilter, setDateFilter] = useState('week'); // 'day', 'week', 'month'\r\n  const [detailsVisible, setDetailsVisible] = useState(false);\r\n  const [appointmentHistory, setAppointmentHistory] = useState([]);\r\n\r\n  // Check if user is manager\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.role !== 'manager' && userInfo.role !== 'admin') {\r\n      Alert.alert('Access Denied', 'Only managers can access this screen.');\r\n      navigation.goBack();\r\n    } else {\r\n      fetchBarbers();\r\n    }\r\n  }, [userInfo]);\r\n\r\n  // Fetch barbers when date filter changes\r\n  useEffect(() => {\r\n    if (selectedBarber) {\r\n      fetchBarberStats(selectedBarber._id);\r\n    }\r\n  }, [dateFilter, selectedBarber]);\r\n\r\n  // Manager API endpoints\r\n  const managerApi = {\r\n    getBarbers: () => apiClient.get('/users/barbers'),\r\n    getBarberStats: (barberId, period) => apiClient.get(`/manager/barber/${barberId}/stats?period=${period}`),\r\n    getBarberAppointments: (barberId, period) => apiClient.get(`/manager/barber/${barberId}/appointments?period=${period}`),\r\n    getManagerSalons: () => apiClient.get('/manager/salons')\r\n  };\r\n\r\n  // Fetch barbers\r\n  const fetchBarbers = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await apiClient.get('/users/barbers');\r\n      \r\n      if (response.data && response.data.success) {\r\n        setBarbers(response.data.barbers || []);\r\n        \r\n        // If there are barbers, select the first one by default\r\n        if (response.data.barbers && response.data.barbers.length > 0) {\r\n          setSelectedBarber(response.data.barbers[0]);\r\n          fetchBarberStats(response.data.barbers[0]._id);\r\n        }\r\n      } else {\r\n        Alert.alert('Error', 'Failed to load barbers');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching barbers:', error);\r\n      setLoading(false);\r\n      Alert.alert('Error', 'Failed to load barbers');\r\n    }\r\n  };\r\n\r\n  // Fetch barber statistics\r\n  const fetchBarberStats = async (barberId) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Make real API calls to get barber stats and appointments\r\n      const statsResponse = await apiClient.get(`/manager/barber/${barberId}/stats?period=${dateFilter}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      const appointmentsResponse = await apiClient.get(`/manager/barber/${barberId}/appointments?period=${dateFilter}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      if (statsResponse.data && statsResponse.data.success && \r\n          appointmentsResponse.data && appointmentsResponse.data.success) {\r\n        \r\n        const barberStatsData = statsResponse.data.stats;\r\n        const appointments = appointmentsResponse.data.appointments || [];\r\n        \r\n        // Process schedule data for today\r\n        const today = new Date();\r\n        today.setHours(0, 0, 0, 0);\r\n        \r\n        // Filter appointments for today to build the schedule\r\n        const todayAppointments = appointments.filter(app => {\r\n          const appDate = new Date(app.date);\r\n          appDate.setHours(0, 0, 0, 0);\r\n          return appDate.getTime() === today.getTime();\r\n        });\r\n        \r\n        // Create time slots (9am - 6pm)\r\n        const hoursInDay = 9;\r\n        const timeSlots = [];\r\n        \r\n        for (let i = 0; i < hoursInDay; i++) {\r\n          const hour = 9 + i;\r\n          \r\n          // Morning slot (Hour:00)\r\n          const morningSlot = {\r\n            time: `${hour}:00 - ${hour}:30`,\r\n            status: 'free'\r\n          };\r\n          \r\n          // Afternoon slot (Hour:30)\r\n          const afternoonSlot = {\r\n            time: `${hour}:30 - ${hour + 1}:00`,\r\n            status: 'free'\r\n          };\r\n          \r\n          // Check if slots are booked\r\n          todayAppointments.forEach(app => {\r\n            const [startHour, startMin] = app.startTime.split(':').map(Number);\r\n            \r\n            if (startHour === hour && startMin === 0) {\r\n              morningSlot.status = 'booked';\r\n              morningSlot.appointmentId = app._id;\r\n              morningSlot.clientName = app.customer?.name || 'Client';\r\n              morningSlot.service = app.service?.name || 'Service';\r\n            }\r\n            \r\n            if (startHour === hour && startMin === 30) {\r\n              afternoonSlot.status = 'booked';\r\n              afternoonSlot.appointmentId = app._id;\r\n              afternoonSlot.clientName = app.customer?.name || 'Client';\r\n              afternoonSlot.service = app.service?.name || 'Service';\r\n            }\r\n          });\r\n          \r\n          timeSlots.push(morningSlot);\r\n          timeSlots.push(afternoonSlot);\r\n        }\r\n        \r\n        // Format appointment history from real data\r\n        const history = appointments.map(app => ({\r\n          id: app._id,\r\n          date: new Date(app.date),\r\n          formattedDate: format(new Date(app.date), 'MMM dd, yyyy HH:mm'),\r\n          client: app.customer?.name || 'Unknown Client',\r\n          barber: app.barber?.name || 'Unknown Barber',\r\n          service: app.service?.name || 'Unknown Service',\r\n          serviceType: app.service?.category || 'Unknown Type',\r\n          price: app.service?.price || 0,\r\n          status: app.status\r\n        }));\r\n        \r\n        // Sort by date (newest first)\r\n        history.sort((a, b) => b.date - a.date);\r\n        \r\n        setBarberStats({\r\n          barberId,\r\n          appointmentsCount: barberStatsData.appointmentsCount || 0,\r\n          clientsCount: barberStatsData.clientsCount || 0,\r\n          revenue: barberStatsData.revenue || 0,\r\n          timeSlots,\r\n          utilization: barberStatsData.utilization || 0,\r\n          clientRetention: barberStatsData.clientRetention || 0,\r\n          averageRating: barberStatsData.averageRating || '0.0'\r\n        });\r\n        \r\n        setAppointmentHistory(history);\r\n      } else {\r\n        console.error('Failed to fetch barber stats:', statsResponse.data, appointmentsResponse.data);\r\n        Alert.alert('Error', 'Failed to load barber statistics.');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching barber stats:', error);\r\n      setLoading(false);\r\n      Alert.alert('Error', 'Failed to load barber statistics. Please try again.');\r\n    }\r\n  };\r\n\r\n  // View barber details\r\n  const handleViewDetails = (barber) => {\r\n    setSelectedBarber(barber);\r\n    fetchBarberStats(barber._id);\r\n  };\r\n\r\n  // Show appointment details modal\r\n  const showAppointmentDetails = () => {\r\n    setDetailsVisible(true);\r\n  };\r\n\r\n  // Render barber card\r\n  const renderBarberItem = ({ item }) => (\r\n    <Card \r\n      style={[\r\n        styles.barberCard, \r\n        selectedBarber?._id === item._id ? styles.selectedBarberCard : null\r\n      ]}\r\n      onPress={() => handleViewDetails(item)}\r\n    >\r\n      <Card.Content style={styles.barberCardContent}>\r\n        <Avatar.Image \r\n          size={50} \r\n          source={{ uri: item.profileImage || 'https://randomuser.me/api/portraits/men/32.jpg' }} \r\n        />\r\n        <View style={styles.barberInfo}>\r\n          <Title style={styles.barberName}>{item.name}</Title>\r\n          <Paragraph>{item.specialties?.join(', ') || 'General Barber'}</Paragraph>\r\n        </View>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n\r\n  // Render time slot\r\n  const renderTimeSlot = ({ item }) => (\r\n    <View style={[styles.timeSlot, item.status === 'booked' ? styles.bookedSlot : styles.freeSlot]}>\r\n      <Text style={styles.timeSlotTime}>{item.time}</Text>\r\n      {item.status === 'booked' ? (\r\n        <View style={styles.timeSlotBookingInfo}>\r\n          <Text style={styles.timeSlotClientName}>{item.clientName}</Text>\r\n          <Text style={styles.timeSlotService}>{item.service}</Text>\r\n          {item.serviceType && <Text style={styles.timeSlotServiceType}>{item.serviceType}</Text>}\r\n        </View>\r\n      ) : (\r\n        <Text style={styles.timeSlotStatus}>Free</Text>\r\n      )}\r\n    </View>\r\n  );\r\n\r\n  if (loading && !barbers.length) {\r\n    return (\r\n      <View style={styles.centeredContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n        <Text style={{ marginTop: 20 }}>Loading dashboard...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Manager Header */}\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Manager Dashboard</Text>\r\n        <Text style={styles.headerSubtitle}>Staff Monitoring</Text>\r\n      </View>\r\n      \r\n      {/* Salon Dashboard Button */}\r\n      <Button \r\n        mode=\"contained\" \r\n        icon=\"store\"\r\n        onPress={() => navigation.navigate('SalonDashboard')}\r\n        style={styles.salonButton}\r\n      >\r\n        Salon Dashboard\r\n      </Button>\r\n\r\n      <ScrollView style={styles.content}>\r\n        {/* Date Filter */}\r\n        <View style={styles.dateFilterContainer}>\r\n          <Text style={styles.sectionTitle}>Statistics Period:</Text>\r\n          <View style={styles.dateFilterButtons}>\r\n            <Button \r\n              mode={dateFilter === 'day' ? 'contained' : 'outlined'} \r\n              onPress={() => setDateFilter('day')}\r\n              style={styles.dateFilterButton}\r\n            >\r\n              Day\r\n            </Button>\r\n            <Button \r\n              mode={dateFilter === 'week' ? 'contained' : 'outlined'} \r\n              onPress={() => setDateFilter('week')}\r\n              style={styles.dateFilterButton}\r\n            >\r\n              Week\r\n            </Button>\r\n            <Button \r\n              mode={dateFilter === 'month' ? 'contained' : 'outlined'} \r\n              onPress={() => setDateFilter('month')}\r\n              style={styles.dateFilterButton}\r\n            >\r\n              Month\r\n            </Button>\r\n          </View>\r\n        </View>\r\n\r\n        {/* Barber Selection */}\r\n        <Text style={styles.sectionTitle}>Your Staff:</Text>\r\n        <FlatList\r\n          data={barbers}\r\n          renderItem={renderBarberItem}\r\n          keyExtractor={item => item._id}\r\n          horizontal\r\n          showsHorizontalScrollIndicator={false}\r\n          contentContainerStyle={styles.barberList}\r\n        />\r\n\r\n        {/* Selected Barber Stats */}\r\n        {selectedBarber && barberStats && (\r\n          <View style={styles.statsContainer}>\r\n            <Text style={styles.barberStatsTitle}>Statistics for {selectedBarber.name}</Text>\r\n            \r\n            {/* Stats Cards */}\r\n            <View style={styles.statsCards}>\r\n              <Card style={[styles.statsCard, { backgroundColor: '#E3F2FD' }]}>\r\n                <Card.Content>\r\n                  <Paragraph>Appointments</Paragraph>\r\n                  <Title style={styles.statsValue}>{barberStats.appointmentsCount}</Title>\r\n                </Card.Content>\r\n              </Card>\r\n              \r\n              <Card style={[styles.statsCard, { backgroundColor: '#E8F5E9' }]}>\r\n                <Card.Content>\r\n                  <Paragraph>Clients</Paragraph>\r\n                  <Title style={styles.statsValue}>{barberStats.clientsCount}</Title>\r\n                </Card.Content>\r\n              </Card>\r\n              \r\n              <Card style={[styles.statsCard, { backgroundColor: '#FFF8E1' }]}>\r\n                <Card.Content>\r\n                  <Paragraph>Revenue</Paragraph>\r\n                  <Title style={styles.statsValue}>${barberStats.revenue}</Title>\r\n                </Card.Content>\r\n              </Card>\r\n            </View>\r\n            \r\n            {/* Performance Metrics */}\r\n            <Card style={styles.metricsCard}>\r\n              <Card.Content>\r\n                <Title style={styles.metricsTitle}>Performance Metrics</Title>\r\n                \r\n                <View style={styles.metricRow}>\r\n                  <Text style={styles.metricLabel}>Utilization</Text>\r\n                  <Text style={styles.metricValue}>{barberStats.utilization}%</Text>\r\n                </View>\r\n                <ProgressBar progress={barberStats.utilization / 100} color=\"#2196F3\" style={styles.progressBar} />\r\n                \r\n                <View style={styles.metricRow}>\r\n                  <Text style={styles.metricLabel}>Client Retention</Text>\r\n                  <Text style={styles.metricValue}>{barberStats.clientRetention}%</Text>\r\n                </View>\r\n                <ProgressBar progress={barberStats.clientRetention / 100} color=\"#4CAF50\" style={styles.progressBar} />\r\n                \r\n                <View style={styles.metricRow}>\r\n                  <Text style={styles.metricLabel}>Average Rating</Text>\r\n                  <View style={styles.ratingContainer}>\r\n                    <Text style={styles.metricValue}>{barberStats.averageRating}</Text>\r\n                    <Ionicons name=\"star\" size={16} color=\"#FFC107\" style={styles.starIcon} />\r\n                  </View>\r\n                </View>\r\n              </Card.Content>\r\n            </Card>\r\n            \r\n            {/* Schedule Today */}\r\n            <Card style={styles.scheduleCard}>\r\n              <Card.Content>\r\n                <View style={styles.scheduleHeader}>\r\n                  <Title style={styles.scheduleTitle}>Today's Schedule</Title>\r\n                  <Text style={styles.scheduleDate}>{format(new Date(), 'MMMM d, yyyy')}</Text>\r\n                </View>\r\n                \r\n                <FlatList\r\n                  data={barberStats.timeSlots}\r\n                  renderItem={renderTimeSlot}\r\n                  keyExtractor={(item, index) => `time-${index}`}\r\n                  style={styles.timeSlotList}\r\n                  scrollEnabled={false}\r\n                />\r\n              </Card.Content>\r\n            </Card>\r\n            \r\n            {/* Recent Appointments */}\r\n            <Card style={styles.appointmentsCard}>\r\n              <Card.Content>\r\n                <View style={styles.appointmentsHeader}>\r\n                  <Title style={styles.appointmentsTitle}>Recent Appointments</Title>\r\n                  <Button mode=\"text\" onPress={showAppointmentDetails}>\r\n                    See All\r\n                  </Button>\r\n                </View>\r\n                \r\n                {appointmentHistory.slice(0, 5).map((appointment, index) => (\r\n                  <View key={appointment.id} style={styles.appointmentItem}>\r\n                    <View style={styles.appointmentInfo}>\r\n                      <Text style={styles.appointmentClient}>{appointment.client}</Text>\r\n                      <View style={styles.serviceRow}>\r\n                        <Text style={styles.appointmentService}>{appointment.service}</Text>\r\n                        <Text style={styles.appointmentServiceType}>\r\n                          {appointment.serviceType !== 'Unknown Type' ? `(${appointment.serviceType})` : ''}\r\n                        </Text>\r\n                      </View>\r\n                      <Text style={styles.appointmentDate}>{appointment.formattedDate}</Text>\r\n                      <Text style={styles.appointmentBarber}>\r\n                        Barber: {appointment.barber !== 'Unknown Barber' ? appointment.barber : 'Not assigned'}\r\n                      </Text>\r\n                    </View>\r\n                    <Chip \r\n                      style={[\r\n                        styles.statusChip,\r\n                        appointment.status === 'completed' ? styles.completedChip : \r\n                        appointment.status === 'cancelled' ? styles.cancelledChip : styles.pendingChip\r\n                      ]}\r\n                      textStyle={styles.statusChipText}\r\n                    >\r\n                      {appointment.status.toUpperCase()}\r\n                    </Chip>\r\n                  </View>\r\n                ))}\r\n              </Card.Content>\r\n            </Card>\r\n          </View>\r\n        )}\r\n      </ScrollView>\r\n      \r\n      {/* Appointment Details Modal */}\r\n      <Portal>\r\n        <Modal\r\n          visible={detailsVisible}\r\n          onDismiss={() => setDetailsVisible(false)}\r\n          contentContainerStyle={styles.modalContent}\r\n        >\r\n          <Title style={styles.modalTitle}>\r\n            {selectedBarber?.name}'s Appointments\r\n          </Title>\r\n          \r\n          <DataTable>\r\n            <DataTable.Header>\r\n              <DataTable.Title>Date</DataTable.Title>\r\n              <DataTable.Title>Client</DataTable.Title>\r\n              <DataTable.Title>Service</DataTable.Title>\r\n              <DataTable.Title>Barber</DataTable.Title>\r\n              <DataTable.Title numeric>Price</DataTable.Title>\r\n              <DataTable.Title>Status</DataTable.Title>\r\n            </DataTable.Header>\r\n            \r\n            <ScrollView style={{ maxHeight: 400 }}>\r\n              {appointmentHistory.map((appointment) => (\r\n                <DataTable.Row key={appointment.id}>\r\n                  <DataTable.Cell>{format(appointment.date, 'MM/dd HH:mm')}</DataTable.Cell>\r\n                  <DataTable.Cell>{appointment.client}</DataTable.Cell>\r\n                  <DataTable.Cell>\r\n                    {appointment.service}\r\n                    <Text style={styles.serviceTypeText}>\r\n                      {appointment.serviceType !== 'Unknown Type' ? `(${appointment.serviceType})` : ''}\r\n                    </Text>\r\n                  </DataTable.Cell>\r\n                  <DataTable.Cell>{appointment.barber !== 'Unknown Barber' ? appointment.barber : 'Not assigned'}</DataTable.Cell>\r\n                  <DataTable.Cell numeric>${appointment.price}</DataTable.Cell>\r\n                  <DataTable.Cell>\r\n                    <Chip \r\n                      style={[\r\n                        styles.smallChip,\r\n                        appointment.status === 'completed' ? styles.completedChip : \r\n                        appointment.status === 'cancelled' ? styles.cancelledChip : styles.pendingChip\r\n                      ]}\r\n                      textStyle={styles.smallChipText}\r\n                    >\r\n                      {appointment.status.substr(0, 4).toUpperCase()}\r\n                    </Chip>\r\n                  </DataTable.Cell>\r\n                </DataTable.Row>\r\n              ))}\r\n            </ScrollView>\r\n          </DataTable>\r\n          \r\n          <Button \r\n            mode=\"contained\" \r\n            onPress={() => setDetailsVisible(false)}\r\n            style={styles.modalButton}\r\n          >\r\n            Close\r\n          </Button>\r\n        </Modal>\r\n      </Portal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  centeredContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  header: {\r\n    backgroundColor: '#0F4C75',\r\n    padding: 20,\r\n    paddingTop: 50,\r\n    paddingBottom: 20,\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  headerSubtitle: {\r\n    fontSize: 16,\r\n    color: '#BBE1FA',\r\n    marginTop: 5,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: 15,\r\n  },\r\n  dateFilterContainer: {\r\n    marginBottom: 15,\r\n  },\r\n  dateFilterButtons: {\r\n    flexDirection: 'row',\r\n    marginTop: 10,\r\n  },\r\n  dateFilterButton: {\r\n    marginRight: 10,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#1B262C',\r\n    marginBottom: 10,\r\n  },\r\n  barberList: {\r\n    paddingBottom: 15,\r\n  },\r\n  barberCard: {\r\n    marginRight: 10,\r\n    width: 200,\r\n  },\r\n  selectedBarberCard: {\r\n    borderWidth: 2,\r\n    borderColor: '#0F4C75',\r\n  },\r\n  barberCardContent: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  barberInfo: {\r\n    marginLeft: 10,\r\n  },\r\n  barberName: {\r\n    fontSize: 16,\r\n  },\r\n  statsContainer: {\r\n    marginTop: 15,\r\n  },\r\n  barberStatsTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#1B262C',\r\n    marginBottom: 15,\r\n  },\r\n  statsCards: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 15,\r\n  },\r\n  statsCard: {\r\n    width: '31%',\r\n    elevation: 2,\r\n  },\r\n  statsValue: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n  },\r\n  metricsCard: {\r\n    marginBottom: 15,\r\n  },\r\n  metricsTitle: {\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n  },\r\n  metricRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n  },\r\n  metricLabel: {\r\n    fontSize: 14,\r\n    color: '#555',\r\n  },\r\n  metricValue: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  progressBar: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n    marginTop: 5,\r\n    marginBottom: 10,\r\n  },\r\n  ratingContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  starIcon: {\r\n    marginLeft: 5,\r\n  },\r\n  scheduleCard: {\r\n    marginBottom: 15,\r\n  },\r\n  scheduleHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  scheduleTitle: {\r\n    fontSize: 16,\r\n  },\r\n  scheduleDate: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n  timeSlotList: {\r\n    marginTop: 10,\r\n  },\r\n  timeSlot: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingVertical: 5,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#eee',\r\n  },\r\n  timeSlotInfo: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  timeSlotTime: {\r\n    fontSize: 14,\r\n  },\r\n  timeSlotDetails: {\r\n    marginLeft: 10,\r\n  },\r\n  timeSlotClient: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  timeSlotService: {\r\n    fontSize: 12,\r\n    color: '#555',\r\n  },\r\n  statusChip: {\r\n    height: 30,\r\n  },\r\n  bookedChip: {\r\n    backgroundColor: '#FFECB3',\r\n  },\r\n  freeChip: {\r\n    backgroundColor: '#C8E6C9',\r\n  },\r\n  bookedChipText: {\r\n    color: '#F57C00',\r\n  },\r\n  freeChipText: {\r\n    color: '#388E3C',\r\n  },\r\n  completedChip: {\r\n    backgroundColor: '#C8E6C9',\r\n  },\r\n  cancelledChip: {\r\n    backgroundColor: '#FFCDD2',\r\n  },\r\n  pendingChip: {\r\n    backgroundColor: '#E1F5FE',\r\n  },\r\n  statusChipText: {\r\n    fontSize: 10,\r\n  },\r\n  appointmentsCard: {\r\n    marginBottom: 15,\r\n  },\r\n  appointmentsHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  appointmentsTitle: {\r\n    fontSize: 16,\r\n  },\r\n  appointmentItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingVertical: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#eee',\r\n  },\r\n  appointmentInfo: {\r\n    flex: 1,\r\n  },\r\n  appointmentClient: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n  },\r\n  appointmentService: {\r\n    fontSize: 13,\r\n    color: '#555',\r\n  },\r\n  appointmentDate: {\r\n    fontSize: 12,\r\n    color: '#888',\r\n    marginTop: 2,\r\n  },\r\n  modalContent: {\r\n    backgroundColor: 'white',\r\n    padding: 20,\r\n    margin: 20,\r\n    borderRadius: 5,\r\n  },\r\n  modalTitle: {\r\n    marginBottom: 15,\r\n    textAlign: 'center',\r\n  },\r\n  modalButton: {\r\n    marginTop: 20,\r\n  },\r\n  smallChip: {\r\n    height: 24,\r\n  },\r\n  smallChipText: {\r\n    fontSize: 8,\r\n  },\r\n  salonButton: {\r\n    margin: 15,\r\n    marginTop: 5,\r\n  },\r\n  timeSlotBookingInfo: {\r\n    marginLeft: 10,\r\n  },\r\n  timeSlotClientName: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  timeSlotServiceType: {\r\n    fontSize: 12,\r\n    color: '#555',\r\n  },\r\n  timeSlotStatus: {\r\n    fontSize: 12,\r\n    color: '#555',\r\n  },\r\n  serviceRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  appointmentBarber: {\r\n    fontSize: 12,\r\n    color: '#888',\r\n    marginTop: 2,\r\n  },\r\n  serviceTypeText: {\r\n    fontSize: 10,\r\n    color: '#888',\r\n    marginLeft: 4,\r\n  },\r\n});\r\n\r\nexport default ManagerDashboardScreen; ","import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, StyleSheet, ScrollView, TouchableOpacity, Alert, FlatList } from 'react-native';\r\nimport { Text, Card, Title, Paragraph, Button, ActivityIndicator, Chip, Searchbar, ProgressBar, Avatar, DataTable } from 'react-native-paper';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { format } from 'date-fns';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport apiClient from '../../api/client';\r\nimport { BarChart, LineChart } from 'react-native-chart-kit';\r\nimport { Dimensions } from 'react-native';\r\n\r\nconst screenWidth = Dimensions.get('window').width - 40;\r\n\r\nconst SalonDashboardScreen = ({ route, navigation }) => {\r\n  const { salonId } = route.params || {};\r\n  const { userInfo } = useContext(AuthContext);\r\n  \r\n  const [loading, setLoading] = useState(true);\r\n  const [salon, setSalon] = useState(null);\r\n  const [salonStats, setSalonStats] = useState(null);\r\n  const [customers, setCustomers] = useState([]);\r\n  const [dateFilter, setDateFilter] = useState('week'); // 'day', 'week', 'month'\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [activeTab, setActiveTab] = useState('stats'); // 'stats', 'customers', 'appointments'\r\n  \r\n  // Fetch salon data on component mount\r\n  useEffect(() => {\r\n    fetchSalon();\r\n  }, [salonId]);\r\n  \r\n  // Fetch stats when date filter changes\r\n  useEffect(() => {\r\n    if (salon) {\r\n      fetchSalonStats();\r\n    }\r\n  }, [dateFilter, salon]);\r\n  \r\n  // Fetch salon details\r\n  const fetchSalon = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // If no salonId passed, fetch the manager's salons and use the first one\r\n      if (!salonId) {\r\n        const salonsResponse = await apiClient.get('/manager/salons', {\r\n          headers: {\r\n            Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n        });\r\n        \r\n        if (salonsResponse.data && salonsResponse.data.success && salonsResponse.data.salons.length > 0) {\r\n          setSalon(salonsResponse.data.salons[0]);\r\n          fetchSalonStats(salonsResponse.data.salons[0]._id);\r\n          fetchSalonCustomers(salonsResponse.data.salons[0]._id);\r\n        } else {\r\n          Alert.alert('Error', 'No salons found for this manager');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n      } else {\r\n        // Fetch specific salon\r\n        const response = await apiClient.get(`/salons/${salonId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n        });\r\n        \r\n        if (response.data && response.data.success) {\r\n          setSalon(response.data.salon);\r\n          fetchSalonStats(salonId);\r\n          fetchSalonCustomers(salonId);\r\n        } else {\r\n          Alert.alert('Error', 'Failed to load salon details');\r\n          setLoading(false);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching salon:', error);\r\n      setLoading(false);\r\n      Alert.alert('Error', 'Failed to load salon: ' + (error.message || 'Unknown error'));\r\n    }\r\n  };\r\n  \r\n  // Fetch salon statistics\r\n  const fetchSalonStats = async (id = salonId) => {\r\n    try {\r\n      setLoading(true);\r\n      const targetId = id || salon._id;\r\n      \r\n      const response = await apiClient.get(`/manager/salon/${targetId}/stats?period=${dateFilter}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        setSalonStats(response.data.stats);\r\n      } else {\r\n        Alert.alert('Error', 'Failed to load salon statistics');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching salon stats:', error);\r\n      setLoading(false);\r\n      Alert.alert('Error', 'Failed to load salon statistics: ' + (error.message || 'Unknown error'));\r\n    }\r\n  };\r\n  \r\n  // Fetch salon customers\r\n  const fetchSalonCustomers = async (id = salonId) => {\r\n    try {\r\n      const targetId = id || salon._id;\r\n      \r\n      const response = await apiClient.get(`/manager/salon/${targetId}/customers`, {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        setCustomers(response.data.customers);\r\n      } else {\r\n        console.error('Failed to load customers:', response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching customers:', error);\r\n    }\r\n  };\r\n  \r\n  // Format data for charts\r\n  const getChartData = () => {\r\n    if (!salonStats || !salonStats.dailyAppointments) {\r\n      return {\r\n        labels: ['No Data'],\r\n        datasets: [{ data: [0] }]\r\n      };\r\n    }\r\n    \r\n    // Sort dates\r\n    const dates = Object.keys(salonStats.dailyAppointments).sort();\r\n    \r\n    // Get last 7 dates for display\r\n    const recentDates = dates.slice(-7);\r\n    \r\n    return {\r\n      labels: recentDates.map(date => {\r\n        const [year, month, day] = date.split('-');\r\n        return `${month}/${day}`;\r\n      }),\r\n      datasets: [{\r\n        data: recentDates.map(date => salonStats.dailyAppointments[date] || 0)\r\n      }]\r\n    };\r\n  };\r\n  \r\n  // Filter customers based on search\r\n  const filteredCustomers = customers.filter(customer => \r\n    customer.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n    customer.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n    (customer.phone && customer.phone.includes(searchQuery))\r\n  );\r\n  \r\n  // Render customer item\r\n  const renderCustomerItem = ({ item }) => (\r\n    <Card style={styles.customerCard}>\r\n      <Card.Content style={styles.customerCardContent}>\r\n        <View style={styles.customerInfo}>\r\n          <Title style={styles.customerName}>{item.name}</Title>\r\n          <Paragraph>{item.email}</Paragraph>\r\n          <Paragraph>{item.phone || 'No phone'}</Paragraph>\r\n          \r\n          <View style={styles.customerMetrics}>\r\n            <Chip style={styles.customerMetric}>Visits: {item.visits}</Chip>\r\n            <Chip style={styles.customerMetric}>Spent: ${item.totalSpent}</Chip>\r\n          </View>\r\n          \r\n          {item.lastVisit && (\r\n            <Paragraph style={styles.lastVisit}>\r\n              Last visit: {format(new Date(item.lastVisit), 'MMM dd, yyyy')}\r\n            </Paragraph>\r\n          )}\r\n        </View>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n  \r\n  // Format appointment history from real data\r\n  const history = appointments.map(app => ({\r\n    id: app._id,\r\n    date: new Date(app.date),\r\n    formattedDate: format(new Date(app.date), 'MMM dd, yyyy HH:mm'),\r\n    client: app.customer?.name || 'Unknown Client',\r\n    barber: app.barber?.name || 'Unknown Barber',\r\n    service: app.service?.name || 'Unknown Service',\r\n    serviceType: app.service?.category || 'Unknown Type',\r\n    price: app.service?.price || 0,\r\n    status: app.status\r\n  }));\r\n  \r\n  if (loading && !salon) {\r\n    return (\r\n      <View style={styles.centeredContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n        <Text style={{ marginTop: 20 }}>Loading salon dashboard...</Text>\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Salon Dashboard</Text>\r\n        {salon && <Text style={styles.headerSubtitle}>{salon.name}</Text>}\r\n      </View>\r\n      \r\n      {/* Tab Navigation */}\r\n      <View style={styles.tabContainer}>\r\n        <TouchableOpacity \r\n          style={[styles.tab, activeTab === 'stats' && styles.activeTab]} \r\n          onPress={() => setActiveTab('stats')}\r\n        >\r\n          <Text style={[styles.tabText, activeTab === 'stats' && styles.activeTabText]}>\r\n            Stats\r\n          </Text>\r\n        </TouchableOpacity>\r\n        \r\n        <TouchableOpacity \r\n          style={[styles.tab, activeTab === 'customers' && styles.activeTab]} \r\n          onPress={() => setActiveTab('customers')}\r\n        >\r\n          <Text style={[styles.tabText, activeTab === 'customers' && styles.activeTabText]}>\r\n            Customers\r\n          </Text>\r\n        </TouchableOpacity>\r\n        \r\n        <TouchableOpacity \r\n          style={[styles.tab, activeTab === 'appointments' && styles.activeTab]} \r\n          onPress={() => setActiveTab('appointments')}\r\n        >\r\n          <Text style={[styles.tabText, activeTab === 'appointments' && styles.activeTabText]}>\r\n            Staff\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      \r\n      <ScrollView style={styles.content}>\r\n        {/* Stats Tab Content */}\r\n        {activeTab === 'stats' && (\r\n          <>\r\n            {/* Date Filter */}\r\n            <View style={styles.dateFilterContainer}>\r\n              <Text style={styles.sectionTitle}>Statistics Period:</Text>\r\n              <View style={styles.dateFilterButtons}>\r\n                <Button \r\n                  mode={dateFilter === 'day' ? 'contained' : 'outlined'} \r\n                  onPress={() => setDateFilter('day')}\r\n                  style={styles.dateFilterButton}\r\n                >\r\n                  Day\r\n                </Button>\r\n                <Button \r\n                  mode={dateFilter === 'week' ? 'contained' : 'outlined'} \r\n                  onPress={() => setDateFilter('week')}\r\n                  style={styles.dateFilterButton}\r\n                >\r\n                  Week\r\n                </Button>\r\n                <Button \r\n                  mode={dateFilter === 'month' ? 'contained' : 'outlined'} \r\n                  onPress={() => setDateFilter('month')}\r\n                  style={styles.dateFilterButton}\r\n                >\r\n                  Month\r\n                </Button>\r\n              </View>\r\n            </View>\r\n            \r\n            {/* Main Stats Cards */}\r\n            {salonStats && (\r\n              <View style={styles.statsContainer}>\r\n                <View style={styles.statsCards}>\r\n                  <Card style={[styles.statsCard, { backgroundColor: '#E3F2FD' }]}>\r\n                    <Card.Content>\r\n                      <Paragraph>Appointments</Paragraph>\r\n                      <Title style={styles.statsValue}>{salonStats.appointmentsCount}</Title>\r\n                    </Card.Content>\r\n                  </Card>\r\n                  \r\n                  <Card style={[styles.statsCard, { backgroundColor: '#E8F5E9' }]}>\r\n                    <Card.Content>\r\n                      <Paragraph>Customers</Paragraph>\r\n                      <Title style={styles.statsValue}>{salonStats.clientsCount}</Title>\r\n                    </Card.Content>\r\n                  </Card>\r\n                  \r\n                  <Card style={[styles.statsCard, { backgroundColor: '#FFF8E1' }]}>\r\n                    <Card.Content>\r\n                      <Paragraph>Revenue</Paragraph>\r\n                      <Title style={styles.statsValue}>${salonStats.revenue}</Title>\r\n                    </Card.Content>\r\n                  </Card>\r\n                </View>\r\n                \r\n                {/* Appointments Chart */}\r\n                <Card style={styles.chartCard}>\r\n                  <Card.Content>\r\n                    <Title style={styles.chartTitle}>Daily Appointments</Title>\r\n                    <BarChart\r\n                      data={getChartData()}\r\n                      width={screenWidth}\r\n                      height={220}\r\n                      yAxisLabel=\"\"\r\n                      chartConfig={{\r\n                        backgroundColor: '#ffffff',\r\n                        backgroundGradientFrom: '#ffffff',\r\n                        backgroundGradientTo: '#ffffff',\r\n                        decimalPlaces: 0,\r\n                        color: (opacity = 1) => `rgba(15, 76, 117, ${opacity})`,\r\n                        labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n                        style: {\r\n                          borderRadius: 16\r\n                        }\r\n                      }}\r\n                      style={styles.chart}\r\n                    />\r\n                  </Card.Content>\r\n                </Card>\r\n                \r\n                {/* Status Breakdown */}\r\n                <Card style={styles.statusCard}>\r\n                  <Card.Content>\r\n                    <Title style={styles.statusTitle}>Appointment Status</Title>\r\n                    \r\n                    <View style={styles.statusRow}>\r\n                      <Text style={styles.statusLabel}>Pending</Text>\r\n                      <Text style={styles.statusValue}>{salonStats.statusCounts.pending}</Text>\r\n                    </View>\r\n                    <ProgressBar \r\n                      progress={salonStats.appointmentsCount > 0 ? salonStats.statusCounts.pending / salonStats.appointmentsCount : 0} \r\n                      color=\"#FFC107\" \r\n                      style={styles.progressBar} \r\n                    />\r\n                    \r\n                    <View style={styles.statusRow}>\r\n                      <Text style={styles.statusLabel}>Confirmed</Text>\r\n                      <Text style={styles.statusValue}>{salonStats.statusCounts.confirmed}</Text>\r\n                    </View>\r\n                    <ProgressBar \r\n                      progress={salonStats.appointmentsCount > 0 ? salonStats.statusCounts.confirmed / salonStats.appointmentsCount : 0} \r\n                      color=\"#2196F3\" \r\n                      style={styles.progressBar} \r\n                    />\r\n                    \r\n                    <View style={styles.statusRow}>\r\n                      <Text style={styles.statusLabel}>Completed</Text>\r\n                      <Text style={styles.statusValue}>{salonStats.statusCounts.completed}</Text>\r\n                    </View>\r\n                    <ProgressBar \r\n                      progress={salonStats.appointmentsCount > 0 ? salonStats.statusCounts.completed / salonStats.appointmentsCount : 0} \r\n                      color=\"#4CAF50\" \r\n                      style={styles.progressBar} \r\n                    />\r\n                    \r\n                    <View style={styles.statusRow}>\r\n                      <Text style={styles.statusLabel}>Cancelled</Text>\r\n                      <Text style={styles.statusValue}>{salonStats.statusCounts.cancelled}</Text>\r\n                    </View>\r\n                    <ProgressBar \r\n                      progress={salonStats.appointmentsCount > 0 ? salonStats.statusCounts.cancelled / salonStats.appointmentsCount : 0} \r\n                      color=\"#F44336\" \r\n                      style={styles.progressBar} \r\n                    />\r\n                  </Card.Content>\r\n                </Card>\r\n              </View>\r\n            )}\r\n          </>\r\n        )}\r\n        \r\n        {/* Customers Tab Content */}\r\n        {activeTab === 'customers' && (\r\n          <>\r\n            <Searchbar\r\n              placeholder=\"Search customers...\"\r\n              onChangeText={query => setSearchQuery(query)}\r\n              value={searchQuery}\r\n              style={styles.searchBar}\r\n            />\r\n            \r\n            <Text style={styles.customerCount}>\r\n              {filteredCustomers.length} {filteredCustomers.length === 1 ? 'Customer' : 'Customers'}\r\n            </Text>\r\n            \r\n            {filteredCustomers.length === 0 ? (\r\n              <View style={styles.emptyContainer}>\r\n                <Text style={styles.emptyText}>No customers found</Text>\r\n              </View>\r\n            ) : (\r\n              filteredCustomers.map(customer => renderCustomerItem({ item: customer }))\r\n            )}\r\n          </>\r\n        )}\r\n        \r\n        {/* Staff Tab Content */}\r\n        {activeTab === 'appointments' && salon && (\r\n          <>\r\n            <Text style={styles.sectionTitle}>Staff Members</Text>\r\n            \r\n            {salon.staff && salon.staff.length > 0 ? (\r\n              <View style={styles.staffContainer}>\r\n                {salon.staff.map(staff => (\r\n                  <Card key={staff._id} style={styles.staffCard}>\r\n                    <Card.Content style={styles.staffCardContent}>\r\n                      <Avatar.Image \r\n                        size={50} \r\n                        source={{ uri: staff.profileImage || 'https://randomuser.me/api/portraits/men/32.jpg' }} \r\n                      />\r\n                      <View style={styles.staffInfo}>\r\n                        <Title style={styles.staffName}>{staff.name}</Title>\r\n                        <Paragraph>{staff.role}</Paragraph>\r\n                        <View style={styles.specialtiesContainer}>\r\n                          {staff.specialties?.map((specialty, idx) => (\r\n                            <Chip key={idx} style={styles.specialtyChip}>{specialty}</Chip>\r\n                          ))}\r\n                        </View>\r\n                      </View>\r\n                    </Card.Content>\r\n                    <Card.Actions>\r\n                      <Button onPress={() => navigation.navigate('ManagerDashboard', { barber: staff })}>\r\n                        View Performance\r\n                      </Button>\r\n                    </Card.Actions>\r\n                  </Card>\r\n                ))}\r\n              </View>\r\n            ) : (\r\n              <View style={styles.emptyContainer}>\r\n                <Text style={styles.emptyText}>No staff members found for this salon</Text>\r\n              </View>\r\n            )}\r\n          </>\r\n        )}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  centeredContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  header: {\r\n    backgroundColor: '#0F4C75',\r\n    padding: 20,\r\n    paddingTop: 50,\r\n    paddingBottom: 20,\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  headerSubtitle: {\r\n    fontSize: 18,\r\n    color: '#BBE1FA',\r\n    marginTop: 5,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: 15,\r\n  },\r\n  tabContainer: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#fff',\r\n    elevation: 2,\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingVertical: 15,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 2,\r\n    borderBottomColor: '#0F4C75',\r\n  },\r\n  tabText: {\r\n    fontSize: 16,\r\n    color: '#555',\r\n  },\r\n  activeTabText: {\r\n    color: '#0F4C75',\r\n    fontWeight: 'bold',\r\n  },\r\n  dateFilterContainer: {\r\n    marginBottom: 15,\r\n  },\r\n  dateFilterButtons: {\r\n    flexDirection: 'row',\r\n    marginTop: 10,\r\n  },\r\n  dateFilterButton: {\r\n    marginRight: 10,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#1B262C',\r\n    marginBottom: 10,\r\n  },\r\n  statsContainer: {\r\n    marginBottom: 20,\r\n  },\r\n  statsCards: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 15,\r\n  },\r\n  statsCard: {\r\n    flex: 1,\r\n    marginRight: 10,\r\n  },\r\n  statsValue: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  chartCard: {\r\n    marginBottom: 15,\r\n  },\r\n  chartTitle: {\r\n    fontSize: 18,\r\n    marginBottom: 10,\r\n  },\r\n  chart: {\r\n    marginVertical: 8,\r\n    borderRadius: 16,\r\n  },\r\n  statusCard: {\r\n    marginBottom: 15,\r\n  },\r\n  statusTitle: {\r\n    fontSize: 18,\r\n    marginBottom: 15,\r\n  },\r\n  statusRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 5,\r\n  },\r\n  statusLabel: {\r\n    fontSize: 14,\r\n  },\r\n  statusValue: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n  },\r\n  progressBar: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n    marginBottom: 15,\r\n  },\r\n  searchBar: {\r\n    marginBottom: 15,\r\n    elevation: 1,\r\n  },\r\n  customerCount: {\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n    color: '#555',\r\n  },\r\n  customerCard: {\r\n    marginBottom: 10,\r\n  },\r\n  customerCardContent: {\r\n    flexDirection: 'row',\r\n  },\r\n  customerInfo: {\r\n    flex: 1,\r\n  },\r\n  customerName: {\r\n    fontSize: 18,\r\n  },\r\n  customerMetrics: {\r\n    flexDirection: 'row',\r\n    marginTop: 10,\r\n  },\r\n  customerMetric: {\r\n    marginRight: 8,\r\n  },\r\n  lastVisit: {\r\n    marginTop: 8,\r\n    fontStyle: 'italic',\r\n  },\r\n  emptyContainer: {\r\n    padding: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  emptyText: {\r\n    fontSize: 16,\r\n    color: '#555',\r\n  },\r\n  staffContainer: {\r\n    marginBottom: 20,\r\n  },\r\n  staffCard: {\r\n    marginBottom: 10,\r\n  },\r\n  staffCardContent: {\r\n    flexDirection: 'row',\r\n  },\r\n  staffInfo: {\r\n    marginLeft: 15,\r\n    flex: 1,\r\n  },\r\n  staffName: {\r\n    fontSize: 16,\r\n  },\r\n  specialtiesContainer: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    marginTop: 5,\r\n  },\r\n  specialtyChip: {\r\n    marginRight: 5,\r\n    marginBottom: 5,\r\n    backgroundColor: '#E1F5FE',\r\n  },\r\n  appointmentInfo: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  appointmentClient: {\r\n    flex: 1,\r\n    fontSize: 16,\r\n  },\r\n  serviceRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  appointmentService: {\r\n    fontSize: 16,\r\n  },\r\n  appointmentServiceType: {\r\n    fontSize: 14,\r\n    fontStyle: 'italic',\r\n  },\r\n  appointmentDate: {\r\n    fontSize: 14,\r\n    color: '#555',\r\n  },\r\n  appointmentBarber: {\r\n    fontSize: 14,\r\n    color: '#555',\r\n  },\r\n  serviceTypeText: {\r\n    fontSize: 14,\r\n    fontStyle: 'italic',\r\n  },\r\n});\r\n\r\nexport default SalonDashboardScreen; ","import React, { useState, useContext, useEffect } from 'react';\nimport { View, StyleSheet, TouchableOpacity, Switch } from 'react-native';\nimport { Text, useTheme } from 'react-native-paper';\nimport { AuthContext } from '../context/AuthContext';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\n// Composant pour le sélecteur de thème (clair/sombre)\nconst ThemeToggle = ({ onToggle, isDarkMode }) => {\n  const theme = useTheme();\n  \n  return (\n    <View style={styles.themeToggleContainer}>\n      <Ionicons name=\"sunny-outline\" size={20} color={theme.colors.text} />\n      <Switch\n        value={isDarkMode}\n        onValueChange={onToggle}\n        trackColor={{ false: '#767577', true: theme.colors.primary }}\n        thumbColor={isDarkMode ? theme.colors.accent : '#f4f3f4'}\n        style={styles.switch}\n      />\n      <Ionicons name=\"moon-outline\" size={20} color={theme.colors.text} />\n    </View>\n  );\n};\n\n// Composant principal pour les paramètres d'affichage\nconst DisplaySettings = () => {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const { updateUserPreferences, userInfo } = useContext(AuthContext);\n  const theme = useTheme();\n\n  // Charger les préférences utilisateur au chargement\n  useEffect(() => {\n    const loadThemePreference = async () => {\n      try {\n        const themePreference = await AsyncStorage.getItem('themePreference');\n        if (themePreference !== null) {\n          setIsDarkMode(themePreference === 'dark');\n        }\n      } catch (error) {\n        console.error('Erreur lors du chargement des préférences de thème:', error);\n      }\n    };\n\n    loadThemePreference();\n  }, []);\n\n  // Gérer le changement de thème\n  const handleThemeToggle = async (value) => {\n    setIsDarkMode(value);\n    \n    try {\n      // Sauvegarder la préférence localement\n      await AsyncStorage.setItem('themePreference', value ? 'dark' : 'light');\n      \n      // Si l'utilisateur est connecté, mettre à jour ses préférences sur le serveur\n      if (userInfo && updateUserPreferences) {\n        updateUserPreferences({ theme: value ? 'dark' : 'light' });\n      }\n    } catch (error) {\n      console.error('Erreur lors de la sauvegarde des préférences de thème:', error);\n    }\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <Text style={[styles.title, { color: theme.colors.text }]}>Paramètres d'affichage</Text>\n      \n      <View style={styles.settingItem}>\n        <Text style={[styles.settingLabel, { color: theme.colors.text }]}>Mode sombre</Text>\n        <ThemeToggle onToggle={handleThemeToggle} isDarkMode={isDarkMode} />\n      </View>\n      \n      <TouchableOpacity style={[styles.button, { backgroundColor: theme.colors.primary }]}>\n        <Text style={styles.buttonText}>Appliquer</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  settingItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#e0e0e0',\n  },\n  settingLabel: {\n    fontSize: 16,\n  },\n  themeToggleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  switch: {\n    marginHorizontal: 10,\n  },\n  button: {\n    marginTop: 30,\n    padding: 15,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n});\n\nexport default DisplaySettings;\n","// theme.js\n// Thème amélioré pour l'application de salon de coiffure (web et mobile)\n\nimport { DefaultTheme, MD3DarkTheme as PaperDarkTheme } from 'react-native-paper';\n\n\n// Palette de couleurs\nconst colors = {\n  primary: {\n    light: '#0F4C75',\n    dark: '#3282B8',\n  },\n  secondary: {\n    light: '#3282B8',\n    dark: '#0F4C75',\n  },\n  accent: {\n    light: '#BBE1FA',\n    dark: '#5DA3FA',\n  },\n  background: {\n    light: '#F5F5F5',\n    dark: '#1B262C',\n  },\n  surface: {\n    light: '#FFFFFF',\n    dark: '#222831',\n  },\n  text: {\n    light: '#1B262C',\n    dark: '#F5F5F5',\n  },\n  disabled: {\n    light: '#C5C5C5',\n    dark: '#6B6B6B',\n  },\n  placeholder: {\n    light: '#A0A0A0',\n    dark: '#8D8D8D',\n  },\n  backdrop: {\n    light: 'rgba(0, 0, 0, 0.5)',\n    dark: 'rgba(0, 0, 0, 0.7)',\n  },\n  notification: {\n    light: '#FF4500',\n    dark: '#FF6347',\n  },\n  success: {\n    light: '#4CAF50',\n    dark: '#81C784',\n  },\n  warning: {\n    light: '#FFC107',\n    dark: '#FFD54F',\n  },\n  error: {\n    light: '#F44336',\n    dark: '#E57373',\n  },\n};\n\n// Thème clair\nexport const LightTheme = {\n  ...DefaultTheme,\n  dark: false,\n  roundness: 8,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: colors.primary.light,\n    accent: colors.accent.light,\n    background: colors.background.light,\n    surface: colors.surface.light,\n    text: colors.text.light,\n    disabled: colors.disabled.light,\n    placeholder: colors.placeholder.light,\n    backdrop: colors.backdrop.light,\n    notification: colors.notification.light,\n    success: colors.success.light,\n    warning: colors.warning.light,\n    error: colors.error.light,\n    secondary: colors.secondary.light,\n  },\n  fonts: {\n    ...DefaultTheme.fonts,\n    regular: { fontFamily: 'sans-serif', fontWeight: 'normal' },\n    medium: { fontFamily: 'sans-serif-medium', fontWeight: '500' },\n    light: { fontFamily: 'sans-serif-light', fontWeight: '300' },\n    thin: { fontFamily: 'sans-serif-thin', fontWeight: '100' },\n  },\n  animation: { scale: 1.0 },\n};\n\n// Thème sombre personnalisé\nexport const DarkTheme = {\n  ...PaperDarkTheme,\n  dark: true,\n  roundness: 8,\n  colors: {\n    ...PaperDarkTheme.colors,\n    primary: colors.primary.dark,\n    accent: colors.accent.dark,\n    background: colors.background.dark,\n    surface: colors.surface.dark,\n    text: colors.text.dark,\n    disabled: colors.disabled.dark,\n    placeholder: colors.placeholder.dark,\n    backdrop: colors.backdrop.dark,\n    notification: colors.notification.dark,\n    success: colors.success.dark,\n    warning: colors.warning.dark,\n    error: colors.error.dark,\n    secondary: colors.secondary.dark,\n  },\n  fonts: {\n    ...DefaultTheme.fonts,\n    regular: { fontFamily: 'sans-serif', fontWeight: 'normal' },\n    medium: { fontFamily: 'sans-serif-medium', fontWeight: '500' },\n    light: { fontFamily: 'sans-serif-light', fontWeight: '300' },\n    thin: { fontFamily: 'sans-serif-thin', fontWeight: '100' },\n  },\n  animation: { scale: 1.0 },\n};\n\n// Export général\nexport default {\n  LightTheme,\n  CustomDarkTheme,\n  DarkTheme,\n  colors,\n};\n","import React, { useState, useEffect, createContext } from 'react';\nimport { LightTheme, DarkTheme } from '../theme';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n// Création du contexte de thème\nexport const ThemeContext = createContext();\n\n// Provider du thème\nexport const ThemeProvider = ({ children }) => {\n  // État pour le thème actuel\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [theme, setTheme] = useState(LightTheme);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Charger les préférences de thème au démarrage\n  useEffect(() => {\n    const loadThemePreference = async () => {\n      try {\n        setIsLoading(true);\n        const themePreference = await AsyncStorage.getItem('themePreference');\n        \n        if (themePreference === 'dark') {\n          setIsDarkMode(true);\n          setTheme(DarkTheme);\n        } else {\n          setIsDarkMode(false);\n          setTheme(LightTheme);\n        }\n      } catch (error) {\n        console.error('Erreur lors du chargement des préférences de thème:', error);\n        // Par défaut, utiliser le thème clair\n        setIsDarkMode(false);\n        setTheme(LightTheme);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadThemePreference();\n  }, []);\n\n  // Fonction pour basculer entre les thèmes\n  const toggleTheme = async () => {\n    try {\n      const newIsDarkMode = !isDarkMode;\n      setIsDarkMode(newIsDarkMode);\n      setTheme(newIsDarkMode ? DarkTheme : LightTheme);\n      \n      // Sauvegarder la préférence\n      await AsyncStorage.setItem('themePreference', newIsDarkMode ? 'dark' : 'light');\n    } catch (error) {\n      console.error('Erreur lors de la sauvegarde des préférences de thème:', error);\n    }\n  };\n\n  // Fonction pour définir un thème spécifique\n  const setThemeMode = async (mode) => {\n    try {\n      const isDark = mode === 'dark';\n      setIsDarkMode(isDark);\n      setTheme(isDark ? DarkTheme : LightTheme);\n      \n      // Sauvegarder la préférence\n      await AsyncStorage.setItem('themePreference', mode);\n    } catch (error) {\n      console.error('Erreur lors de la sauvegarde des préférences de thème:', error);\n    }\n  };\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        theme,\n        isDarkMode,\n        toggleTheme,\n        setThemeMode,\n        isLoading\n      }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n","import React, { useState, useEffect, useContext, useRef, createRef } from 'react';\nimport { View, ActivityIndicator, Text, StyleSheet } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { StatusBar } from 'expo-status-bar';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { Provider as PaperProvider } from 'react-native-paper';\n\n// Auth Screens\nimport LoginScreen from './screens/auth/LoginScreen';\nimport RegisterScreen from './screens/auth/RegisterScreen';\n\n// Customer Screens\nimport HomeScreen from './screens/customer/HomeScreen';\nimport ServicesScreen from './screens/customer/ServicesScreen';\nimport BookingScreen from './screens/customer/BookingScreen';\nimport AppointmentsScreen from './screens/customer/AppointmentsScreen';\nimport ProfileScreen from './screens/customer/ProfileScreen';\n\n// Barber Screens\nimport BarberAppointmentsScreen from './screens/barber/BarberAppointmentsScreen';\nimport BarberDashboardScreen from './screens/barber/BarberDashboardScreen';\n\n// Admin Screens\nimport AdminDashboardScreen from './screens/admin/DashboardScreen';\nimport SalonDetailsScreen from './screens/admin/SalonDetailsScreen';\nimport SalonStaffScreen from './screens/admin/SalonStaffScreen';\n\n// Manager Screens\nimport ManagerDashboardScreen from './screens/manager/DashboardScreen';\nimport SalonDashboardScreen from './screens/manager/SalonDashboardScreen';\n\n// Components\nimport DisplaySettings from './components/DisplaySettings';\n\n// Context\nimport { AuthProvider, AuthContext } from './context/AuthContext';\nimport { ThemeProvider, ThemeContext } from './context/ThemeContext';\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\n// Custom theme\nconst theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: '#0F4C75',\n    accent: '#3282B8',\n    background: '#F5F5F5',\n    text: '#1B262C',\n  },\n};\n\n// Bottom Tab Navigator for Customer\nconst CustomerTabs = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Services') {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (route.name === 'Appointments') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false,\n      })}\n    >\n      <Tab.Screen name=\"Home\" component={HomeScreen} />\n      <Tab.Screen name=\"Services\" component={ServicesScreen} />\n      <Tab.Screen name=\"Appointments\" component={AppointmentsScreen} />\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n    </Tab.Navigator>\n  );\n};\n\n// Bottom Tab Navigator for Admin\nconst AdminTabs = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Dashboard') {\n            iconName = focused ? 'grid' : 'grid-outline';\n          } else if (route.name === 'Services') {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (route.name === 'Appointments') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false,\n      })}\n    >\n      <Tab.Screen \n        name=\"Dashboard\" \n        component={AdminDashboardScreen} \n        options={{ title: 'Admin Dashboard' }}\n      />\n      <Tab.Screen name=\"Services\" component={ServicesScreen} />\n      <Tab.Screen name=\"Appointments\" component={BarberAppointmentsScreen} />\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n    </Tab.Navigator>\n  );\n};\n\n// Bottom Tab Navigator for Barber\nconst BarberTabs = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Dashboard') {\n            iconName = focused ? 'grid' : 'grid-outline';\n          } else if (route.name === 'Appointments') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false,\n      })}\n    >\n      <Tab.Screen \n        name=\"Dashboard\" \n        component={BarberDashboardScreen} \n        options={{ title: 'My Schedule' }}\n      />\n      <Tab.Screen \n        name=\"Appointments\" \n        component={BarberAppointmentsScreen} \n        options={{ title: 'Appointments' }}\n      />\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n    </Tab.Navigator>\n  );\n};\n\n// Bottom Tab Navigator for Manager\nconst ManagerTabs = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Dashboard') {\n            iconName = focused ? 'grid' : 'grid-outline';\n          } else if (route.name === 'Services') {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (route.name === 'Appointments') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false,\n      })}\n    >\n      <Tab.Screen \n        name=\"Dashboard\" \n        component={ManagerDashboardScreen} \n        options={{ title: 'Manager Dashboard' }}\n      />\n      <Tab.Screen name=\"Services\" component={ServicesScreen} />\n      <Tab.Screen name=\"Appointments\" component={BarberAppointmentsScreen} />\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n    </Tab.Navigator>\n  );\n};\n\n// Auth Stack\nconst AuthStack = () => {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\n      <Stack.Screen name=\"Register\" component={RegisterScreen} />\n    </Stack.Navigator>\n  );\n};\n\n// Auth Navigator Component that manages the auth state\nconst AuthNavigator = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const { userToken, userInfo } = useContext(AuthContext);\n  const [userRole, setUserRole] = useState('customer');\n\n  // Check login status whenever userToken changes\n  useEffect(() => {\n    const checkLoginStatus = async () => {\n      try {\n        setIsLoading(true);\n        const token = await AsyncStorage.getItem('userToken');\n        const userInfoString = await AsyncStorage.getItem('userInfo');\n        console.log('Auth check - token present:', !!token);\n        console.log('Auth check - userInfo present:', !!userInfoString);\n        \n        // Only consider logged in if BOTH token and userInfo exist\n        const isLoggedInStatus = !!(token && userInfoString);\n        setIsLoggedIn(isLoggedInStatus);\n        \n        // Get user role from userInfo\n        if (isLoggedInStatus && userInfoString) {\n          const userInfoObj = JSON.parse(userInfoString);\n          setUserRole(userInfoObj.role || 'customer');\n          console.log('User role set to:', userInfoObj.role || 'customer');\n        }\n      } catch (error) {\n        console.error('Error checking login status:', error);\n        setIsLoggedIn(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    checkLoginStatus();\n  }, [userToken, userInfo]); // Re-run when either userToken or userInfo changes\n\n  if (isLoading) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n        <Text style={{ marginTop: 10 }}>Loading...</Text>\n      </View>\n    );\n  }\n\n  // Select the appropriate main component based on user role\n  const getMainComponent = () => {\n    switch (userRole) {\n      case 'admin':\n        return AdminTabs;\n      case 'manager':\n        return ManagerTabs;\n      case 'barber':\n        return BarberTabs;\n      default:\n        return CustomerTabs;\n    }\n  };\n\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      {!isLoggedIn ? (\n        <Stack.Screen name=\"Auth\" component={AuthStack} />\n      ) : (\n        <Stack.Screen name=\"Main\" component={getMainComponent()} />\n      )}\n      <Stack.Screen \n        name=\"Booking\" \n        component={BookingScreen} \n        options={{ headerShown: true, title: 'Book Appointment' }} \n      />\n      <Stack.Screen \n        name=\"AdminDashboard\" \n        component={AdminDashboardScreen} \n        options={{ headerShown: true, title: 'Admin Dashboard' }} \n      />\n      <Stack.Screen \n        name=\"ManagerDashboard\" \n        component={ManagerDashboardScreen} \n        options={{ headerShown: true, title: 'Manager Dashboard' }} \n      />\n      <Stack.Screen \n        name=\"BarberAppointments\" \n        component={BarberAppointmentsScreen} \n        options={{ headerShown: true, title: 'Appointments' }} \n      />\n      <Stack.Screen \n        name=\"SalonDetails\" \n        component={SalonDetailsScreen} \n        options={{ headerShown: true, title: 'Edit Salon' }} \n      />\n      <Stack.Screen \n        name=\"SalonStaff\" \n        component={SalonStaffScreen} \n        options={{ headerShown: true, title: 'Salon Staff' }} \n      />\n      <Stack.Screen \n        name=\"SalonDashboard\" \n        component={SalonDashboardScreen} \n        options={{ headerShown: true, title: 'Salon Dashboard' }} \n      />\n    </Stack.Navigator>\n  );\n};\n\n// Main App\nexport default function App() {\n  return (\n    <ThemeProvider>\n      <ThemeContext.Consumer>\n        {({ theme, isDarkMode }) => (\n          <AuthProvider>\n            <PaperProvider theme={theme}>\n              <NavigationContainer ref={navigationRef} theme={theme}>\n                <StatusBar style={isDarkMode ? \"light\" : \"dark\"} />\n                <AuthNavigator />\n              </NavigationContainer>\n            </PaperProvider>\n          </AuthProvider>\n        )}\n      </ThemeContext.Consumer>\n    </ThemeProvider>\n  );\n}\n\n// Helper function to navigate directly to a specific tab\n// This is accessible globally via the navigation ref\nexport const navigationRef = createRef();\n\nexport function navigateToTab(tabName) {\n  navigationRef.current?.navigate(tabName);\n} ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [947], () => (__webpack_require__(55819)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","API_URL","DEBUG","TIMEOUT","MAX_RETRIES","BASE_URLS","Array","isArray","config","concat","_toConsumableArray","API_URL_ALTERNATIVES","BASE_URL","apiClient","axios","create","baseURL","headers","timeout","validateStatus","status","retryRequest","_ref","_asyncToGenerator","error","retryCount","length","Promise","reject","response","urlIndex","Math","floor","console","log","setTimeout","_x","apply","arguments","interceptors","request","use","_ref2","token","AsyncStorage","getItem","userInfoString","JSON","parse","Authorization","substring","method","toUpperCase","url","_x2","_ref3","_error$response","_error$response2","_error$config","data","message","removeItem","_x3","servicesApi","get","appointmentsApi","put","undefined","delete","barberId","date","salonId","encodedDate","encodeURIComponent","encodedSalonId","baseUrl","defaults","endsWith","getApiUrl","AuthContext","createContext","AuthProvider","children","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","userToken","setUserToken","_useState5","_useState6","userInfo","setUserInfo","_useState7","_useState8","setError","createTestUser","post","name","email","password","phone","role","_error$response2$data","_error$response2$data2","_error$response3","includes","login","stringify","success","userWithToken","_objectSpread","user","setItem","savedUserInfo","savedToken","_error$response4","_error$response5","_error$response5$data","_error$response6","_error$response6$data","register","_ref4","userData","_error$response7","_error$response8","_error$response8$data","_error$response9","_error$response9$data","logout","_ref5","key","checkUserInfo","checkUserToken","updateProfile","_ref6","_error$response10","_error$response11","_error$response11$dat","_error$response12","_error$response12$dat","_x4","isLoggedIn","_ref7","useEffect","_jsx","Provider","value","styles","StyleSheet","container","flex","backgroundColor","scrollView","flexGrow","padding","justifyContent","header","alignItems","marginBottom","logo","width","height","title","fontSize","fontWeight","color","subtitle","textAlign","form","input","button","marginTop","paddingVertical","demoButton","borderColor","registerContainer","flexDirection","registerText","snackbar","navigation","setEmail","setPassword","errorMessage","setErrorMessage","visible","setVisible","_useContext","useContext","reset","index","routes","handleLogin","result","handleTestLogin","Alert","alert","text","KeyboardAvoidingView","behavior","style","_jsxs","ScrollView","contentContainerStyle","View","Image","source","require","resizeMode","Text","TextInput","label","onChangeText","mode","keyboardType","autoCapitalize","testID","secureTextEntry","Button","onPress","loading","disabled","TouchableOpacity","navigate","Snackbar","onDismiss","duration","marginVertical","loginContainer","loginText","setName","setPhone","_useState9","_useState10","confirmPassword","setConfirmPassword","_useState11","_useState12","_useState13","_useState14","handleRegister","centered","errorText","paddingTop","borderBottomLeftRadius","borderBottomRightRadius","greeting","subGreeting","section","paddingHorizontal","sectionHeader","sectionTitle","seeAll","card","borderRadius","elevation","emptyCard","bookButton","horizontalCard","marginRight","serviceImage","borderTopLeftRadius","borderTopRightRadius","price","statusContainer","_userInfo$name","services","setServices","appointments","setAppointments","setLoading","fetchData","featuredServices","slice","upcomingAppointments","filter","app","sort","a","b","Date","ActivityIndicator","size","split","Card","Content","Paragraph","appointment","Title","service","toLocaleDateString","startTime","endTime","barber","_id","horizontal","showsHorizontalScrollIndicator","Cover","uri","image","numberOfLines","description","Actions","sampleServices","category","categories","paddingBottom","headerTitle","headerSubtitle","searchBar","margin","categoriesContainer","categoriesList","categoryChip","selectedCategoryChip","categoryChipText","selectedCategoryChipText","servicesList","cardImage","cardContent","cardTitle","cardDescription","cardDetails","priceContainer","emptyContainer","emptyText","filteredServices","setFilteredServices","searchQuery","setSearchQuery","selectedCategory","setSelectedCategory","usingSampleData","setUsingSampleData","fetchServices","filterServices","query","filtered","toLowerCase","Searchbar","placeholder","FlatList","renderItem","item","Chip","selected","textStyle","keyExtractor","Banner","icon","actions","serviceCard","serviceDetails","progressContainer","progressItem","progressDot","progressActive","progressNumber","progressLine","marginHorizontal","progressText","salonList","salonCard","selectedSalonCard","borderWidth","salonIcon","salonInfo","salonName","salonAddress","salonPhone","selectedIndicator","marginLeft","selectedChip","barberScroll","barberCard","selectedBarberCard","barberImage","barberName","availabilityContainer","availabilityDot","availabilityText","specialties","timeGrid","flexWrap","timeCard","selectedTimeCard","timeText","endTimeText","availableTimeCard","unavailableTimeCard","availableTimeText","unavailableTimeText","selectedTimeText","noTimesText","summaryCard","summaryRow","summaryLabel","summaryValue","divider","shadowColor","shadowOffset","shadowOpacity","shadowRadius","errorContainer","centeredContent","loadingText","changeButton","debugContainer","debugButton","weeklySchedule","dayIndicator","dayText","dayDot","emptySubText","buttonContent","route","params","salons","setSalons","selectedSalon","setSelectedSalon","barbers","setBarbers","selectedBarber","setSelectedBarber","selectedDate","setSelectedDate","selectedTime","setSelectedTime","availableTimes","setAvailableTimes","_useState15","_useState16","allTimeSlots","setAllTimeSlots","_useState17","_useState18","_useState19","_useState20","submitting","setSubmitting","_useState21","_useState22","_useState23","_useState24","step","setStep","defaultTimeSlots","today","format","fetchSalons","fetchBarbersBySalon","fetchAvailableTimes","timeSlots","salonResponse","salonData","salon","staff","staffIds","barberStaff","every","roleToCheck","isBarberRole","usersResponse","allUsers","users","staffId","userResponse","push","err","fallbackError","now","selectedDateObj","isToday","getDate","getMonth","getFullYear","currentHour","getHours","currentMinute","getMinutes","hour","minute","formattedHour","toString","padStart","formattedMinute","filteredTimes","time","fallbackTimeSlots","getEndTime","_startTime$split$map","Number","_startTime$split$map2","decimalHours","hours","minutes","round","String","formatTimeFromHours","handleDateSelect","dateString","setHours","handleBooking","_response$data","serviceDuration","_selectedTime$split$m","_selectedTime$split$m2","endHour","endMinute","bookingData","serviceId","_response$data2","goBack","navError","debugSalonAndStaff","staffDetails","forEach","staffMember","idx","usersData","salonStaff","potentialBarbers","roleCheck","isBarber","isValidBarber","userError","handleSalonSelect","Avatar","address","street","city","compact","hasWorkSchedule","workSchedule","getDay","isWorkingToday","some","schedule","day","isWorking","weekDays","_loop","i","handleBarberSelect","profileImage","join","currentDateString","toISOString","markedDates","selectedColor","Calendar","current","minDate","onDayPress","theme","selectedDayBackgroundColor","todayTextColor","arrowColor","renderDateSelection","isAvailable","handleTimeSelect","Divider","contentStyle","labelStyle","sampleAppointments","tabContainer","tabButton","appointmentsList","pastCard","opacity","row","cancelButton","fab","position","right","bottom","dialogTitle","dialogText","dialogSubText","dialogButton","dialogConfirmButton","minHeight","headerRow","actionChip","buttonContainer","deleteButton","refreshing","setRefreshing","activeTab","setActiveTab","cancellationReason","setCancellationReason","dialogVisible","setDialogVisible","appointmentToCancel","setAppointmentToCancel","fetchAppointments","addListener","toDateString","onRefresh","cancelAppointment","appointmentId","reason","updatedAppointments","_error$response$data","deleteAppointment","filteredAppointments","appointmentDate","dateA","dateB","_Fragment","isPast","canCancel","find","promptCancellation","promptDelete","refreshControl","RefreshControl","colors","ListEmptyComponent","FAB","Portal","Dialog","multiline","avatar","editButton","adminButton","content","saveButton","logoutButton","directLogoutButton","logoutButtonText","salonItem","borderBottomWidth","borderBottomColor","useNavigation","isEditing","setIsEditing","notifications","setNotifications","loadingSalons","setLoadingSalons","endpoint","handleSaveProfile","trim","charAt","List","left","props","Switch","onValueChange","_salon$address","_salon$address2","Ionicons","activeOpacity","clear","window","location","reload","subText","fontStyle","menu","top","infoBox","actionDialogType","setActionDialogType","actionReason","setActionReason","selectedAppointment","setSelectedAppointment","menuVisible","setMenuVisible","openActionDialog","type","performAppointmentAction","notes","todayForComparison","appointmentDay","appointmentMonth","appointmentYear","todayDay","todayMonth","todayYear","isCancelled","isCompleted","isNoShow","isActive","appointmentDateNoTime","_a$startTime$split$ma","_a$startTime$split$ma2","hoursA","minutesA","_b$startTime$split$ma","_b$startTime$split$ma2","toggleMenu","_defineProperty","IconButton","Menu","anchor","x","y","Item","customer","cancelledBy","calendarContainer","overflow","scheduleContainer","scheduleTitle","scheduleGrid","timeSlot","currentTimeSlot","borderLeftWidth","borderLeftColor","timeColumn","appointmentColumn","appointmentCard","appointmentHeader","customerName","serviceText","priceText","statusChip","statusChipText","emptySlot","emptySlotText","emptySchedule","modalContent","modalTitle","appointmentDetails","appointmentDetail","detailLabel","actionButtons","actionButton","actionButtonSelected","actionButtonText","noteInput","modalActions","modalButton","timeSlotsContainer","maxHeight","timeSlotButton","selectedTimeSlot","timeSlotButtonText","noSlotsText","setMarkedDates","dailySchedule","setDailySchedule","modalVisible","setModalVisible","modalAction","setModalAction","modalNote","setModalNote","swapModalVisible","setSwapModalVisible","availableSlots","setAvailableSlots","newTimeSlot","setNewTimeSlot","generateMarkedDates","filterDailySchedule","dates","dateStr","dots","getStatusColor","marked","dotColor","dailyAppointments","aHour","aMinute","timeString","endTimeString","appt","slot","handleActionSelect","action","handleAppointmentAction","handleTimeSwap","renderTimeSlot","_slot$time$split$map","_slot$time$split$map2","slotHour","slotMinute","_slot$endTime$split$m","_slot$endTime$split$m2","isCurrent","markingType","Modal","centeredContainer","statsContainer","statsCard","statsValue","searchbar","userCard","userCardHeader","userDetailsRow","userEmail","userPhone","staffIdContainer","roleChip","userCardActions","roleSelector","roleLabel","roleButtons","roleButton","salonCardHeader","salonCardActions","statusSelector","setUsers","managers","setManagers","staffVisible","setStaffVisible","salonVisible","setSalonVisible","newUserForm","setNewUserForm","state","postalCode","newSalonForm","setNewSalonForm","selectedUserId","setSelectedUserId","editUserForm","setEditUserForm","_useState25","totalAppointments","completedAppointments","totalUsers","totalBarbers","totalManagers","_useState26","stats","setStats","fetchUsers","fetchStats","u","apiStats","total","completed","allSalons","handleCreateUser","nameInitials","n","randomNum","random","completeFormData","joinDate","userToEdit","handleUpdateUser","_response$data3","renderUserItem","textColor","userId","_onPress","_error$response3$data","handleCreateSalon","_ref8","coordinates","_response$data4","_error$response7$data","_ref9","_onPress2","_response$data5","m","note","saving","setSaving","setSalon","formData","setFormData","fetchSalonDetails","_salonData$address","_salonData$address2","_salonData$address3","_salonData$address4","handleSave","actionBar","staffCard","staffCardHeader","staffInfo","staffDetailsRow","staffEmail","staffPhone","userList","radioItem","radioItemContent","radioItemName","radioItemRole","textTransform","radioItemId","noUsersText","emptyUserList","setStaff","availableUsers","setAvailableUsers","selectedUser","setSelectedUser","fetchSalonWithStaff","s","staffResponse","staffMembers","availableStaff","addStaffToSalon","userUpdateResponse","RadioButton","scrollEnabled","dateFilterContainer","dateFilterButtons","dateFilterButton","barberList","barberCardContent","barberInfo","barberStatsTitle","statsCards","metricsCard","metricsTitle","metricRow","metricLabel","metricValue","progressBar","ratingContainer","starIcon","scheduleCard","scheduleHeader","scheduleDate","timeSlotList","timeSlotInfo","timeSlotTime","timeSlotDetails","timeSlotClient","timeSlotService","bookedChip","freeChip","bookedChipText","freeChipText","completedChip","cancelledChip","pendingChip","appointmentsCard","appointmentsHeader","appointmentsTitle","appointmentItem","appointmentInfo","appointmentClient","appointmentService","smallChip","smallChipText","salonButton","timeSlotBookingInfo","timeSlotClientName","timeSlotServiceType","timeSlotStatus","serviceRow","appointmentBarber","serviceTypeText","barberStats","setBarberStats","dateFilter","setDateFilter","detailsVisible","setDetailsVisible","appointmentHistory","setAppointmentHistory","fetchBarbers","fetchBarberStats","statsResponse","appointmentsResponse","barberStatsData","todayAppointments","appDate","getTime","morningSlot","afternoonSlot","_app$customer2","_app$service4","_app$customer3","_app$service5","_app$startTime$split$","_app$startTime$split$2","startHour","startMin","clientName","history","_app$customer","_app$barber","_app$service","_app$service2","_app$service3","formattedDate","client","serviceType","appointmentsCount","clientsCount","revenue","utilization","clientRetention","averageRating","_item$specialties","ProgressBar","progress","bookedSlot","freeSlot","appointmentServiceType","DataTable","Header","numeric","Row","Cell","substr","screenWidth","Dimensions","tab","tabText","activeTabText","chartCard","chartTitle","chart","statusCard","statusTitle","statusRow","statusLabel","statusValue","customerCount","customerCard","customerCardContent","customerInfo","customerMetrics","customerMetric","lastVisit","staffContainer","staffCardContent","staffName","specialtiesContainer","specialtyChip","salonStats","setSalonStats","customers","setCustomers","fetchSalon","fetchSalonStats","fetchSalonCustomers","salonsResponse","targetId","filteredCustomers","BarChart","labels","datasets","recentDates","_date$split","_date$split2","getChartData","yAxisLabel","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","statusCounts","pending","confirmed","cancelled","visits","totalSpent","renderCustomerItem","_staff$specialties","specialty","settingItem","settingLabel","themeToggleContainer","switch","buttonText","primary","light","dark","secondary","accent","background","surface","backdrop","notification","warning","LightTheme","DefaultTheme","roundness","fonts","regular","fontFamily","medium","thin","animation","scale","DarkTheme","PaperDarkTheme","CustomDarkTheme","ThemeContext","ThemeProvider","isDarkMode","setIsDarkMode","setTheme","loadThemePreference","toggleTheme","newIsDarkMode","setThemeMode","isDark","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","CustomerTabs","Navigator","screenOptions","tabBarIcon","iconName","focused","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","Screen","component","HomeScreen","ServicesScreen","AppointmentsScreen","ProfileScreen","AdminTabs","AdminDashboardScreen","options","BarberAppointmentsScreen","BarberTabs","BarberDashboardScreen","ManagerTabs","ManagerDashboardScreen","AuthStack","LoginScreen","RegisterScreen","AuthNavigator","setIsLoggedIn","userRole","setUserRole","checkLoginStatus","isLoggedInStatus","userInfoObj","getMainComponent","BookingScreen","SalonDetailsScreen","SalonStaffScreen","SalonDashboardScreen","App","Consumer","_ref10","PaperProvider","NavigationContainer","ref","navigationRef","StatusBar","createRef","navigateToTab","tabName","_navigationRef$curren","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","splice","r","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","this","then","ns","def","indexOf","getOwnPropertyNames","definition","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}