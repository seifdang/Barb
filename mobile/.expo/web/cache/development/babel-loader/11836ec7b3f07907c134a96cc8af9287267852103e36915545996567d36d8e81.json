{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { Text, useTheme } from 'react-native-paper';\nimport { AuthContext } from \"../context/AuthContext\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ThemeToggle = function ThemeToggle(_ref) {\n  var onToggle = _ref.onToggle,\n    isDarkMode = _ref.isDarkMode;\n  var theme = useTheme();\n  return _jsxs(View, {\n    style: styles.themeToggleContainer,\n    children: [_jsx(Ionicons, {\n      name: \"sunny-outline\",\n      size: 20,\n      color: theme.colors.text\n    }), _jsx(Switch, {\n      value: isDarkMode,\n      onValueChange: onToggle,\n      trackColor: {\n        false: '#767577',\n        true: theme.colors.primary\n      },\n      thumbColor: isDarkMode ? theme.colors.accent : '#f4f3f4',\n      style: styles.switch\n    }), _jsx(Ionicons, {\n      name: \"moon-outline\",\n      size: 20,\n      color: theme.colors.text\n    })]\n  });\n};\nvar DisplaySettings = function DisplaySettings() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDarkMode = _useState2[0],\n    setIsDarkMode = _useState2[1];\n  var _useContext = useContext(AuthContext),\n    updateUserPreferences = _useContext.updateUserPreferences,\n    userInfo = _useContext.userInfo;\n  var theme = useTheme();\n  useEffect(function () {\n    var loadThemePreference = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var themePreference = yield AsyncStorage.getItem('themePreference');\n          if (themePreference !== null) {\n            setIsDarkMode(themePreference === 'dark');\n          }\n        } catch (error) {\n          console.error('Erreur lors du chargement des préférences de thème:', error);\n        }\n      });\n      return function loadThemePreference() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadThemePreference();\n  }, []);\n  var handleThemeToggle = function () {\n    var _ref3 = _asyncToGenerator(function* (value) {\n      setIsDarkMode(value);\n      try {\n        yield AsyncStorage.setItem('themePreference', value ? 'dark' : 'light');\n        if (userInfo && updateUserPreferences) {\n          updateUserPreferences({\n            theme: value ? 'dark' : 'light'\n          });\n        }\n      } catch (error) {\n        console.error('Erreur lors de la sauvegarde des préférences de thème:', error);\n      }\n    });\n    return function handleThemeToggle(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: theme.colors.background\n    }],\n    children: [_jsx(Text, {\n      style: [styles.title, {\n        color: theme.colors.text\n      }],\n      children: \"Param\\xE8tres d'affichage\"\n    }), _jsxs(View, {\n      style: styles.settingItem,\n      children: [_jsx(Text, {\n        style: [styles.settingLabel, {\n          color: theme.colors.text\n        }],\n        children: \"Mode sombre\"\n      }), _jsx(ThemeToggle, {\n        onToggle: handleThemeToggle,\n        isDarkMode: isDarkMode\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: [styles.button, {\n        backgroundColor: theme.colors.primary\n      }],\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Appliquer\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  settingItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#e0e0e0'\n  },\n  settingLabel: {\n    fontSize: 16\n  },\n  themeToggleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  switch: {\n    marginHorizontal: 10\n  },\n  button: {\n    marginTop: 30,\n    padding: 15,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16\n  }\n});\nexport default DisplaySettings;","map":{"version":3,"names":["React","useState","useContext","useEffect","View","StyleSheet","TouchableOpacity","Switch","Text","useTheme","AuthContext","AsyncStorage","Ionicons","jsx","_jsx","jsxs","_jsxs","ThemeToggle","_ref","onToggle","isDarkMode","theme","style","styles","themeToggleContainer","children","name","size","color","colors","text","value","onValueChange","trackColor","false","true","primary","thumbColor","accent","switch","DisplaySettings","_useState","_useState2","_slicedToArray","setIsDarkMode","_useContext","updateUserPreferences","userInfo","loadThemePreference","_ref2","_asyncToGenerator","themePreference","getItem","error","console","apply","arguments","handleThemeToggle","_ref3","setItem","_x","container","backgroundColor","background","title","settingItem","settingLabel","button","buttonText","create","flex","padding","fontSize","fontWeight","marginBottom","flexDirection","justifyContent","alignItems","paddingVertical","borderBottomWidth","borderBottomColor","marginHorizontal","marginTop","borderRadius"],"sources":["C:/Users/User/Downloads/mobile/components/DisplaySettings.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { View, StyleSheet, TouchableOpacity, Switch } from 'react-native';\nimport { Text, useTheme } from 'react-native-paper';\nimport { AuthContext } from '../context/AuthContext';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\n// Composant pour le sélecteur de thème (clair/sombre)\nconst ThemeToggle = ({ onToggle, isDarkMode }) => {\n  const theme = useTheme();\n  \n  return (\n    <View style={styles.themeToggleContainer}>\n      <Ionicons name=\"sunny-outline\" size={20} color={theme.colors.text} />\n      <Switch\n        value={isDarkMode}\n        onValueChange={onToggle}\n        trackColor={{ false: '#767577', true: theme.colors.primary }}\n        thumbColor={isDarkMode ? theme.colors.accent : '#f4f3f4'}\n        style={styles.switch}\n      />\n      <Ionicons name=\"moon-outline\" size={20} color={theme.colors.text} />\n    </View>\n  );\n};\n\n// Composant principal pour les paramètres d'affichage\nconst DisplaySettings = () => {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const { updateUserPreferences, userInfo } = useContext(AuthContext);\n  const theme = useTheme();\n\n  // Charger les préférences utilisateur au chargement\n  useEffect(() => {\n    const loadThemePreference = async () => {\n      try {\n        const themePreference = await AsyncStorage.getItem('themePreference');\n        if (themePreference !== null) {\n          setIsDarkMode(themePreference === 'dark');\n        }\n      } catch (error) {\n        console.error('Erreur lors du chargement des préférences de thème:', error);\n      }\n    };\n\n    loadThemePreference();\n  }, []);\n\n  // Gérer le changement de thème\n  const handleThemeToggle = async (value) => {\n    setIsDarkMode(value);\n    \n    try {\n      // Sauvegarder la préférence localement\n      await AsyncStorage.setItem('themePreference', value ? 'dark' : 'light');\n      \n      // Si l'utilisateur est connecté, mettre à jour ses préférences sur le serveur\n      if (userInfo && updateUserPreferences) {\n        updateUserPreferences({ theme: value ? 'dark' : 'light' });\n      }\n    } catch (error) {\n      console.error('Erreur lors de la sauvegarde des préférences de thème:', error);\n    }\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <Text style={[styles.title, { color: theme.colors.text }]}>Paramètres d'affichage</Text>\n      \n      <View style={styles.settingItem}>\n        <Text style={[styles.settingLabel, { color: theme.colors.text }]}>Mode sombre</Text>\n        <ThemeToggle onToggle={handleThemeToggle} isDarkMode={isDarkMode} />\n      </View>\n      \n      <TouchableOpacity style={[styles.button, { backgroundColor: theme.colors.primary }]}>\n        <Text style={styles.buttonText}>Appliquer</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  settingItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#e0e0e0',\n  },\n  settingLabel: {\n    fontSize: 16,\n  },\n  themeToggleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  switch: {\n    marginHorizontal: 10,\n  },\n  button: {\n    marginTop: 30,\n    padding: 15,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n});\n\nexport default DisplaySettings;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}