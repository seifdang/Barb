{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Text, Card, Button, Title, Paragraph, FAB, Avatar, ActivityIndicator, Searchbar, Chip, Modal, Portal, TextInput, Divider } from 'react-native-paper';\nimport { Ionicons } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\nimport { AuthContext } from \"../../context/AuthContext\";\nimport apiClient from \"../../api/client\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DashboardScreen = function DashboardScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(AuthContext),\n    userInfo = _useContext.userInfo;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    users = _useState4[0],\n    setUsers = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    barbers = _useState6[0],\n    setBarbers = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    managers = _useState8[0],\n    setManagers = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    salons = _useState10[0],\n    setSalons = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    searchQuery = _useState12[0],\n    setSearchQuery = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    staffVisible = _useState14[0],\n    setStaffVisible = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    salonVisible = _useState16[0],\n    setSalonVisible = _useState16[1];\n  var _useState17 = useState({\n      name: '',\n      email: '',\n      password: '',\n      phone: '',\n      role: 'barber'\n    }),\n    _useState18 = _slicedToArray(_useState17, 2),\n    newUserForm = _useState18[0],\n    setNewUserForm = _useState18[1];\n  var _useState19 = useState({\n      name: '',\n      address: {\n        street: '',\n        city: '',\n        state: '',\n        postalCode: ''\n      },\n      phone: '',\n      email: '',\n      description: ''\n    }),\n    _useState20 = _slicedToArray(_useState19, 2),\n    newSalonForm = _useState20[0],\n    setNewSalonForm = _useState20[1];\n  var _useState21 = useState(null),\n    _useState22 = _slicedToArray(_useState21, 2),\n    selectedUserId = _useState22[0],\n    setSelectedUserId = _useState22[1];\n  var _useState23 = useState({\n      name: '',\n      email: '',\n      phone: '',\n      role: 'barber',\n      isActive: true\n    }),\n    _useState24 = _slicedToArray(_useState23, 2),\n    editUserForm = _useState24[0],\n    setEditUserForm = _useState24[1];\n  var _useState25 = useState({\n      totalAppointments: 0,\n      completedAppointments: 0,\n      totalUsers: 0,\n      totalBarbers: 0,\n      totalManagers: 0\n    }),\n    _useState26 = _slicedToArray(_useState25, 2),\n    stats = _useState26[0],\n    setStats = _useState26[1];\n  useEffect(function () {\n    if (userInfo && userInfo.email !== 'seif.ayadi.3.9.2@gmail.com') {\n      Alert.alert('Access Denied', 'Only the admin account can access this screen.');\n      navigation.goBack();\n    } else {\n      fetchUsers();\n      fetchStats();\n      fetchSalons();\n    }\n  }, [userInfo]);\n  var adminApi = {\n    getUsers: function getUsers() {\n      return apiClient.get('/admin/users');\n    },\n    createUser: function createUser(userData) {\n      return apiClient.post('/admin/users', userData);\n    },\n    updateUser: function updateUser(id, userData) {\n      return apiClient.put(\"/admin/users/\" + id, userData);\n    },\n    deleteUser: function deleteUser(id) {\n      return apiClient.delete(\"/admin/users/\" + id);\n    },\n    getStats: function getStats() {\n      return apiClient.get('/admin/stats');\n    },\n    getSalons: function getSalons() {\n      return apiClient.get('/admin/salons');\n    }\n  };\n  var fetchUsers = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var response = yield apiClient.get('/admin/users', {\n          headers: {\n            Authorization: \"Bearer \" + userInfo.token\n          }\n        });\n        if (response.data && response.data.success) {\n          var allUsers = response.data.users || [];\n          setUsers(allUsers);\n          setBarbers(allUsers.filter(function (u) {\n            return u.role === 'barber';\n          }));\n          setManagers(allUsers.filter(function (u) {\n            return u.role === 'manager';\n          }));\n          console.log(\"Loaded \" + allUsers.length + \" users, \" + barbers.length + \" barbers, \" + managers.length + \" managers\");\n        } else {\n          console.error('Failed to load users:', response.data);\n          Alert.alert('Error', 'Failed to load users');\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n        setLoading(false);\n        Alert.alert('Error', 'Failed to load users: ' + (error.message || 'Unknown error'));\n      }\n    });\n    return function fetchUsers() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchStats = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var response = yield apiClient.get('/admin/stats', {\n          headers: {\n            Authorization: \"Bearer \" + userInfo.token\n          }\n        });\n        if (response.data && response.data.success) {\n          var apiStats = response.data.stats;\n          setStats({\n            totalAppointments: apiStats.appointments.total || 0,\n            completedAppointments: apiStats.appointments.completed || 0,\n            totalUsers: apiStats.users.total || 0,\n            totalBarbers: apiStats.users.barbers || 0,\n            totalManagers: apiStats.users.managers || 0\n          });\n          console.log('Dashboard stats loaded successfully');\n        } else {\n          console.error('Failed to load stats:', response.data);\n          setStats({\n            totalAppointments: 0,\n            completedAppointments: 0,\n            totalUsers: 0,\n            totalBarbers: 0,\n            totalManagers: 0\n          });\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching stats:', error);\n        setLoading(false);\n        setStats({\n          totalAppointments: 0,\n          completedAppointments: 0,\n          totalUsers: 0,\n          totalBarbers: 0,\n          totalManagers: 0\n        });\n      }\n    });\n    return function fetchStats() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var fetchSalons = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var response = yield apiClient.get('/admin/salons', {\n          headers: {\n            Authorization: \"Bearer \" + userInfo.token\n          }\n        });\n        if (response.data && response.data.success) {\n          var allSalons = response.data.salons || [];\n          setSalons(allSalons);\n          console.log(\"Loaded \" + allSalons.length + \" salons\");\n        } else {\n          console.error('Failed to load salons:', response.data);\n          Alert.alert('Error', 'Failed to load salons');\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching salons:', error);\n        setLoading(false);\n        Alert.alert('Error', 'Failed to load salons: ' + (error.message || 'Unknown error'));\n      }\n    });\n    return function fetchSalons() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleCreateUser = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        if (!newUserForm.name || !newUserForm.email || !newUserForm.password) {\n          Alert.alert('Error', 'Please fill in all required fields');\n          setLoading(false);\n          return;\n        }\n        var nameInitials = newUserForm.name.split(' ').map(function (n) {\n          return n[0];\n        }).join('').toUpperCase();\n        var randomNum = Math.floor(1000 + Math.random() * 9000);\n        var rolePrefix = newUserForm.role === 'manager' ? 'MGR' : 'BRB';\n        var staffId = rolePrefix + \"-\" + nameInitials + randomNum;\n        var completeFormData = _objectSpread(_objectSpread({}, newUserForm), {}, {\n          staffId: staffId,\n          isActive: true,\n          joinDate: new Date().toISOString()\n        });\n        console.log('Creating new staff with data:', JSON.stringify(completeFormData));\n        var token = userInfo.token;\n        var response = yield apiClient.post('/admin/users', completeFormData, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': \"Bearer \" + token\n          }\n        });\n        console.log('API response:', JSON.stringify(response.data));\n        if (response.data && response.data.success) {\n          console.log('Staff member created successfully:', response.data.user);\n          yield fetchUsers();\n          setNewUserForm({\n            name: '',\n            email: '',\n            password: '',\n            phone: '',\n            role: 'barber'\n          });\n          setStaffVisible(false);\n          Alert.alert('Success', (newUserForm.role === 'manager' ? 'Manager' : 'Barber') + \" added successfully with ID: \" + staffId);\n        } else {\n          var _response$data;\n          console.error('Failed to create staff member, response:', JSON.stringify(response.data));\n          Alert.alert('Error', ((_response$data = response.data) == null ? void 0 : _response$data.message) || 'Failed to create staff member');\n        }\n        setLoading(false);\n      } catch (error) {\n        var _error$response, _error$response2, _error$response2$data;\n        console.error('Error creating staff member:', error);\n        console.error('Error details:', ((_error$response = error.response) == null ? void 0 : _error$response.data) || error.message);\n        setLoading(false);\n        Alert.alert('Error', ((_error$response2 = error.response) == null ? void 0 : (_error$response2$data = _error$response2.data) == null ? void 0 : _error$response2$data.message) || 'Failed to create staff member. Check console for details.');\n      }\n    });\n    return function handleCreateUser() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handleDeleteUser = function handleDeleteUser(userId) {\n    Alert.alert('Confirm Delete', 'Are you sure you want to delete this user?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: function () {\n        var _onPress = _asyncToGenerator(function* () {\n          try {\n            setLoading(true);\n            var response = yield apiClient.delete(\"/admin/users/\" + userId, {\n              headers: {\n                Authorization: \"Bearer \" + userInfo.token\n              }\n            });\n            if (response.data && response.data.success) {\n              console.log('User deleted successfully:', response.data);\n              yield fetchUsers();\n              Alert.alert('Success', 'User deleted successfully');\n            } else {\n              var _response$data2;\n              console.error('Failed to delete user:', response.data);\n              Alert.alert('Error', ((_response$data2 = response.data) == null ? void 0 : _response$data2.message) || 'Failed to delete user');\n            }\n            setLoading(false);\n          } catch (error) {\n            var _error$response3, _error$response3$data;\n            console.error('Error deleting user:', error);\n            setLoading(false);\n            Alert.alert('Error', ((_error$response3 = error.response) == null ? void 0 : (_error$response3$data = _error$response3.data) == null ? void 0 : _error$response3$data.message) || 'Failed to delete user');\n          }\n        });\n        function onPress() {\n          return _onPress.apply(this, arguments);\n        }\n        return onPress;\n      }()\n    }]);\n  };\n  useEffect(function () {\n    if (selectedUserId) {\n      var userToEdit = users.find(function (user) {\n        return user._id === selectedUserId;\n      });\n      if (userToEdit) {\n        setEditUserForm({\n          name: userToEdit.name || '',\n          email: userToEdit.email || '',\n          phone: userToEdit.phone || '',\n          role: userToEdit.role || 'barber',\n          isActive: userToEdit.isActive !== undefined ? userToEdit.isActive : true\n        });\n      }\n    }\n  }, [selectedUserId]);\n  var handleUpdateUser = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        if (!editUserForm.name || !editUserForm.email) {\n          Alert.alert('Error', 'Please fill in all required fields');\n          setLoading(false);\n          return;\n        }\n        console.log('Updating user with data:', JSON.stringify(editUserForm));\n        var token = userInfo.token;\n        var response = yield apiClient.put(\"/admin/users/\" + selectedUserId, editUserForm, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': \"Bearer \" + token\n          }\n        });\n        if (response.data && response.data.success) {\n          console.log('User updated successfully:', response.data.user);\n          yield fetchUsers();\n          setSelectedUserId(null);\n          Alert.alert('Success', 'User updated successfully');\n        } else {\n          var _response$data3;\n          console.error('Failed to update user, response:', JSON.stringify(response.data));\n          Alert.alert('Error', ((_response$data3 = response.data) == null ? void 0 : _response$data3.message) || 'Failed to update user');\n        }\n        setLoading(false);\n      } catch (error) {\n        var _error$response4, _error$response5, _error$response5$data;\n        console.error('Error updating user:', error);\n        console.error('Error details:', ((_error$response4 = error.response) == null ? void 0 : _error$response4.data) || error.message);\n        setLoading(false);\n        Alert.alert('Error', ((_error$response5 = error.response) == null ? void 0 : (_error$response5$data = _error$response5.data) == null ? void 0 : _error$response5$data.message) || 'Failed to update user. Check console for details.');\n      }\n    });\n    return function handleUpdateUser() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var renderUserItem = function renderUserItem(_ref7) {\n    var item = _ref7.item;\n    return _jsx(Card, {\n      style: styles.userCard,\n      children: _jsxs(Card.Content, {\n        children: [_jsxs(View, {\n          style: styles.userCardHeader,\n          children: [_jsx(Avatar.Text, {\n            size: 40,\n            label: item.name.split(' ').map(function (n) {\n              return n[0];\n            }).join(''),\n            backgroundColor: \"#0F4C75\"\n          }), _jsxs(View, {\n            style: styles.userInfo,\n            children: [_jsx(Title, {\n              children: item.name\n            }), _jsxs(View, {\n              style: styles.userDetailsRow,\n              children: [_jsx(Paragraph, {\n                style: styles.userEmail,\n                children: item.email\n              }), item.phone && _jsxs(Paragraph, {\n                style: styles.userPhone,\n                children: [\"\\u2022 \", item.phone]\n              })]\n            }), item.staffId && _jsxs(View, {\n              style: styles.staffIdContainer,\n              children: [_jsxs(Paragraph, {\n                style: styles.staffId,\n                children: [\"ID: \", item.staffId]\n              }), _jsx(Chip, {\n                mode: \"flat\",\n                style: [styles.statusChip, {\n                  backgroundColor: item.isActive ? '#C8E6C9' : '#FFCDD2'\n                }],\n                children: item.isActive ? 'Active' : 'Inactive'\n              })]\n            })]\n          }), _jsx(Chip, {\n            mode: \"outlined\",\n            style: styles.roleChip,\n            children: item.role.charAt(0).toUpperCase() + item.role.slice(1)\n          })]\n        }), _jsx(Divider, {\n          style: {\n            marginVertical: 10\n          }\n        }), _jsxs(View, {\n          style: styles.userCardActions,\n          children: [_jsx(Button, {\n            mode: \"outlined\",\n            compact: true,\n            icon: \"pencil\",\n            onPress: function onPress() {\n              return setSelectedUserId(item._id);\n            },\n            children: \"Edit\"\n          }), _jsx(Button, {\n            mode: \"outlined\",\n            compact: true,\n            icon: \"delete\",\n            textColor: \"#D32F2F\",\n            onPress: function onPress() {\n              return handleDeleteUser(item._id);\n            },\n            children: \"Delete\"\n          })]\n        })]\n      })\n    });\n  };\n  var handleCreateSalon = function () {\n    var _ref8 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        if (!newSalonForm.name || !newSalonForm.address.street || !newSalonForm.address.city || !newSalonForm.phone) {\n          Alert.alert('Error', 'Please fill in all required fields (name, address, phone)');\n          setLoading(false);\n          return;\n        }\n        var salonData = _objectSpread(_objectSpread({}, newSalonForm), {}, {\n          coordinates: [10.1815, 36.8065]\n        });\n        console.log('Creating new salon with data:', JSON.stringify(salonData));\n        var response = yield apiClient.post('/admin/salons', salonData, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': \"Bearer \" + userInfo.token\n          }\n        });\n        if (response.data && response.data.success) {\n          console.log('Salon created successfully:', response.data.salon);\n          yield fetchSalons();\n          setNewSalonForm({\n            name: '',\n            address: {\n              street: '',\n              city: '',\n              state: '',\n              postalCode: ''\n            },\n            phone: '',\n            email: '',\n            description: ''\n          });\n          setSalonVisible(false);\n          Alert.alert('Success', 'Salon added successfully');\n        } else {\n          var _response$data4;\n          console.error('Failed to create salon, response:', JSON.stringify(response.data));\n          Alert.alert('Error', ((_response$data4 = response.data) == null ? void 0 : _response$data4.message) || 'Failed to create salon');\n        }\n        setLoading(false);\n      } catch (error) {\n        var _error$response6, _error$response7, _error$response7$data;\n        console.error('Error creating salon:', error);\n        console.error('Error details:', ((_error$response6 = error.response) == null ? void 0 : _error$response6.data) || error.message);\n        setLoading(false);\n        Alert.alert('Error', ((_error$response7 = error.response) == null ? void 0 : (_error$response7$data = _error$response7.data) == null ? void 0 : _error$response7$data.message) || 'Failed to create salon. Check console for details.');\n      }\n    });\n    return function handleCreateSalon() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var handleDeleteSalon = function handleDeleteSalon(salonId) {\n    Alert.alert('Confirm Delete', 'Are you sure you want to delete this salon?', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      style: 'destructive',\n      onPress: function () {\n        var _onPress2 = _asyncToGenerator(function* () {\n          try {\n            setLoading(true);\n            var response = yield apiClient.delete(\"/admin/salons/\" + salonId, {\n              headers: {\n                Authorization: \"Bearer \" + userInfo.token\n              }\n            });\n            if (response.data && response.data.success) {\n              console.log('Salon deleted successfully:', response.data);\n              yield fetchSalons();\n              Alert.alert('Success', 'Salon deleted successfully');\n            } else {\n              var _response$data5;\n              console.error('Failed to delete salon:', response.data);\n              Alert.alert('Error', ((_response$data5 = response.data) == null ? void 0 : _response$data5.message) || 'Failed to delete salon');\n            }\n            setLoading(false);\n          } catch (error) {\n            var _error$response8, _error$response8$data;\n            console.error('Error deleting salon:', error);\n            setLoading(false);\n            Alert.alert('Error', ((_error$response8 = error.response) == null ? void 0 : (_error$response8$data = _error$response8.data) == null ? void 0 : _error$response8$data.message) || 'Failed to delete salon');\n          }\n        });\n        function onPress() {\n          return _onPress2.apply(this, arguments);\n        }\n        return onPress;\n      }()\n    }]);\n  };\n  var renderSalonItem = function renderSalonItem(_ref9) {\n    var item = _ref9.item;\n    return _jsx(Card, {\n      style: styles.salonCard,\n      children: _jsxs(Card.Content, {\n        children: [_jsxs(View, {\n          style: styles.salonCardHeader,\n          children: [_jsx(Avatar.Icon, {\n            size: 40,\n            icon: \"store\",\n            backgroundColor: \"#0F4C75\"\n          }), _jsxs(View, {\n            style: styles.salonInfo,\n            children: [_jsx(Title, {\n              children: item.name\n            }), _jsxs(Paragraph, {\n              style: styles.salonAddress,\n              children: [item.address.street, \", \", item.address.city]\n            }), _jsx(Paragraph, {\n              style: styles.salonPhone,\n              children: item.phone\n            })]\n          }), _jsx(Chip, {\n            mode: \"flat\",\n            style: [styles.statusChip, {\n              backgroundColor: item.isActive ? '#C8E6C9' : '#FFCDD2'\n            }],\n            children: item.isActive ? 'Active' : 'Inactive'\n          })]\n        }), _jsx(Divider, {\n          style: {\n            marginVertical: 10\n          }\n        }), _jsxs(View, {\n          style: styles.salonCardActions,\n          children: [_jsx(Button, {\n            mode: \"outlined\",\n            compact: true,\n            icon: \"pencil\",\n            onPress: function onPress() {\n              return navigation.navigate('SalonDetails', {\n                salonId: item._id\n              });\n            },\n            children: \"Edit\"\n          }), _jsx(Button, {\n            mode: \"outlined\",\n            compact: true,\n            icon: \"account-group\",\n            onPress: function onPress() {\n              return navigation.navigate('SalonStaff', {\n                salonId: item._id\n              });\n            },\n            children: \"Staff\"\n          }), _jsx(Button, {\n            mode: \"outlined\",\n            compact: true,\n            icon: \"delete\",\n            textColor: \"#D32F2F\",\n            onPress: function onPress() {\n              return handleDeleteSalon(item._id);\n            },\n            children: \"Delete\"\n          })]\n        })]\n      })\n    });\n  };\n  if (loading && users.length === 0) {\n    return _jsxs(View, {\n      style: styles.centeredContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#0F4C75\"\n      }), _jsx(Text, {\n        style: {\n          marginTop: 20\n        },\n        children: \"Loading dashboard...\"\n      })]\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.headerTitle,\n        children: \"Admin Dashboard\"\n      }), _jsxs(Text, {\n        style: styles.headerSubtitle,\n        children: [\"Welcome, \", userInfo == null ? void 0 : userInfo.name]\n      })]\n    }), _jsxs(ScrollView, {\n      style: styles.content,\n      children: [_jsxs(View, {\n        style: styles.statsContainer,\n        children: [_jsx(Card, {\n          style: [styles.statsCard, {\n            backgroundColor: '#BBE1FA'\n          }],\n          children: _jsxs(Card.Content, {\n            children: [_jsx(Title, {\n              style: styles.statsValue,\n              children: stats.totalAppointments\n            }), _jsx(Paragraph, {\n              children: \"Total Appointments\"\n            })]\n          })\n        }), _jsx(Card, {\n          style: [styles.statsCard, {\n            backgroundColor: '#C8E6C9'\n          }],\n          children: _jsxs(Card.Content, {\n            children: [_jsx(Title, {\n              style: styles.statsValue,\n              children: stats.totalUsers\n            }), _jsx(Paragraph, {\n              children: \"Customers\"\n            })]\n          })\n        }), _jsx(Card, {\n          style: [styles.statsCard, {\n            backgroundColor: '#FFECB3'\n          }],\n          children: _jsxs(Card.Content, {\n            children: [_jsx(Title, {\n              style: styles.statsValue,\n              children: stats.totalBarbers\n            }), _jsx(Paragraph, {\n              children: \"Barbers\"\n            })]\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.section,\n        children: [_jsxs(View, {\n          style: styles.sectionHeader,\n          children: [_jsx(Text, {\n            style: styles.sectionTitle,\n            children: \"Salon Management\"\n          }), _jsx(Button, {\n            mode: \"contained\",\n            icon: \"plus\",\n            onPress: function onPress() {\n              return setSalonVisible(true);\n            },\n            children: \"Add Salon\"\n          })]\n        }), _jsx(FlatList, {\n          data: salons,\n          renderItem: renderSalonItem,\n          keyExtractor: function keyExtractor(item) {\n            return item._id;\n          },\n          contentContainerStyle: {\n            paddingBottom: 10\n          },\n          ListEmptyComponent: _jsx(View, {\n            style: styles.emptyContainer,\n            children: _jsx(Text, {\n              style: styles.emptyText,\n              children: \"No salons found\"\n            })\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.section,\n        children: [_jsxs(View, {\n          style: styles.sectionHeader,\n          children: [_jsx(Text, {\n            style: styles.sectionTitle,\n            children: \"Staff Management\"\n          }), _jsx(Button, {\n            mode: \"contained\",\n            icon: \"plus\",\n            onPress: function onPress() {\n              return setStaffVisible(true);\n            },\n            children: \"Add Staff\"\n          })]\n        }), _jsx(Searchbar, {\n          placeholder: \"Search users...\",\n          onChangeText: setSearchQuery,\n          value: searchQuery,\n          style: styles.searchbar\n        }), _jsxs(Text, {\n          style: styles.subtitle,\n          children: [\"Barbers (\", barbers.length, \")\"]\n        }), _jsx(FlatList, {\n          data: barbers.filter(function (b) {\n            return b.name.toLowerCase().includes(searchQuery.toLowerCase()) || b.email.toLowerCase().includes(searchQuery.toLowerCase());\n          }),\n          renderItem: renderUserItem,\n          keyExtractor: function keyExtractor(item) {\n            return item._id;\n          },\n          contentContainerStyle: {\n            paddingBottom: 10\n          },\n          ListEmptyComponent: _jsx(View, {\n            style: styles.emptyContainer,\n            children: _jsx(Text, {\n              style: styles.emptyText,\n              children: \"No barbers found\"\n            })\n          })\n        }), _jsxs(Text, {\n          style: styles.subtitle,\n          children: [\"Managers (\", managers.length, \")\"]\n        }), _jsx(FlatList, {\n          data: managers.filter(function (m) {\n            return m.name.toLowerCase().includes(searchQuery.toLowerCase()) || m.email.toLowerCase().includes(searchQuery.toLowerCase());\n          }),\n          renderItem: renderUserItem,\n          keyExtractor: function keyExtractor(item) {\n            return item._id;\n          },\n          contentContainerStyle: {\n            paddingBottom: 10\n          },\n          ListEmptyComponent: _jsx(View, {\n            style: styles.emptyContainer,\n            children: _jsx(Text, {\n              style: styles.emptyText,\n              children: \"No managers found\"\n            })\n          })\n        })]\n      })]\n    }), _jsx(Portal, {\n      children: _jsxs(Modal, {\n        visible: staffVisible,\n        onDismiss: function onDismiss() {\n          return setStaffVisible(false);\n        },\n        contentContainerStyle: styles.modalContent,\n        children: [_jsx(Title, {\n          style: styles.modalTitle,\n          children: \"Add New Staff Member\"\n        }), _jsx(TextInput, {\n          label: \"Full Name\",\n          value: newUserForm.name,\n          onChangeText: function onChangeText(text) {\n            setNewUserForm(_objectSpread(_objectSpread({}, newUserForm), {}, {\n              name: text\n            }));\n            if (text && ['barber', 'manager'].includes(newUserForm.role)) {\n              var nameInitials = text.split(' ').map(function (n) {\n                return n[0];\n              }).join('').toUpperCase();\n              var randomNum = Math.floor(1000 + Math.random() * 9000);\n              var rolePrefix = newUserForm.role === 'manager' ? 'MGR' : 'BRB';\n              var staffId = rolePrefix + \"-\" + nameInitials + randomNum;\n              console.log('Auto-generated Staff ID:', staffId);\n            }\n          },\n          style: styles.input,\n          mode: \"outlined\"\n        }), _jsx(TextInput, {\n          label: \"Email\",\n          value: newUserForm.email,\n          onChangeText: function onChangeText(text) {\n            return setNewUserForm(_objectSpread(_objectSpread({}, newUserForm), {}, {\n              email: text\n            }));\n          },\n          style: styles.input,\n          mode: \"outlined\",\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\"\n        }), _jsx(TextInput, {\n          label: \"Password\",\n          value: newUserForm.password,\n          onChangeText: function onChangeText(text) {\n            return setNewUserForm(_objectSpread(_objectSpread({}, newUserForm), {}, {\n              password: text\n            }));\n          },\n          style: styles.input,\n          mode: \"outlined\",\n          secureTextEntry: true\n        }), _jsx(TextInput, {\n          label: \"Phone\",\n          value: newUserForm.phone,\n          onChangeText: function onChangeText(text) {\n            return setNewUserForm(_objectSpread(_objectSpread({}, newUserForm), {}, {\n              phone: text\n            }));\n          },\n          style: styles.input,\n          mode: \"outlined\",\n          keyboardType: \"phone-pad\"\n        }), _jsxs(View, {\n          style: styles.roleSelector,\n          children: [_jsx(Text, {\n            style: styles.roleLabel,\n            children: \"Role:\"\n          }), _jsxs(View, {\n            style: styles.roleButtons,\n            children: [_jsx(Button, {\n              mode: newUserForm.role === 'barber' ? 'contained' : 'outlined',\n              onPress: function onPress() {\n                var role = 'barber';\n                setNewUserForm(_objectSpread(_objectSpread({}, newUserForm), {}, {\n                  role: role\n                }));\n                if (newUserForm.name) {\n                  var nameInitials = newUserForm.name.split(' ').map(function (n) {\n                    return n[0];\n                  }).join('').toUpperCase();\n                  var randomNum = Math.floor(1000 + Math.random() * 9000);\n                  console.log('Auto-generated Barber ID:', \"BRB-\" + nameInitials + randomNum);\n                }\n              },\n              style: styles.roleButton,\n              children: \"Barber\"\n            }), _jsx(Button, {\n              mode: newUserForm.role === 'manager' ? 'contained' : 'outlined',\n              onPress: function onPress() {\n                var role = 'manager';\n                setNewUserForm(_objectSpread(_objectSpread({}, newUserForm), {}, {\n                  role: role\n                }));\n                if (newUserForm.name) {\n                  var nameInitials = newUserForm.name.split(' ').map(function (n) {\n                    return n[0];\n                  }).join('').toUpperCase();\n                  var randomNum = Math.floor(1000 + Math.random() * 9000);\n                  console.log('Auto-generated Manager ID:', \"MGR-\" + nameInitials + randomNum);\n                }\n              },\n              style: styles.roleButton,\n              children: \"Manager\"\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.modalActions,\n          children: [_jsx(Button, {\n            onPress: function onPress() {\n              return setStaffVisible(false);\n            },\n            style: styles.button,\n            children: \"Cancel\"\n          }), _jsx(Button, {\n            mode: \"contained\",\n            onPress: handleCreateUser,\n            loading: loading,\n            style: styles.button,\n            children: \"Add Staff\"\n          })]\n        })]\n      })\n    }), _jsx(Portal, {\n      children: _jsxs(Modal, {\n        visible: salonVisible,\n        onDismiss: function onDismiss() {\n          return setSalonVisible(false);\n        },\n        contentContainerStyle: styles.modalContent,\n        children: [_jsx(Title, {\n          style: styles.modalTitle,\n          children: \"Add New Salon\"\n        }), _jsx(TextInput, {\n          label: \"Salon Name\",\n          value: newSalonForm.name,\n          onChangeText: function onChangeText(text) {\n            return setNewSalonForm(_objectSpread(_objectSpread({}, newSalonForm), {}, {\n              name: text\n            }));\n          },\n          style: styles.input,\n          mode: \"outlined\"\n        }), _jsx(TextInput, {\n          label: \"Street Address\",\n          value: newSalonForm.address.street,\n          onChangeText: function onChangeText(text) {\n            return setNewSalonForm(_objectSpread(_objectSpread({}, newSalonForm), {}, {\n              address: _objectSpread(_objectSpread({}, newSalonForm.address), {}, {\n                street: text\n              })\n            }));\n          },\n          style: styles.input,\n          mode: \"outlined\"\n        }), _jsx(TextInput, {\n          label: \"City\",\n          value: newSalonForm.address.city,\n          onChangeText: function onChangeText(text) {\n            return setNewSalonForm(_objectSpread(_objectSpread({}, newSalonForm), {}, {\n              address: _objectSpread(_objectSpread({}, newSalonForm.address), {}, {\n                city: text\n              })\n            }));\n          },\n          style: styles.input,\n          mode: \"outlined\"\n        }), _jsx(TextInput, {\n          label: \"State/Region\",\n          value: newSalonForm.address.state,\n          onChangeText: function onChangeText(text) {\n            return setNewSalonForm(_objectSpread(_objectSpread({}, newSalonForm), {}, {\n              address: _objectSpread(_objectSpread({}, newSalonForm.address), {}, {\n                state: text\n              })\n            }));\n          },\n          style: styles.input,\n          mode: \"outlined\"\n        }), _jsx(TextInput, {\n          label: \"Postal Code\",\n          value: newSalonForm.address.postalCode,\n          onChangeText: function onChangeText(text) {\n            return setNewSalonForm(_objectSpread(_objectSpread({}, newSalonForm), {}, {\n              address: _objectSpread(_objectSpread({}, newSalonForm.address), {}, {\n                postalCode: text\n              })\n            }));\n          },\n          style: styles.input,\n          mode: \"outlined\",\n          keyboardType: \"numeric\"\n        }), _jsx(TextInput, {\n          label: \"Phone\",\n          value: newSalonForm.phone,\n          onChangeText: function onChangeText(text) {\n            return setNewSalonForm(_objectSpread(_objectSpread({}, newSalonForm), {}, {\n              phone: text\n            }));\n          },\n          style: styles.input,\n          mode: \"outlined\",\n          keyboardType: \"phone-pad\"\n        }), _jsx(TextInput, {\n          label: \"Email\",\n          value: newSalonForm.email,\n          onChangeText: function onChangeText(text) {\n            return setNewSalonForm(_objectSpread(_objectSpread({}, newSalonForm), {}, {\n              email: text\n            }));\n          },\n          style: styles.input,\n          mode: \"outlined\",\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\"\n        }), _jsx(TextInput, {\n          label: \"Description\",\n          value: newSalonForm.description,\n          onChangeText: function onChangeText(text) {\n            return setNewSalonForm(_objectSpread(_objectSpread({}, newSalonForm), {}, {\n              description: text\n            }));\n          },\n          style: styles.input,\n          mode: \"outlined\",\n          multiline: true,\n          numberOfLines: 3\n        }), _jsxs(View, {\n          style: styles.modalActions,\n          children: [_jsx(Button, {\n            onPress: function onPress() {\n              return setSalonVisible(false);\n            },\n            style: styles.button,\n            children: \"Cancel\"\n          }), _jsx(Button, {\n            mode: \"contained\",\n            onPress: handleCreateSalon,\n            loading: loading,\n            style: styles.button,\n            children: \"Add Salon\"\n          })]\n        })]\n      })\n    }), _jsx(FAB, {\n      style: styles.fab,\n      icon: \"refresh\",\n      onPress: function onPress() {\n        fetchUsers();\n        fetchSalons();\n        fetchStats();\n      },\n      label: \"Refresh\"\n    }), _jsx(Portal, {\n      children: _jsxs(Modal, {\n        visible: selectedUserId !== null,\n        onDismiss: function onDismiss() {\n          return setSelectedUserId(null);\n        },\n        contentContainerStyle: styles.modalContent,\n        children: [_jsx(Title, {\n          style: styles.modalTitle,\n          children: \"Edit Staff Member\"\n        }), _jsx(TextInput, {\n          label: \"Full Name\",\n          value: editUserForm.name,\n          onChangeText: function onChangeText(text) {\n            return setEditUserForm(_objectSpread(_objectSpread({}, editUserForm), {}, {\n              name: text\n            }));\n          },\n          style: styles.input,\n          mode: \"outlined\"\n        }), _jsx(TextInput, {\n          label: \"Email\",\n          value: editUserForm.email,\n          onChangeText: function onChangeText(text) {\n            return setEditUserForm(_objectSpread(_objectSpread({}, editUserForm), {}, {\n              email: text\n            }));\n          },\n          style: styles.input,\n          mode: \"outlined\",\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\"\n        }), _jsx(TextInput, {\n          label: \"Phone\",\n          value: editUserForm.phone,\n          onChangeText: function onChangeText(text) {\n            return setEditUserForm(_objectSpread(_objectSpread({}, editUserForm), {}, {\n              phone: text\n            }));\n          },\n          style: styles.input,\n          mode: \"outlined\",\n          keyboardType: \"phone-pad\"\n        }), _jsxs(View, {\n          style: styles.roleSelector,\n          children: [_jsx(Text, {\n            style: styles.roleLabel,\n            children: \"Role:\"\n          }), _jsxs(View, {\n            style: styles.roleButtons,\n            children: [_jsx(Button, {\n              mode: editUserForm.role === 'barber' ? 'contained' : 'outlined',\n              onPress: function onPress() {\n                return setEditUserForm(_objectSpread(_objectSpread({}, editUserForm), {}, {\n                  role: 'barber'\n                }));\n              },\n              style: styles.roleButton,\n              children: \"Barber\"\n            }), _jsx(Button, {\n              mode: editUserForm.role === 'manager' ? 'contained' : 'outlined',\n              onPress: function onPress() {\n                return setEditUserForm(_objectSpread(_objectSpread({}, editUserForm), {}, {\n                  role: 'manager'\n                }));\n              },\n              style: styles.roleButton,\n              children: \"Manager\"\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.statusSelector,\n          children: [_jsx(Text, {\n            style: styles.roleLabel,\n            children: \"Status:\"\n          }), _jsxs(View, {\n            style: styles.roleButtons,\n            children: [_jsx(Button, {\n              mode: editUserForm.isActive ? 'contained' : 'outlined',\n              onPress: function onPress() {\n                return setEditUserForm(_objectSpread(_objectSpread({}, editUserForm), {}, {\n                  isActive: true\n                }));\n              },\n              style: [styles.roleButton, {\n                backgroundColor: editUserForm.isActive ? '#4CAF50' : 'transparent'\n              }],\n              labelStyle: {\n                color: editUserForm.isActive ? 'white' : '#4CAF50'\n              },\n              children: \"Active\"\n            }), _jsx(Button, {\n              mode: !editUserForm.isActive ? 'contained' : 'outlined',\n              onPress: function onPress() {\n                return setEditUserForm(_objectSpread(_objectSpread({}, editUserForm), {}, {\n                  isActive: false\n                }));\n              },\n              style: [styles.roleButton, {\n                backgroundColor: !editUserForm.isActive ? '#F44336' : 'transparent'\n              }],\n              labelStyle: {\n                color: !editUserForm.isActive ? 'white' : '#F44336'\n              },\n              children: \"Inactive\"\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.modalActions,\n          children: [_jsx(Button, {\n            onPress: function onPress() {\n              return setSelectedUserId(null);\n            },\n            style: styles.button,\n            children: \"Cancel\"\n          }), _jsx(Button, {\n            mode: \"contained\",\n            onPress: handleUpdateUser,\n            loading: loading,\n            style: styles.button,\n            children: \"Update Staff\"\n          })]\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  centeredContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  header: {\n    backgroundColor: '#0F4C75',\n    padding: 20,\n    paddingTop: 50,\n    paddingBottom: 20\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  headerSubtitle: {\n    fontSize: 16,\n    color: '#BBE1FA',\n    marginTop: 5\n  },\n  content: {\n    flex: 1\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 15\n  },\n  statsCard: {\n    width: '30%',\n    elevation: 2\n  },\n  statsValue: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  section: {\n    padding: 15,\n    marginBottom: 20\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#1B262C'\n  },\n  subtitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 15,\n    marginBottom: 10,\n    color: '#1B262C'\n  },\n  searchbar: {\n    marginBottom: 15,\n    elevation: 2\n  },\n  userCard: {\n    marginBottom: 10,\n    elevation: 2\n  },\n  userCardHeader: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  userInfo: {\n    flex: 1,\n    marginLeft: 10\n  },\n  userDetailsRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 2\n  },\n  userEmail: {\n    fontSize: 12,\n    color: '#666'\n  },\n  userPhone: {\n    fontSize: 12,\n    color: '#666'\n  },\n  staffIdContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  staffId: {\n    fontSize: 12,\n    color: '#666'\n  },\n  roleChip: {\n    marginLeft: 10\n  },\n  userCardActions: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 10\n  },\n  emptyText: {\n    textAlign: 'center',\n    padding: 20,\n    color: '#666'\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n    backgroundColor: '#0F4C75'\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 20,\n    borderRadius: 5\n  },\n  modalTitle: {\n    marginBottom: 15,\n    textAlign: 'center'\n  },\n  input: {\n    marginBottom: 15\n  },\n  roleSelector: {\n    marginVertical: 15\n  },\n  roleLabel: {\n    marginBottom: 10,\n    fontSize: 16\n  },\n  roleButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  },\n  roleButton: {\n    width: '45%'\n  },\n  modalActions: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 20\n  },\n  button: {\n    marginHorizontal: 5,\n    width: '45%'\n  },\n  statusChip: {\n    marginLeft: 10\n  },\n  salonCard: {\n    marginBottom: 10,\n    elevation: 2\n  },\n  salonCardHeader: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  salonInfo: {\n    flex: 1,\n    marginLeft: 10\n  },\n  salonAddress: {\n    fontSize: 12,\n    color: '#666'\n  },\n  salonPhone: {\n    fontSize: 12,\n    color: '#666'\n  },\n  salonCardActions: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 10\n  },\n  emptyContainer: {\n    padding: 20,\n    alignItems: 'center'\n  },\n  statusSelector: {\n    marginVertical: 15\n  }\n});\nexport default DashboardScreen;","map":{"version":3,"names":["React","useState","useEffect","useContext","View","StyleSheet","ScrollView","Alert","TouchableOpacity","FlatList","Text","Card","Button","Title","Paragraph","FAB","Avatar","ActivityIndicator","Searchbar","Chip","Modal","Portal","TextInput","Divider","Ionicons","AsyncStorage","axios","AuthContext","apiClient","jsx","_jsx","jsxs","_jsxs","DashboardScreen","_ref","navigation","_useContext","userInfo","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","users","setUsers","_useState5","_useState6","barbers","setBarbers","_useState7","_useState8","managers","setManagers","_useState9","_useState10","salons","setSalons","_useState11","_useState12","searchQuery","setSearchQuery","_useState13","_useState14","staffVisible","setStaffVisible","_useState15","_useState16","salonVisible","setSalonVisible","_useState17","name","email","password","phone","role","_useState18","newUserForm","setNewUserForm","_useState19","address","street","city","state","postalCode","description","_useState20","newSalonForm","setNewSalonForm","_useState21","_useState22","selectedUserId","setSelectedUserId","_useState23","isActive","_useState24","editUserForm","setEditUserForm","_useState25","totalAppointments","completedAppointments","totalUsers","totalBarbers","totalManagers","_useState26","stats","setStats","alert","goBack","fetchUsers","fetchStats","fetchSalons","adminApi","getUsers","get","createUser","userData","post","updateUser","id","put","deleteUser","delete","getStats","getSalons","_ref2","_asyncToGenerator","response","headers","Authorization","token","data","success","allUsers","filter","u","console","log","length","error","message","apply","arguments","_ref3","apiStats","appointments","total","completed","_ref4","allSalons","handleCreateUser","_ref5","nameInitials","split","map","n","join","toUpperCase","randomNum","Math","floor","random","rolePrefix","staffId","completeFormData","_objectSpread","joinDate","Date","toISOString","JSON","stringify","user","_response$data","_error$response","_error$response2","_error$response2$data","handleDeleteUser","userId","text","style","onPress","_onPress","_response$data2","_error$response3","_error$response3$data","userToEdit","find","_id","undefined","handleUpdateUser","_ref6","_response$data3","_error$response4","_error$response5","_error$response5$data","renderUserItem","_ref7","item","styles","userCard","children","Content","userCardHeader","size","label","backgroundColor","userDetailsRow","userEmail","userPhone","staffIdContainer","mode","statusChip","roleChip","charAt","slice","marginVertical","userCardActions","compact","icon","textColor","handleCreateSalon","_ref8","salonData","coordinates","salon","_response$data4","_error$response6","_error$response7","_error$response7$data","handleDeleteSalon","salonId","_onPress2","_response$data5","_error$response8","_error$response8$data","renderSalonItem","_ref9","salonCard","salonCardHeader","Icon","salonInfo","salonAddress","salonPhone","salonCardActions","navigate","centeredContainer","color","marginTop","container","header","headerTitle","headerSubtitle","content","statsContainer","statsCard","statsValue","section","sectionHeader","sectionTitle","renderItem","keyExtractor","contentContainerStyle","paddingBottom","ListEmptyComponent","emptyContainer","emptyText","placeholder","onChangeText","value","searchbar","subtitle","b","toLowerCase","includes","m","visible","onDismiss","modalContent","modalTitle","input","keyboardType","autoCapitalize","secureTextEntry","roleSelector","roleLabel","roleButtons","roleButton","modalActions","button","multiline","numberOfLines","fab","statusSelector","labelStyle","create","flex","justifyContent","alignItems","padding","paddingTop","fontSize","fontWeight","flexDirection","width","elevation","marginBottom","marginLeft","textAlign","position","margin","right","bottom","borderRadius","marginHorizontal"],"sources":["C:/Users/User/Downloads/mobile/screens/admin/DashboardScreen.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, StyleSheet, ScrollView, Alert, TouchableOpacity, FlatList } from 'react-native';\r\nimport { Text, Card, Button, Title, Paragraph, FAB, Avatar, ActivityIndicator, Searchbar, Chip, Modal, Portal, TextInput, Divider } from 'react-native-paper';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport apiClient from '../../api/client';\r\n\r\nconst DashboardScreen = ({ navigation }) => {\r\n  const { userInfo } = useContext(AuthContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const [users, setUsers] = useState([]);\r\n  const [barbers, setBarbers] = useState([]);\r\n  const [managers, setManagers] = useState([]);\r\n  const [salons, setSalons] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [staffVisible, setStaffVisible] = useState(false);\r\n  const [salonVisible, setSalonVisible] = useState(false);\r\n  const [newUserForm, setNewUserForm] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    phone: '',\r\n    role: 'barber'\r\n  });\r\n  const [newSalonForm, setNewSalonForm] = useState({\r\n    name: '',\r\n    address: {\r\n      street: '',\r\n      city: '',\r\n      state: '',\r\n      postalCode: ''\r\n    },\r\n    phone: '',\r\n    email: '',\r\n    description: ''\r\n  });\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n  const [editUserForm, setEditUserForm] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    role: 'barber',\r\n    isActive: true\r\n  });\r\n  const [stats, setStats] = useState({\r\n    totalAppointments: 0,\r\n    completedAppointments: 0,\r\n    totalUsers: 0,\r\n    totalBarbers: 0,\r\n    totalManagers: 0\r\n  });\r\n\r\n  // Check if user is admin\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.email !== 'seif.ayadi.3.9.2@gmail.com') {\r\n      Alert.alert('Access Denied', 'Only the admin account can access this screen.');\r\n      navigation.goBack();\r\n    } else {\r\n      fetchUsers();\r\n      fetchStats();\r\n      fetchSalons();\r\n    }\r\n  }, [userInfo]);\r\n\r\n  // Admin API endpoints\r\n  const adminApi = {\r\n    getUsers: () => apiClient.get('/admin/users'),\r\n    createUser: (userData) => apiClient.post('/admin/users', userData),\r\n    updateUser: (id, userData) => apiClient.put(`/admin/users/${id}`, userData),\r\n    deleteUser: (id) => apiClient.delete(`/admin/users/${id}`),\r\n    getStats: () => apiClient.get('/admin/stats'),\r\n    getSalons: () => apiClient.get('/admin/salons')\r\n  };\r\n\r\n  // Fetch users\r\n  const fetchUsers = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Use our admin API endpoints instead of hardcoded data\r\n      const response = await apiClient.get('/admin/users', {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        const allUsers = response.data.users || [];\r\n        setUsers(allUsers);\r\n        setBarbers(allUsers.filter(u => u.role === 'barber'));\r\n        setManagers(allUsers.filter(u => u.role === 'manager'));\r\n        console.log(`Loaded ${allUsers.length} users, ${barbers.length} barbers, ${managers.length} managers`);\r\n      } else {\r\n        console.error('Failed to load users:', response.data);\r\n        Alert.alert('Error', 'Failed to load users');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n      setLoading(false);\r\n      Alert.alert('Error', 'Failed to load users: ' + (error.message || 'Unknown error'));\r\n    }\r\n  };\r\n\r\n  // Fetch dashboard stats\r\n  const fetchStats = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Use our admin stats API endpoint\r\n      const response = await apiClient.get('/admin/stats', {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        const { stats: apiStats } = response.data;\r\n        \r\n        setStats({\r\n          totalAppointments: apiStats.appointments.total || 0,\r\n          completedAppointments: apiStats.appointments.completed || 0,\r\n          totalUsers: apiStats.users.total || 0,\r\n          totalBarbers: apiStats.users.barbers || 0,\r\n          totalManagers: apiStats.users.managers || 0\r\n        });\r\n        \r\n        console.log('Dashboard stats loaded successfully');\r\n      } else {\r\n        console.error('Failed to load stats:', response.data);\r\n        // Fallback to zeros if API fails\r\n        setStats({\r\n          totalAppointments: 0,\r\n          completedAppointments: 0,\r\n          totalUsers: 0,\r\n          totalBarbers: 0,\r\n          totalManagers: 0\r\n        });\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching stats:', error);\r\n      setLoading(false);\r\n      \r\n      // Fallback to zeros if API fails\r\n      setStats({\r\n        totalAppointments: 0,\r\n        completedAppointments: 0,\r\n        totalUsers: 0,\r\n        totalBarbers: 0,\r\n        totalManagers: 0\r\n      });\r\n    }\r\n  };\r\n\r\n  // Fetch salons\r\n  const fetchSalons = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const response = await apiClient.get('/admin/salons', {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        const allSalons = response.data.salons || [];\r\n        setSalons(allSalons);\r\n        console.log(`Loaded ${allSalons.length} salons`);\r\n      } else {\r\n        console.error('Failed to load salons:', response.data);\r\n        Alert.alert('Error', 'Failed to load salons');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching salons:', error);\r\n      setLoading(false);\r\n      Alert.alert('Error', 'Failed to load salons: ' + (error.message || 'Unknown error'));\r\n    }\r\n  };\r\n\r\n  // Create new user\r\n  const handleCreateUser = async () => {\r\n    try {\r\n      setLoading(true);\r\n      // Validate form\r\n      if (!newUserForm.name || !newUserForm.email || !newUserForm.password) {\r\n        Alert.alert('Error', 'Please fill in all required fields');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Generate staff ID based on role and name\r\n      const nameInitials = newUserForm.name\r\n        .split(' ')\r\n        .map(n => n[0])\r\n        .join('')\r\n        .toUpperCase();\r\n      const randomNum = Math.floor(1000 + Math.random() * 9000); // 4-digit number\r\n      const rolePrefix = newUserForm.role === 'manager' ? 'MGR' : 'BRB';\r\n      const staffId = `${rolePrefix}-${nameInitials}${randomNum}`;\r\n\r\n      // Prepare the complete form data with staffId\r\n      const completeFormData = {\r\n        ...newUserForm,\r\n        staffId,\r\n        isActive: true,\r\n        joinDate: new Date().toISOString()\r\n      };\r\n\r\n      console.log('Creating new staff with data:', JSON.stringify(completeFormData));\r\n      \r\n      // Get token from userInfo object\r\n      const token = userInfo.token;\r\n      \r\n      // Make the API call with explicit token in header\r\n      const response = await apiClient.post('/admin/users', completeFormData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      console.log('API response:', JSON.stringify(response.data));\r\n      \r\n      if (response.data && response.data.success) {\r\n        console.log('Staff member created successfully:', response.data.user);\r\n        // Fetch users again to get the updated list from server\r\n        await fetchUsers();\r\n        \r\n        // Reset form\r\n        setNewUserForm({\r\n          name: '',\r\n          email: '',\r\n          password: '',\r\n          phone: '',\r\n          role: 'barber'\r\n        });\r\n        setStaffVisible(false);\r\n        \r\n        Alert.alert(\r\n          'Success', \r\n          `${newUserForm.role === 'manager' ? 'Manager' : 'Barber'} added successfully with ID: ${staffId}`\r\n        );\r\n      } else {\r\n        console.error('Failed to create staff member, response:', JSON.stringify(response.data));\r\n        Alert.alert('Error', response.data?.message || 'Failed to create staff member');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error creating staff member:', error);\r\n      console.error('Error details:', error.response?.data || error.message);\r\n      setLoading(false);\r\n      Alert.alert('Error', error.response?.data?.message || 'Failed to create staff member. Check console for details.');\r\n    }\r\n  };\r\n\r\n  // Handle user deletion\r\n  const handleDeleteUser = (userId) => {\r\n    Alert.alert(\r\n      'Confirm Delete',\r\n      'Are you sure you want to delete this user?',\r\n      [\r\n        {\r\n          text: 'Cancel',\r\n          style: 'cancel'\r\n        },\r\n        {\r\n          text: 'Delete',\r\n          style: 'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              setLoading(true);\r\n              \r\n              // Call the API to delete the user\r\n              const response = await apiClient.delete(`/admin/users/${userId}`, {\r\n                headers: {\r\n                  Authorization: `Bearer ${userInfo.token}`\r\n                }\r\n              });\r\n              \r\n              if (response.data && response.data.success) {\r\n                console.log('User deleted successfully:', response.data);\r\n                // Refresh the user list\r\n                await fetchUsers();\r\n                Alert.alert('Success', 'User deleted successfully');\r\n              } else {\r\n                console.error('Failed to delete user:', response.data);\r\n                Alert.alert('Error', response.data?.message || 'Failed to delete user');\r\n              }\r\n              \r\n              setLoading(false);\r\n            } catch (error) {\r\n              console.error('Error deleting user:', error);\r\n              setLoading(false);\r\n              Alert.alert('Error', error.response?.data?.message || 'Failed to delete user');\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n\r\n  // Fetch user data for editing\r\n  useEffect(() => {\r\n    if (selectedUserId) {\r\n      const userToEdit = users.find(user => user._id === selectedUserId);\r\n      if (userToEdit) {\r\n        setEditUserForm({\r\n          name: userToEdit.name || '',\r\n          email: userToEdit.email || '',\r\n          phone: userToEdit.phone || '',\r\n          role: userToEdit.role || 'barber',\r\n          isActive: userToEdit.isActive !== undefined ? userToEdit.isActive : true\r\n        });\r\n      }\r\n    }\r\n  }, [selectedUserId]);\r\n\r\n  // Handle user update\r\n  const handleUpdateUser = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Validate form\r\n      if (!editUserForm.name || !editUserForm.email) {\r\n        Alert.alert('Error', 'Please fill in all required fields');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      console.log('Updating user with data:', JSON.stringify(editUserForm));\r\n      \r\n      // Get token from userInfo object\r\n      const token = userInfo.token;\r\n      \r\n      // Make the API call with explicit token in header\r\n      const response = await apiClient.put(`/admin/users/${selectedUserId}`, editUserForm, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        console.log('User updated successfully:', response.data.user);\r\n        // Fetch users again to get the updated list\r\n        await fetchUsers();\r\n        \r\n        // Reset form and close modal\r\n        setSelectedUserId(null);\r\n        \r\n        Alert.alert('Success', 'User updated successfully');\r\n      } else {\r\n        console.error('Failed to update user, response:', JSON.stringify(response.data));\r\n        Alert.alert('Error', response.data?.message || 'Failed to update user');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error updating user:', error);\r\n      console.error('Error details:', error.response?.data || error.message);\r\n      setLoading(false);\r\n      Alert.alert('Error', error.response?.data?.message || 'Failed to update user. Check console for details.');\r\n    }\r\n  };\r\n\r\n  // Render user item\r\n  const renderUserItem = ({ item }) => (\r\n    <Card style={styles.userCard}>\r\n      <Card.Content>\r\n        <View style={styles.userCardHeader}>\r\n          <Avatar.Text \r\n            size={40} \r\n            label={item.name.split(' ').map(n => n[0]).join('')} \r\n            backgroundColor=\"#0F4C75\" \r\n          />\r\n          <View style={styles.userInfo}>\r\n            <Title>{item.name}</Title>\r\n            <View style={styles.userDetailsRow}>\r\n              <Paragraph style={styles.userEmail}>{item.email}</Paragraph>\r\n              {item.phone && <Paragraph style={styles.userPhone}>• {item.phone}</Paragraph>}\r\n            </View>\r\n            {item.staffId && (\r\n              <View style={styles.staffIdContainer}>\r\n                <Paragraph style={styles.staffId}>ID: {item.staffId}</Paragraph>\r\n                <Chip \r\n                  mode=\"flat\" \r\n                  style={[styles.statusChip, {backgroundColor: item.isActive ? '#C8E6C9' : '#FFCDD2'}]}\r\n                >\r\n                  {item.isActive ? 'Active' : 'Inactive'}\r\n                </Chip>\r\n              </View>\r\n            )}\r\n          </View>\r\n          <Chip mode=\"outlined\" style={styles.roleChip}>\r\n            {item.role.charAt(0).toUpperCase() + item.role.slice(1)}\r\n          </Chip>\r\n        </View>\r\n        <Divider style={{ marginVertical: 10 }} />\r\n        <View style={styles.userCardActions}>\r\n          <Button \r\n            mode=\"outlined\" \r\n            compact \r\n            icon=\"pencil\"\r\n            onPress={() => setSelectedUserId(item._id)}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button \r\n            mode=\"outlined\" \r\n            compact \r\n            icon=\"delete\" \r\n            textColor=\"#D32F2F\"\r\n            onPress={() => handleDeleteUser(item._id)}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </View>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n\r\n  // Create new salon\r\n  const handleCreateSalon = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Validate form\r\n      if (!newSalonForm.name || !newSalonForm.address.street || !newSalonForm.address.city || !newSalonForm.phone) {\r\n        Alert.alert('Error', 'Please fill in all required fields (name, address, phone)');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      // Create salon data with basic location\r\n      const salonData = {\r\n        ...newSalonForm,\r\n        coordinates: [10.1815, 36.8065] // Default coordinates (Tunis)\r\n      };\r\n      \r\n      console.log('Creating new salon with data:', JSON.stringify(salonData));\r\n      \r\n      const response = await apiClient.post('/admin/salons', salonData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        console.log('Salon created successfully:', response.data.salon);\r\n        await fetchSalons();\r\n        \r\n        // Reset form\r\n        setNewSalonForm({\r\n          name: '',\r\n          address: {\r\n            street: '',\r\n            city: '',\r\n            state: '',\r\n            postalCode: ''\r\n          },\r\n          phone: '',\r\n          email: '',\r\n          description: ''\r\n        });\r\n        setSalonVisible(false);\r\n        \r\n        Alert.alert('Success', 'Salon added successfully');\r\n      } else {\r\n        console.error('Failed to create salon, response:', JSON.stringify(response.data));\r\n        Alert.alert('Error', response.data?.message || 'Failed to create salon');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error creating salon:', error);\r\n      console.error('Error details:', error.response?.data || error.message);\r\n      setLoading(false);\r\n      Alert.alert('Error', error.response?.data?.message || 'Failed to create salon. Check console for details.');\r\n    }\r\n  };\r\n  \r\n  // Handle salon deletion\r\n  const handleDeleteSalon = (salonId) => {\r\n    Alert.alert(\r\n      'Confirm Delete',\r\n      'Are you sure you want to delete this salon?',\r\n      [\r\n        {\r\n          text: 'Cancel',\r\n          style: 'cancel'\r\n        },\r\n        {\r\n          text: 'Delete',\r\n          style: 'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              setLoading(true);\r\n              \r\n              const response = await apiClient.delete(`/admin/salons/${salonId}`, {\r\n                headers: {\r\n                  Authorization: `Bearer ${userInfo.token}`\r\n                }\r\n              });\r\n              \r\n              if (response.data && response.data.success) {\r\n                console.log('Salon deleted successfully:', response.data);\r\n                await fetchSalons();\r\n                Alert.alert('Success', 'Salon deleted successfully');\r\n              } else {\r\n                console.error('Failed to delete salon:', response.data);\r\n                Alert.alert('Error', response.data?.message || 'Failed to delete salon');\r\n              }\r\n              \r\n              setLoading(false);\r\n            } catch (error) {\r\n              console.error('Error deleting salon:', error);\r\n              setLoading(false);\r\n              Alert.alert('Error', error.response?.data?.message || 'Failed to delete salon');\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n  \r\n  // Render salon item\r\n  const renderSalonItem = ({ item }) => (\r\n    <Card style={styles.salonCard}>\r\n      <Card.Content>\r\n        <View style={styles.salonCardHeader}>\r\n          <Avatar.Icon \r\n            size={40} \r\n            icon=\"store\" \r\n            backgroundColor=\"#0F4C75\" \r\n          />\r\n          <View style={styles.salonInfo}>\r\n            <Title>{item.name}</Title>\r\n            <Paragraph style={styles.salonAddress}>\r\n              {item.address.street}, {item.address.city}\r\n            </Paragraph>\r\n            <Paragraph style={styles.salonPhone}>{item.phone}</Paragraph>\r\n          </View>\r\n          <Chip \r\n            mode=\"flat\" \r\n            style={[styles.statusChip, {backgroundColor: item.isActive ? '#C8E6C9' : '#FFCDD2'}]}\r\n          >\r\n            {item.isActive ? 'Active' : 'Inactive'}\r\n          </Chip>\r\n        </View>\r\n        <Divider style={{ marginVertical: 10 }} />\r\n        <View style={styles.salonCardActions}>\r\n          <Button \r\n            mode=\"outlined\" \r\n            compact \r\n            icon=\"pencil\"\r\n            onPress={() => navigation.navigate('SalonDetails', { salonId: item._id })}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button \r\n            mode=\"outlined\" \r\n            compact \r\n            icon=\"account-group\"\r\n            onPress={() => navigation.navigate('SalonStaff', { salonId: item._id })}\r\n          >\r\n            Staff\r\n          </Button>\r\n          <Button \r\n            mode=\"outlined\" \r\n            compact \r\n            icon=\"delete\" \r\n            textColor=\"#D32F2F\"\r\n            onPress={() => handleDeleteSalon(item._id)}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </View>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n\r\n  if (loading && users.length === 0) {\r\n    return (\r\n      <View style={styles.centeredContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n        <Text style={{ marginTop: 20 }}>Loading dashboard...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Admin Header */}\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Admin Dashboard</Text>\r\n        <Text style={styles.headerSubtitle}>Welcome, {userInfo?.name}</Text>\r\n      </View>\r\n\r\n      <ScrollView style={styles.content}>\r\n        {/* Stats Cards */}\r\n        <View style={styles.statsContainer}>\r\n          <Card style={[styles.statsCard, { backgroundColor: '#BBE1FA' }]}>\r\n            <Card.Content>\r\n              <Title style={styles.statsValue}>{stats.totalAppointments}</Title>\r\n              <Paragraph>Total Appointments</Paragraph>\r\n            </Card.Content>\r\n          </Card>\r\n          \r\n          <Card style={[styles.statsCard, { backgroundColor: '#C8E6C9' }]}>\r\n            <Card.Content>\r\n              <Title style={styles.statsValue}>{stats.totalUsers}</Title>\r\n              <Paragraph>Customers</Paragraph>\r\n            </Card.Content>\r\n          </Card>\r\n          \r\n          <Card style={[styles.statsCard, { backgroundColor: '#FFECB3' }]}>\r\n            <Card.Content>\r\n              <Title style={styles.statsValue}>{stats.totalBarbers}</Title>\r\n              <Paragraph>Barbers</Paragraph>\r\n            </Card.Content>\r\n          </Card>\r\n        </View>\r\n\r\n        {/* Salon Management */}\r\n        <View style={styles.section}>\r\n          <View style={styles.sectionHeader}>\r\n            <Text style={styles.sectionTitle}>Salon Management</Text>\r\n            <Button \r\n              mode=\"contained\" \r\n              icon=\"plus\" \r\n              onPress={() => setSalonVisible(true)}\r\n            >\r\n              Add Salon\r\n            </Button>\r\n          </View>\r\n\r\n          <FlatList\r\n            data={salons}\r\n            renderItem={renderSalonItem}\r\n            keyExtractor={item => item._id}\r\n            contentContainerStyle={{ paddingBottom: 10 }}\r\n            ListEmptyComponent={\r\n              <View style={styles.emptyContainer}>\r\n                <Text style={styles.emptyText}>No salons found</Text>\r\n              </View>\r\n            }\r\n          />\r\n        </View>\r\n\r\n        {/* Staff Management */}\r\n        <View style={styles.section}>\r\n          <View style={styles.sectionHeader}>\r\n            <Text style={styles.sectionTitle}>Staff Management</Text>\r\n            <Button \r\n              mode=\"contained\" \r\n              icon=\"plus\" \r\n              onPress={() => setStaffVisible(true)}\r\n            >\r\n              Add Staff\r\n            </Button>\r\n          </View>\r\n\r\n          <Searchbar\r\n            placeholder=\"Search users...\"\r\n            onChangeText={setSearchQuery}\r\n            value={searchQuery}\r\n            style={styles.searchbar}\r\n          />\r\n\r\n          <Text style={styles.subtitle}>Barbers ({barbers.length})</Text>\r\n          <FlatList\r\n            data={barbers.filter(b => \r\n              b.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n              b.email.toLowerCase().includes(searchQuery.toLowerCase())\r\n            )}\r\n            renderItem={renderUserItem}\r\n            keyExtractor={item => item._id}\r\n            contentContainerStyle={{ paddingBottom: 10 }}\r\n            ListEmptyComponent={\r\n              <View style={styles.emptyContainer}>\r\n                <Text style={styles.emptyText}>No barbers found</Text>\r\n              </View>\r\n            }\r\n          />\r\n\r\n          <Text style={styles.subtitle}>Managers ({managers.length})</Text>\r\n          <FlatList\r\n            data={managers.filter(m => \r\n              m.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n              m.email.toLowerCase().includes(searchQuery.toLowerCase())\r\n            )}\r\n            renderItem={renderUserItem}\r\n            keyExtractor={item => item._id}\r\n            contentContainerStyle={{ paddingBottom: 10 }}\r\n            ListEmptyComponent={\r\n              <View style={styles.emptyContainer}>\r\n                <Text style={styles.emptyText}>No managers found</Text>\r\n              </View>\r\n            }\r\n          />\r\n        </View>\r\n      </ScrollView>\r\n\r\n      {/* Add Staff Modal */}\r\n      <Portal>\r\n        <Modal\r\n          visible={staffVisible}\r\n          onDismiss={() => setStaffVisible(false)}\r\n          contentContainerStyle={styles.modalContent}\r\n        >\r\n          <Title style={styles.modalTitle}>Add New Staff Member</Title>\r\n          \r\n          <TextInput\r\n            label=\"Full Name\"\r\n            value={newUserForm.name}\r\n            onChangeText={text => {\r\n              setNewUserForm({...newUserForm, name: text});\r\n              \r\n              // Auto-generate staff ID when name changes and role is selected\r\n              if (text && ['barber', 'manager'].includes(newUserForm.role)) {\r\n                const nameInitials = text\r\n                  .split(' ')\r\n                  .map(n => n[0])\r\n                  .join('')\r\n                  .toUpperCase();\r\n                const randomNum = Math.floor(1000 + Math.random() * 9000);\r\n                const rolePrefix = newUserForm.role === 'manager' ? 'MGR' : 'BRB';\r\n                const staffId = `${rolePrefix}-${nameInitials}${randomNum}`;\r\n                console.log('Auto-generated Staff ID:', staffId);\r\n              }\r\n            }}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Email\"\r\n            value={newUserForm.email}\r\n            onChangeText={text => setNewUserForm({...newUserForm, email: text})}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Password\"\r\n            value={newUserForm.password}\r\n            onChangeText={text => setNewUserForm({...newUserForm, password: text})}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n            secureTextEntry\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Phone\"\r\n            value={newUserForm.phone}\r\n            onChangeText={text => setNewUserForm({...newUserForm, phone: text})}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n            keyboardType=\"phone-pad\"\r\n          />\r\n          \r\n          <View style={styles.roleSelector}>\r\n            <Text style={styles.roleLabel}>Role:</Text>\r\n            <View style={styles.roleButtons}>\r\n              <Button\r\n                mode={newUserForm.role === 'barber' ? 'contained' : 'outlined'}\r\n                onPress={() => {\r\n                  // Update role and regenerate ID if name exists\r\n                  const role = 'barber';\r\n                  setNewUserForm({...newUserForm, role});\r\n                  \r\n                  if (newUserForm.name) {\r\n                    const nameInitials = newUserForm.name\r\n                      .split(' ')\r\n                      .map(n => n[0])\r\n                      .join('')\r\n                      .toUpperCase();\r\n                    const randomNum = Math.floor(1000 + Math.random() * 9000);\r\n                    console.log('Auto-generated Barber ID:', `BRB-${nameInitials}${randomNum}`);\r\n                  }\r\n                }}\r\n                style={styles.roleButton}\r\n              >\r\n                Barber\r\n              </Button>\r\n              \r\n              <Button\r\n                mode={newUserForm.role === 'manager' ? 'contained' : 'outlined'}\r\n                onPress={() => {\r\n                  // Update role and regenerate ID if name exists\r\n                  const role = 'manager';\r\n                  setNewUserForm({...newUserForm, role});\r\n                  \r\n                  if (newUserForm.name) {\r\n                    const nameInitials = newUserForm.name\r\n                      .split(' ')\r\n                      .map(n => n[0])\r\n                      .join('')\r\n                      .toUpperCase();\r\n                    const randomNum = Math.floor(1000 + Math.random() * 9000);\r\n                    console.log('Auto-generated Manager ID:', `MGR-${nameInitials}${randomNum}`);\r\n                  }\r\n                }}\r\n                style={styles.roleButton}\r\n              >\r\n                Manager\r\n              </Button>\r\n            </View>\r\n          </View>\r\n          \r\n          <View style={styles.modalActions}>\r\n            <Button onPress={() => setStaffVisible(false)} style={styles.button}>\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              mode=\"contained\" \r\n              onPress={handleCreateUser} \r\n              loading={loading}\r\n              style={styles.button}\r\n            >\r\n              Add Staff\r\n            </Button>\r\n          </View>\r\n        </Modal>\r\n      </Portal>\r\n\r\n      {/* Add Salon Modal */}\r\n      <Portal>\r\n        <Modal\r\n          visible={salonVisible}\r\n          onDismiss={() => setSalonVisible(false)}\r\n          contentContainerStyle={styles.modalContent}\r\n        >\r\n          <Title style={styles.modalTitle}>Add New Salon</Title>\r\n          \r\n          <TextInput\r\n            label=\"Salon Name\"\r\n            value={newSalonForm.name}\r\n            onChangeText={text => setNewSalonForm({...newSalonForm, name: text})}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Street Address\"\r\n            value={newSalonForm.address.street}\r\n            onChangeText={text => setNewSalonForm({\r\n              ...newSalonForm, \r\n              address: {...newSalonForm.address, street: text}\r\n            })}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"City\"\r\n            value={newSalonForm.address.city}\r\n            onChangeText={text => setNewSalonForm({\r\n              ...newSalonForm, \r\n              address: {...newSalonForm.address, city: text}\r\n            })}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"State/Region\"\r\n            value={newSalonForm.address.state}\r\n            onChangeText={text => setNewSalonForm({\r\n              ...newSalonForm, \r\n              address: {...newSalonForm.address, state: text}\r\n            })}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Postal Code\"\r\n            value={newSalonForm.address.postalCode}\r\n            onChangeText={text => setNewSalonForm({\r\n              ...newSalonForm, \r\n              address: {...newSalonForm.address, postalCode: text}\r\n            })}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n            keyboardType=\"numeric\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Phone\"\r\n            value={newSalonForm.phone}\r\n            onChangeText={text => setNewSalonForm({...newSalonForm, phone: text})}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n            keyboardType=\"phone-pad\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Email\"\r\n            value={newSalonForm.email}\r\n            onChangeText={text => setNewSalonForm({...newSalonForm, email: text})}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Description\"\r\n            value={newSalonForm.description}\r\n            onChangeText={text => setNewSalonForm({...newSalonForm, description: text})}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n            multiline\r\n            numberOfLines={3}\r\n          />\r\n          \r\n          <View style={styles.modalActions}>\r\n            <Button onPress={() => setSalonVisible(false)} style={styles.button}>\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              mode=\"contained\" \r\n              onPress={handleCreateSalon} \r\n              loading={loading}\r\n              style={styles.button}\r\n            >\r\n              Add Salon\r\n            </Button>\r\n          </View>\r\n        </Modal>\r\n      </Portal>\r\n\r\n      <FAB\r\n        style={styles.fab}\r\n        icon=\"refresh\"\r\n        onPress={() => {\r\n          fetchUsers();\r\n          fetchSalons();\r\n          fetchStats();\r\n        }}\r\n        label=\"Refresh\"\r\n      />\r\n\r\n      {/* Edit User Modal */}\r\n      <Portal>\r\n        <Modal\r\n          visible={selectedUserId !== null}\r\n          onDismiss={() => setSelectedUserId(null)}\r\n          contentContainerStyle={styles.modalContent}\r\n        >\r\n          <Title style={styles.modalTitle}>Edit Staff Member</Title>\r\n          \r\n          <TextInput\r\n            label=\"Full Name\"\r\n            value={editUserForm.name}\r\n            onChangeText={text => setEditUserForm({...editUserForm, name: text})}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Email\"\r\n            value={editUserForm.email}\r\n            onChangeText={text => setEditUserForm({...editUserForm, email: text})}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n          />\r\n          \r\n          <TextInput\r\n            label=\"Phone\"\r\n            value={editUserForm.phone}\r\n            onChangeText={text => setEditUserForm({...editUserForm, phone: text})}\r\n            style={styles.input}\r\n            mode=\"outlined\"\r\n            keyboardType=\"phone-pad\"\r\n          />\r\n          \r\n          <View style={styles.roleSelector}>\r\n            <Text style={styles.roleLabel}>Role:</Text>\r\n            <View style={styles.roleButtons}>\r\n              <Button\r\n                mode={editUserForm.role === 'barber' ? 'contained' : 'outlined'}\r\n                onPress={() => setEditUserForm({...editUserForm, role: 'barber'})}\r\n                style={styles.roleButton}\r\n              >\r\n                Barber\r\n              </Button>\r\n              \r\n              <Button\r\n                mode={editUserForm.role === 'manager' ? 'contained' : 'outlined'}\r\n                onPress={() => setEditUserForm({...editUserForm, role: 'manager'})}\r\n                style={styles.roleButton}\r\n              >\r\n                Manager\r\n              </Button>\r\n            </View>\r\n          </View>\r\n          \r\n          <View style={styles.statusSelector}>\r\n            <Text style={styles.roleLabel}>Status:</Text>\r\n            <View style={styles.roleButtons}>\r\n              <Button\r\n                mode={editUserForm.isActive ? 'contained' : 'outlined'}\r\n                onPress={() => setEditUserForm({...editUserForm, isActive: true})}\r\n                style={[styles.roleButton, {backgroundColor: editUserForm.isActive ? '#4CAF50' : 'transparent'}]}\r\n                labelStyle={{color: editUserForm.isActive ? 'white' : '#4CAF50'}}\r\n              >\r\n                Active\r\n              </Button>\r\n              \r\n              <Button\r\n                mode={!editUserForm.isActive ? 'contained' : 'outlined'}\r\n                onPress={() => setEditUserForm({...editUserForm, isActive: false})}\r\n                style={[styles.roleButton, {backgroundColor: !editUserForm.isActive ? '#F44336' : 'transparent'}]}\r\n                labelStyle={{color: !editUserForm.isActive ? 'white' : '#F44336'}}\r\n              >\r\n                Inactive\r\n              </Button>\r\n            </View>\r\n          </View>\r\n          \r\n          <View style={styles.modalActions}>\r\n            <Button onPress={() => setSelectedUserId(null)} style={styles.button}>\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              mode=\"contained\" \r\n              onPress={handleUpdateUser} \r\n              loading={loading}\r\n              style={styles.button}\r\n            >\r\n              Update Staff\r\n            </Button>\r\n          </View>\r\n        </Modal>\r\n      </Portal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  centeredContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  header: {\r\n    backgroundColor: '#0F4C75',\r\n    padding: 20,\r\n    paddingTop: 50,\r\n    paddingBottom: 20,\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  headerSubtitle: {\r\n    fontSize: 16,\r\n    color: '#BBE1FA',\r\n    marginTop: 5,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n  },\r\n  statsContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    padding: 15,\r\n  },\r\n  statsCard: {\r\n    width: '30%',\r\n    elevation: 2,\r\n  },\r\n  statsValue: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n  },\r\n  section: {\r\n    padding: 15,\r\n    marginBottom: 20,\r\n  },\r\n  sectionHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#1B262C',\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginTop: 15,\r\n    marginBottom: 10,\r\n    color: '#1B262C',\r\n  },\r\n  searchbar: {\r\n    marginBottom: 15,\r\n    elevation: 2,\r\n  },\r\n  userCard: {\r\n    marginBottom: 10,\r\n    elevation: 2,\r\n  },\r\n  userCardHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  userInfo: {\r\n    flex: 1,\r\n    marginLeft: 10,\r\n  },\r\n  userDetailsRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginTop: 2,\r\n  },\r\n  userEmail: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  },\r\n  userPhone: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  },\r\n  staffIdContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  staffId: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  },\r\n  roleChip: {\r\n    marginLeft: 10,\r\n  },\r\n  userCardActions: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginTop: 10,\r\n  },\r\n  emptyText: {\r\n    textAlign: 'center',\r\n    padding: 20,\r\n    color: '#666',\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: '#0F4C75',\r\n  },\r\n  modalContent: {\r\n    backgroundColor: 'white',\r\n    padding: 20,\r\n    margin: 20,\r\n    borderRadius: 5,\r\n  },\r\n  modalTitle: {\r\n    marginBottom: 15,\r\n    textAlign: 'center',\r\n  },\r\n  input: {\r\n    marginBottom: 15,\r\n  },\r\n  roleSelector: {\r\n    marginVertical: 15,\r\n  },\r\n  roleLabel: {\r\n    marginBottom: 10,\r\n    fontSize: 16,\r\n  },\r\n  roleButtons: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n  },\r\n  roleButton: {\r\n    width: '45%',\r\n  },\r\n  modalActions: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginTop: 20,\r\n  },\r\n  button: {\r\n    marginHorizontal: 5,\r\n    width: '45%',\r\n  },\r\n  statusChip: {\r\n    marginLeft: 10,\r\n  },\r\n  salonCard: {\r\n    marginBottom: 10,\r\n    elevation: 2,\r\n  },\r\n  salonCardHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  salonInfo: {\r\n    flex: 1,\r\n    marginLeft: 10,\r\n  },\r\n  salonAddress: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  },\r\n  salonPhone: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  },\r\n  salonCardActions: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginTop: 10,\r\n  },\r\n  emptyContainer: {\r\n    padding: 20,\r\n    alignItems: 'center',\r\n  },\r\n  statusSelector: {\r\n    marginVertical: 15,\r\n  },\r\n});\r\n\r\nexport default DashboardScreen; "],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,QAAA;AAE/D,SAASC,IAAI,EAAEC,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAEC,SAAS,EAAEC,GAAG,EAAEC,MAAM,EAAEC,iBAAiB,EAAEC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,SAAS,EAAEC,OAAO,QAAQ,oBAAoB;AAC7J,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,YAAY,MAAM,2CAA2C;AACpE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW;AACpB,OAAOC,SAAS;AAAyB,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEzC,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACnC,IAAAC,WAAA,GAAqBjC,UAAU,CAACwB,WAAW,CAAC;IAApCU,QAAQ,GAAAD,WAAA,CAARC,QAAQ;EAChB,IAAAC,SAAA,GAA8BrC,QAAQ,CAAC,IAAI,CAAC;IAAAsC,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAA0B1C,QAAQ,CAAC,EAAE,CAAC;IAAA2C,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAA8B9C,QAAQ,CAAC,EAAE,CAAC;IAAA+C,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAnCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAAgClD,QAAQ,CAAC,EAAE,CAAC;IAAAmD,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAA4BtD,QAAQ,CAAC,EAAE,CAAC;IAAAuD,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAAjCE,MAAM,GAAAD,WAAA;IAAEE,SAAS,GAAAF,WAAA;EACxB,IAAAG,WAAA,GAAsC1D,QAAQ,CAAC,EAAE,CAAC;IAAA2D,WAAA,GAAApB,cAAA,CAAAmB,WAAA;IAA3CE,WAAW,GAAAD,WAAA;IAAEE,cAAc,GAAAF,WAAA;EAClC,IAAAG,WAAA,GAAwC9D,QAAQ,CAAC,KAAK,CAAC;IAAA+D,WAAA,GAAAxB,cAAA,CAAAuB,WAAA;IAAhDE,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EACpC,IAAAG,WAAA,GAAwClE,QAAQ,CAAC,KAAK,CAAC;IAAAmE,WAAA,GAAA5B,cAAA,CAAA2B,WAAA;IAAhDE,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EACpC,IAAAG,WAAA,GAAsCtE,QAAQ,CAAC;MAC7CuE,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE;IACR,CAAC,CAAC;IAAAC,WAAA,GAAArC,cAAA,CAAA+B,WAAA;IANKO,WAAW,GAAAD,WAAA;IAAEE,cAAc,GAAAF,WAAA;EAOlC,IAAAG,WAAA,GAAwC/E,QAAQ,CAAC;MAC/CuE,IAAI,EAAE,EAAE;MACRS,OAAO,EAAE;QACPC,MAAM,EAAE,EAAE;QACVC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,UAAU,EAAE;MACd,CAAC;MACDV,KAAK,EAAE,EAAE;MACTF,KAAK,EAAE,EAAE;MACTa,WAAW,EAAE;IACf,CAAC,CAAC;IAAAC,WAAA,GAAA/C,cAAA,CAAAwC,WAAA;IAXKQ,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EAYpC,IAAAG,WAAA,GAA4CzF,QAAQ,CAAC,IAAI,CAAC;IAAA0F,WAAA,GAAAnD,cAAA,CAAAkD,WAAA;IAAnDE,cAAc,GAAAD,WAAA;IAAEE,iBAAiB,GAAAF,WAAA;EACxC,IAAAG,WAAA,GAAwC7F,QAAQ,CAAC;MAC/CuE,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTE,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,QAAQ;MACdmB,QAAQ,EAAE;IACZ,CAAC,CAAC;IAAAC,WAAA,GAAAxD,cAAA,CAAAsD,WAAA;IANKG,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EAOpC,IAAAG,WAAA,GAA0BlG,QAAQ,CAAC;MACjCmG,iBAAiB,EAAE,CAAC;MACpBC,qBAAqB,EAAE,CAAC;MACxBC,UAAU,EAAE,CAAC;MACbC,YAAY,EAAE,CAAC;MACfC,aAAa,EAAE;IACjB,CAAC,CAAC;IAAAC,WAAA,GAAAjE,cAAA,CAAA2D,WAAA;IANKO,KAAK,GAAAD,WAAA;IAAEE,QAAQ,GAAAF,WAAA;EAStBvG,SAAS,CAAC,YAAM;IACd,IAAImC,QAAQ,IAAIA,QAAQ,CAACoC,KAAK,KAAK,4BAA4B,EAAE;MAC/DlE,KAAK,CAACqG,KAAK,CAAC,eAAe,EAAE,gDAAgD,CAAC;MAC9EzE,UAAU,CAAC0E,MAAM,CAAC,CAAC;IACrB,CAAC,MAAM;MACLC,UAAU,CAAC,CAAC;MACZC,UAAU,CAAC,CAAC;MACZC,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAAC3E,QAAQ,CAAC,CAAC;EAGd,IAAM4E,QAAQ,GAAG;IACfC,QAAQ,EAAE,SAAVA,QAAQA,CAAA;MAAA,OAAQtF,SAAS,CAACuF,GAAG,CAAC,cAAc,CAAC;IAAA;IAC7CC,UAAU,EAAE,SAAZA,UAAUA,CAAGC,QAAQ;MAAA,OAAKzF,SAAS,CAAC0F,IAAI,CAAC,cAAc,EAAED,QAAQ,CAAC;IAAA;IAClEE,UAAU,EAAE,SAAZA,UAAUA,CAAGC,EAAE,EAAEH,QAAQ;MAAA,OAAKzF,SAAS,CAAC6F,GAAG,mBAAiBD,EAAE,EAAIH,QAAQ,CAAC;IAAA;IAC3EK,UAAU,EAAE,SAAZA,UAAUA,CAAGF,EAAE;MAAA,OAAK5F,SAAS,CAAC+F,MAAM,mBAAiBH,EAAI,CAAC;IAAA;IAC1DI,QAAQ,EAAE,SAAVA,QAAQA,CAAA;MAAA,OAAQhG,SAAS,CAACuF,GAAG,CAAC,cAAc,CAAC;IAAA;IAC7CU,SAAS,EAAE,SAAXA,SAASA,CAAA;MAAA,OAAQjG,SAAS,CAACuF,GAAG,CAAC,eAAe,CAAC;IAAA;EACjD,CAAC;EAGD,IAAML,UAAU;IAAA,IAAAgB,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC7B,IAAI;QACFrF,UAAU,CAAC,IAAI,CAAC;QAGhB,IAAMsF,QAAQ,SAASpG,SAAS,CAACuF,GAAG,CAAC,cAAc,EAAE;UACnDc,OAAO,EAAE;YACPC,aAAa,cAAY7F,QAAQ,CAAC8F;UACpC;QACF,CAAC,CAAC;QAEF,IAAIH,QAAQ,CAACI,IAAI,IAAIJ,QAAQ,CAACI,IAAI,CAACC,OAAO,EAAE;UAC1C,IAAMC,QAAQ,GAAGN,QAAQ,CAACI,IAAI,CAACvF,KAAK,IAAI,EAAE;UAC1CC,QAAQ,CAACwF,QAAQ,CAAC;UAClBpF,UAAU,CAACoF,QAAQ,CAACC,MAAM,CAAC,UAAAC,CAAC;YAAA,OAAIA,CAAC,CAAC5D,IAAI,KAAK,QAAQ;UAAA,EAAC,CAAC;UACrDtB,WAAW,CAACgF,QAAQ,CAACC,MAAM,CAAC,UAAAC,CAAC;YAAA,OAAIA,CAAC,CAAC5D,IAAI,KAAK,SAAS;UAAA,EAAC,CAAC;UACvD6D,OAAO,CAACC,GAAG,aAAWJ,QAAQ,CAACK,MAAM,gBAAW1F,OAAO,CAAC0F,MAAM,kBAAatF,QAAQ,CAACsF,MAAM,cAAW,CAAC;QACxG,CAAC,MAAM;UACLF,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEZ,QAAQ,CAACI,IAAI,CAAC;UACrD7H,KAAK,CAACqG,KAAK,CAAC,OAAO,EAAE,sBAAsB,CAAC;QAC9C;QAEAlE,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOkG,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7ClG,UAAU,CAAC,KAAK,CAAC;QACjBnC,KAAK,CAACqG,KAAK,CAAC,OAAO,EAAE,wBAAwB,IAAIgC,KAAK,CAACC,OAAO,IAAI,eAAe,CAAC,CAAC;MACrF;IACF,CAAC;IAAA,gBA5BK/B,UAAUA,CAAA;MAAA,OAAAgB,KAAA,CAAAgB,KAAA,OAAAC,SAAA;IAAA;EAAA,GA4Bf;EAGD,IAAMhC,UAAU;IAAA,IAAAiC,KAAA,GAAAjB,iBAAA,CAAG,aAAY;MAC7B,IAAI;QACFrF,UAAU,CAAC,IAAI,CAAC;QAGhB,IAAMsF,QAAQ,SAASpG,SAAS,CAACuF,GAAG,CAAC,cAAc,EAAE;UACnDc,OAAO,EAAE;YACPC,aAAa,cAAY7F,QAAQ,CAAC8F;UACpC;QACF,CAAC,CAAC;QAEF,IAAIH,QAAQ,CAACI,IAAI,IAAIJ,QAAQ,CAACI,IAAI,CAACC,OAAO,EAAE;UAC1C,IAAeY,QAAQ,GAAKjB,QAAQ,CAACI,IAAI,CAAjC1B,KAAK;UAEbC,QAAQ,CAAC;YACPP,iBAAiB,EAAE6C,QAAQ,CAACC,YAAY,CAACC,KAAK,IAAI,CAAC;YACnD9C,qBAAqB,EAAE4C,QAAQ,CAACC,YAAY,CAACE,SAAS,IAAI,CAAC;YAC3D9C,UAAU,EAAE2C,QAAQ,CAACpG,KAAK,CAACsG,KAAK,IAAI,CAAC;YACrC5C,YAAY,EAAE0C,QAAQ,CAACpG,KAAK,CAACI,OAAO,IAAI,CAAC;YACzCuD,aAAa,EAAEyC,QAAQ,CAACpG,KAAK,CAACQ,QAAQ,IAAI;UAC5C,CAAC,CAAC;UAEFoF,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;QACpD,CAAC,MAAM;UACLD,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEZ,QAAQ,CAACI,IAAI,CAAC;UAErDzB,QAAQ,CAAC;YACPP,iBAAiB,EAAE,CAAC;YACpBC,qBAAqB,EAAE,CAAC;YACxBC,UAAU,EAAE,CAAC;YACbC,YAAY,EAAE,CAAC;YACfC,aAAa,EAAE;UACjB,CAAC,CAAC;QACJ;QAEA9D,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOkG,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7ClG,UAAU,CAAC,KAAK,CAAC;QAGjBiE,QAAQ,CAAC;UACPP,iBAAiB,EAAE,CAAC;UACpBC,qBAAqB,EAAE,CAAC;UACxBC,UAAU,EAAE,CAAC;UACbC,YAAY,EAAE,CAAC;UACfC,aAAa,EAAE;QACjB,CAAC,CAAC;MACJ;IACF,CAAC;IAAA,gBAjDKO,UAAUA,CAAA;MAAA,OAAAiC,KAAA,CAAAF,KAAA,OAAAC,SAAA;IAAA;EAAA,GAiDf;EAGD,IAAM/B,WAAW;IAAA,IAAAqC,KAAA,GAAAtB,iBAAA,CAAG,aAAY;MAC9B,IAAI;QACFrF,UAAU,CAAC,IAAI,CAAC;QAEhB,IAAMsF,QAAQ,SAASpG,SAAS,CAACuF,GAAG,CAAC,eAAe,EAAE;UACpDc,OAAO,EAAE;YACPC,aAAa,cAAY7F,QAAQ,CAAC8F;UACpC;QACF,CAAC,CAAC;QAEF,IAAIH,QAAQ,CAACI,IAAI,IAAIJ,QAAQ,CAACI,IAAI,CAACC,OAAO,EAAE;UAC1C,IAAMiB,SAAS,GAAGtB,QAAQ,CAACI,IAAI,CAAC3E,MAAM,IAAI,EAAE;UAC5CC,SAAS,CAAC4F,SAAS,CAAC;UACpBb,OAAO,CAACC,GAAG,aAAWY,SAAS,CAACX,MAAM,YAAS,CAAC;QAClD,CAAC,MAAM;UACLF,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEZ,QAAQ,CAACI,IAAI,CAAC;UACtD7H,KAAK,CAACqG,KAAK,CAAC,OAAO,EAAE,uBAAuB,CAAC;QAC/C;QAEAlE,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOkG,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9ClG,UAAU,CAAC,KAAK,CAAC;QACjBnC,KAAK,CAACqG,KAAK,CAAC,OAAO,EAAE,yBAAyB,IAAIgC,KAAK,CAACC,OAAO,IAAI,eAAe,CAAC,CAAC;MACtF;IACF,CAAC;IAAA,gBAzBK7B,WAAWA,CAAA;MAAA,OAAAqC,KAAA,CAAAP,KAAA,OAAAC,SAAA;IAAA;EAAA,GAyBhB;EAGD,IAAMQ,gBAAgB;IAAA,IAAAC,KAAA,GAAAzB,iBAAA,CAAG,aAAY;MACnC,IAAI;QACFrF,UAAU,CAAC,IAAI,CAAC;QAEhB,IAAI,CAACoC,WAAW,CAACN,IAAI,IAAI,CAACM,WAAW,CAACL,KAAK,IAAI,CAACK,WAAW,CAACJ,QAAQ,EAAE;UACpEnE,KAAK,CAACqG,KAAK,CAAC,OAAO,EAAE,oCAAoC,CAAC;UAC1DlE,UAAU,CAAC,KAAK,CAAC;UACjB;QACF;QAGA,IAAM+G,YAAY,GAAG3E,WAAW,CAACN,IAAI,CAClCkF,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAAC,UAAAC,CAAC;UAAA,OAAIA,CAAC,CAAC,CAAC,CAAC;QAAA,EAAC,CACdC,IAAI,CAAC,EAAE,CAAC,CACRC,WAAW,CAAC,CAAC;QAChB,IAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAI,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;QACzD,IAAMC,UAAU,GAAGrF,WAAW,CAACF,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;QACjE,IAAMwF,OAAO,GAAMD,UAAU,SAAIV,YAAY,GAAGM,SAAW;QAG3D,IAAMM,gBAAgB,GAAAC,aAAA,CAAAA,aAAA,KACjBxF,WAAW;UACdsF,OAAO,EAAPA,OAAO;UACPrE,QAAQ,EAAE,IAAI;UACdwE,QAAQ,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QAAC,EACnC;QAEDhC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEgC,IAAI,CAACC,SAAS,CAACN,gBAAgB,CAAC,CAAC;QAG9E,IAAMlC,KAAK,GAAG9F,QAAQ,CAAC8F,KAAK;QAG5B,IAAMH,QAAQ,SAASpG,SAAS,CAAC0F,IAAI,CAAC,cAAc,EAAE+C,gBAAgB,EAAE;UACtEpC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,eAAe,cAAYE;UAC7B;QACF,CAAC,CAAC;QAEFM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEgC,IAAI,CAACC,SAAS,CAAC3C,QAAQ,CAACI,IAAI,CAAC,CAAC;QAE3D,IAAIJ,QAAQ,CAACI,IAAI,IAAIJ,QAAQ,CAACI,IAAI,CAACC,OAAO,EAAE;UAC1CI,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEV,QAAQ,CAACI,IAAI,CAACwC,IAAI,CAAC;UAErE,MAAM9D,UAAU,CAAC,CAAC;UAGlB/B,cAAc,CAAC;YACbP,IAAI,EAAE,EAAE;YACRC,KAAK,EAAE,EAAE;YACTC,QAAQ,EAAE,EAAE;YACZC,KAAK,EAAE,EAAE;YACTC,IAAI,EAAE;UACR,CAAC,CAAC;UACFV,eAAe,CAAC,KAAK,CAAC;UAEtB3D,KAAK,CAACqG,KAAK,CACT,SAAS,GACN9B,WAAW,CAACF,IAAI,KAAK,SAAS,GAAG,SAAS,GAAG,QAAQ,sCAAgCwF,OAC1F,CAAC;QACH,CAAC,MAAM;UAAA,IAAAS,cAAA;UACLpC,OAAO,CAACG,KAAK,CAAC,0CAA0C,EAAE8B,IAAI,CAACC,SAAS,CAAC3C,QAAQ,CAACI,IAAI,CAAC,CAAC;UACxF7H,KAAK,CAACqG,KAAK,CAAC,OAAO,EAAE,EAAAiE,cAAA,GAAA7C,QAAQ,CAACI,IAAI,qBAAbyC,cAAA,CAAehC,OAAO,KAAI,+BAA+B,CAAC;QACjF;QAEAnG,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOkG,KAAK,EAAE;QAAA,IAAAkC,eAAA,EAAAC,gBAAA,EAAAC,qBAAA;QACdvC,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDH,OAAO,CAACG,KAAK,CAAC,gBAAgB,EAAE,EAAAkC,eAAA,GAAAlC,KAAK,CAACZ,QAAQ,qBAAd8C,eAAA,CAAgB1C,IAAI,KAAIQ,KAAK,CAACC,OAAO,CAAC;QACtEnG,UAAU,CAAC,KAAK,CAAC;QACjBnC,KAAK,CAACqG,KAAK,CAAC,OAAO,EAAE,EAAAmE,gBAAA,GAAAnC,KAAK,CAACZ,QAAQ,sBAAAgD,qBAAA,GAAdD,gBAAA,CAAgB3C,IAAI,qBAApB4C,qBAAA,CAAsBnC,OAAO,KAAI,2DAA2D,CAAC;MACpH;IACF,CAAC;IAAA,gBA1EKU,gBAAgBA,CAAA;MAAA,OAAAC,KAAA,CAAAV,KAAA,OAAAC,SAAA;IAAA;EAAA,GA0ErB;EAGD,IAAMkC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,MAAM,EAAK;IACnC3K,KAAK,CAACqG,KAAK,CACT,gBAAgB,EAChB,4CAA4C,EAC5C,CACE;MACEuE,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAE;IACT,CAAC,EACD;MACED,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAE,aAAa;MACpBC,OAAO;QAAA,IAAAC,QAAA,GAAAvD,iBAAA,CAAE,aAAY;UACnB,IAAI;YACFrF,UAAU,CAAC,IAAI,CAAC;YAGhB,IAAMsF,QAAQ,SAASpG,SAAS,CAAC+F,MAAM,mBAAiBuD,MAAM,EAAI;cAChEjD,OAAO,EAAE;gBACPC,aAAa,cAAY7F,QAAQ,CAAC8F;cACpC;YACF,CAAC,CAAC;YAEF,IAAIH,QAAQ,CAACI,IAAI,IAAIJ,QAAQ,CAACI,IAAI,CAACC,OAAO,EAAE;cAC1CI,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEV,QAAQ,CAACI,IAAI,CAAC;cAExD,MAAMtB,UAAU,CAAC,CAAC;cAClBvG,KAAK,CAACqG,KAAK,CAAC,SAAS,EAAE,2BAA2B,CAAC;YACrD,CAAC,MAAM;cAAA,IAAA2E,eAAA;cACL9C,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEZ,QAAQ,CAACI,IAAI,CAAC;cACtD7H,KAAK,CAACqG,KAAK,CAAC,OAAO,EAAE,EAAA2E,eAAA,GAAAvD,QAAQ,CAACI,IAAI,qBAAbmD,eAAA,CAAe1C,OAAO,KAAI,uBAAuB,CAAC;YACzE;YAEAnG,UAAU,CAAC,KAAK,CAAC;UACnB,CAAC,CAAC,OAAOkG,KAAK,EAAE;YAAA,IAAA4C,gBAAA,EAAAC,qBAAA;YACdhD,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;YAC5ClG,UAAU,CAAC,KAAK,CAAC;YACjBnC,KAAK,CAACqG,KAAK,CAAC,OAAO,EAAE,EAAA4E,gBAAA,GAAA5C,KAAK,CAACZ,QAAQ,sBAAAyD,qBAAA,GAAdD,gBAAA,CAAgBpD,IAAI,qBAApBqD,qBAAA,CAAsB5C,OAAO,KAAI,uBAAuB,CAAC;UAChF;QACF,CAAC;QAAA,SA3BDwC,OAAOA,CAAA;UAAA,OAAAC,QAAA,CAAAxC,KAAA,OAAAC,SAAA;QAAA;QAAA,OAAPsC,OAAO;MAAA;IA4BT,CAAC,CAEL,CAAC;EACH,CAAC;EAGDnL,SAAS,CAAC,YAAM;IACd,IAAI0F,cAAc,EAAE;MAClB,IAAM8F,UAAU,GAAG7I,KAAK,CAAC8I,IAAI,CAAC,UAAAf,IAAI;QAAA,OAAIA,IAAI,CAACgB,GAAG,KAAKhG,cAAc;MAAA,EAAC;MAClE,IAAI8F,UAAU,EAAE;QACdxF,eAAe,CAAC;UACd1B,IAAI,EAAEkH,UAAU,CAAClH,IAAI,IAAI,EAAE;UAC3BC,KAAK,EAAEiH,UAAU,CAACjH,KAAK,IAAI,EAAE;UAC7BE,KAAK,EAAE+G,UAAU,CAAC/G,KAAK,IAAI,EAAE;UAC7BC,IAAI,EAAE8G,UAAU,CAAC9G,IAAI,IAAI,QAAQ;UACjCmB,QAAQ,EAAE2F,UAAU,CAAC3F,QAAQ,KAAK8F,SAAS,GAAGH,UAAU,CAAC3F,QAAQ,GAAG;QACtE,CAAC,CAAC;MACJ;IACF;EACF,CAAC,EAAE,CAACH,cAAc,CAAC,CAAC;EAGpB,IAAMkG,gBAAgB;IAAA,IAAAC,KAAA,GAAAhE,iBAAA,CAAG,aAAY;MACnC,IAAI;QACFrF,UAAU,CAAC,IAAI,CAAC;QAGhB,IAAI,CAACuD,YAAY,CAACzB,IAAI,IAAI,CAACyB,YAAY,CAACxB,KAAK,EAAE;UAC7ClE,KAAK,CAACqG,KAAK,CAAC,OAAO,EAAE,oCAAoC,CAAC;UAC1DlE,UAAU,CAAC,KAAK,CAAC;UACjB;QACF;QAEA+F,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEgC,IAAI,CAACC,SAAS,CAAC1E,YAAY,CAAC,CAAC;QAGrE,IAAMkC,KAAK,GAAG9F,QAAQ,CAAC8F,KAAK;QAG5B,IAAMH,QAAQ,SAASpG,SAAS,CAAC6F,GAAG,mBAAiB7B,cAAc,EAAIK,YAAY,EAAE;UACnFgC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,eAAe,cAAYE;UAC7B;QACF,CAAC,CAAC;QAEF,IAAIH,QAAQ,CAACI,IAAI,IAAIJ,QAAQ,CAACI,IAAI,CAACC,OAAO,EAAE;UAC1CI,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEV,QAAQ,CAACI,IAAI,CAACwC,IAAI,CAAC;UAE7D,MAAM9D,UAAU,CAAC,CAAC;UAGlBjB,iBAAiB,CAAC,IAAI,CAAC;UAEvBtF,KAAK,CAACqG,KAAK,CAAC,SAAS,EAAE,2BAA2B,CAAC;QACrD,CAAC,MAAM;UAAA,IAAAoF,eAAA;UACLvD,OAAO,CAACG,KAAK,CAAC,kCAAkC,EAAE8B,IAAI,CAACC,SAAS,CAAC3C,QAAQ,CAACI,IAAI,CAAC,CAAC;UAChF7H,KAAK,CAACqG,KAAK,CAAC,OAAO,EAAE,EAAAoF,eAAA,GAAAhE,QAAQ,CAACI,IAAI,qBAAb4D,eAAA,CAAenD,OAAO,KAAI,uBAAuB,CAAC;QACzE;QAEAnG,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOkG,KAAK,EAAE;QAAA,IAAAqD,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;QACd1D,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CH,OAAO,CAACG,KAAK,CAAC,gBAAgB,EAAE,EAAAqD,gBAAA,GAAArD,KAAK,CAACZ,QAAQ,qBAAdiE,gBAAA,CAAgB7D,IAAI,KAAIQ,KAAK,CAACC,OAAO,CAAC;QACtEnG,UAAU,CAAC,KAAK,CAAC;QACjBnC,KAAK,CAACqG,KAAK,CAAC,OAAO,EAAE,EAAAsF,gBAAA,GAAAtD,KAAK,CAACZ,QAAQ,sBAAAmE,qBAAA,GAAdD,gBAAA,CAAgB9D,IAAI,qBAApB+D,qBAAA,CAAsBtD,OAAO,KAAI,mDAAmD,CAAC;MAC5G;IACF,CAAC;IAAA,gBA7CKiD,gBAAgBA,CAAA;MAAA,OAAAC,KAAA,CAAAjD,KAAA,OAAAC,SAAA;IAAA;EAAA,GA6CrB;EAGD,IAAMqD,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,KAAA;IAAA,IAAMC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IAAA,OAC5BxK,IAAA,CAACnB,IAAI;MAACyK,KAAK,EAAEmB,MAAM,CAACC,QAAS;MAAAC,QAAA,EAC3BzK,KAAA,CAACrB,IAAI,CAAC+L,OAAO;QAAAD,QAAA,GACXzK,KAAA,CAAC5B,IAAI;UAACgL,KAAK,EAAEmB,MAAM,CAACI,cAAe;UAAAF,QAAA,GACjC3K,IAAA,CAACd,MAAM,CAACN,IAAI;YACVkM,IAAI,EAAE,EAAG;YACTC,KAAK,EAAEP,IAAI,CAAC9H,IAAI,CAACkF,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,UAAAC,CAAC;cAAA,OAAIA,CAAC,CAAC,CAAC,CAAC;YAAA,EAAC,CAACC,IAAI,CAAC,EAAE,CAAE;YACpDiD,eAAe,EAAC;UAAS,CAC1B,CAAC,EACF9K,KAAA,CAAC5B,IAAI;YAACgL,KAAK,EAAEmB,MAAM,CAAClK,QAAS;YAAAoK,QAAA,GAC3B3K,IAAA,CAACjB,KAAK;cAAA4L,QAAA,EAAEH,IAAI,CAAC9H;YAAI,CAAQ,CAAC,EAC1BxC,KAAA,CAAC5B,IAAI;cAACgL,KAAK,EAAEmB,MAAM,CAACQ,cAAe;cAAAN,QAAA,GACjC3K,IAAA,CAAChB,SAAS;gBAACsK,KAAK,EAAEmB,MAAM,CAACS,SAAU;gBAAAP,QAAA,EAAEH,IAAI,CAAC7H;cAAK,CAAY,CAAC,EAC3D6H,IAAI,CAAC3H,KAAK,IAAI3C,KAAA,CAAClB,SAAS;gBAACsK,KAAK,EAAEmB,MAAM,CAACU,SAAU;gBAAAR,QAAA,GAAC,SAAE,EAACH,IAAI,CAAC3H,KAAK;cAAA,CAAY,CAAC;YAAA,CACzE,CAAC,EACN2H,IAAI,CAAClC,OAAO,IACXpI,KAAA,CAAC5B,IAAI;cAACgL,KAAK,EAAEmB,MAAM,CAACW,gBAAiB;cAAAT,QAAA,GACnCzK,KAAA,CAAClB,SAAS;gBAACsK,KAAK,EAAEmB,MAAM,CAACnC,OAAQ;gBAAAqC,QAAA,GAAC,MAAI,EAACH,IAAI,CAAClC,OAAO;cAAA,CAAY,CAAC,EAChEtI,IAAA,CAACX,IAAI;gBACHgM,IAAI,EAAC,MAAM;gBACX/B,KAAK,EAAE,CAACmB,MAAM,CAACa,UAAU,EAAE;kBAACN,eAAe,EAAER,IAAI,CAACvG,QAAQ,GAAG,SAAS,GAAG;gBAAS,CAAC,CAAE;gBAAA0G,QAAA,EAEpFH,IAAI,CAACvG,QAAQ,GAAG,QAAQ,GAAG;cAAU,CAClC,CAAC;YAAA,CACH,CACP;UAAA,CACG,CAAC,EACPjE,IAAA,CAACX,IAAI;YAACgM,IAAI,EAAC,UAAU;YAAC/B,KAAK,EAAEmB,MAAM,CAACc,QAAS;YAAAZ,QAAA,EAC1CH,IAAI,CAAC1H,IAAI,CAAC0I,MAAM,CAAC,CAAC,CAAC,CAACxD,WAAW,CAAC,CAAC,GAAGwC,IAAI,CAAC1H,IAAI,CAAC2I,KAAK,CAAC,CAAC;UAAC,CACnD,CAAC;QAAA,CACH,CAAC,EACPzL,IAAA,CAACP,OAAO;UAAC6J,KAAK,EAAE;YAAEoC,cAAc,EAAE;UAAG;QAAE,CAAE,CAAC,EAC1CxL,KAAA,CAAC5B,IAAI;UAACgL,KAAK,EAAEmB,MAAM,CAACkB,eAAgB;UAAAhB,QAAA,GAClC3K,IAAA,CAAClB,MAAM;YACLuM,IAAI,EAAC,UAAU;YACfO,OAAO;YACPC,IAAI,EAAC,QAAQ;YACbtC,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQxF,iBAAiB,CAACyG,IAAI,CAACV,GAAG,CAAC;YAAA,CAAC;YAAAa,QAAA,EAC5C;UAED,CAAQ,CAAC,EACT3K,IAAA,CAAClB,MAAM;YACLuM,IAAI,EAAC,UAAU;YACfO,OAAO;YACPC,IAAI,EAAC,QAAQ;YACbC,SAAS,EAAC,SAAS;YACnBvC,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQJ,gBAAgB,CAACqB,IAAI,CAACV,GAAG,CAAC;YAAA,CAAC;YAAAa,QAAA,EAC3C;UAED,CAAQ,CAAC;QAAA,CACL,CAAC;MAAA,CACK;IAAC,CACX,CAAC;EAAA,CACR;EAGD,IAAMoB,iBAAiB;IAAA,IAAAC,KAAA,GAAA/F,iBAAA,CAAG,aAAY;MACpC,IAAI;QACFrF,UAAU,CAAC,IAAI,CAAC;QAGhB,IAAI,CAAC8C,YAAY,CAAChB,IAAI,IAAI,CAACgB,YAAY,CAACP,OAAO,CAACC,MAAM,IAAI,CAACM,YAAY,CAACP,OAAO,CAACE,IAAI,IAAI,CAACK,YAAY,CAACb,KAAK,EAAE;UAC3GpE,KAAK,CAACqG,KAAK,CAAC,OAAO,EAAE,2DAA2D,CAAC;UACjFlE,UAAU,CAAC,KAAK,CAAC;UACjB;QACF;QAGA,IAAMqL,SAAS,GAAAzD,aAAA,CAAAA,aAAA,KACV9E,YAAY;UACfwI,WAAW,EAAE,CAAC,OAAO,EAAE,OAAO;QAAC,EAChC;QAEDvF,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEgC,IAAI,CAACC,SAAS,CAACoD,SAAS,CAAC,CAAC;QAEvE,IAAM/F,QAAQ,SAASpG,SAAS,CAAC0F,IAAI,CAAC,eAAe,EAAEyG,SAAS,EAAE;UAChE9F,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,eAAe,cAAY5F,QAAQ,CAAC8F;UACtC;QACF,CAAC,CAAC;QAEF,IAAIH,QAAQ,CAACI,IAAI,IAAIJ,QAAQ,CAACI,IAAI,CAACC,OAAO,EAAE;UAC1CI,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEV,QAAQ,CAACI,IAAI,CAAC6F,KAAK,CAAC;UAC/D,MAAMjH,WAAW,CAAC,CAAC;UAGnBvB,eAAe,CAAC;YACdjB,IAAI,EAAE,EAAE;YACRS,OAAO,EAAE;cACPC,MAAM,EAAE,EAAE;cACVC,IAAI,EAAE,EAAE;cACRC,KAAK,EAAE,EAAE;cACTC,UAAU,EAAE;YACd,CAAC;YACDV,KAAK,EAAE,EAAE;YACTF,KAAK,EAAE,EAAE;YACTa,WAAW,EAAE;UACf,CAAC,CAAC;UACFhB,eAAe,CAAC,KAAK,CAAC;UAEtB/D,KAAK,CAACqG,KAAK,CAAC,SAAS,EAAE,0BAA0B,CAAC;QACpD,CAAC,MAAM;UAAA,IAAAsH,eAAA;UACLzF,OAAO,CAACG,KAAK,CAAC,mCAAmC,EAAE8B,IAAI,CAACC,SAAS,CAAC3C,QAAQ,CAACI,IAAI,CAAC,CAAC;UACjF7H,KAAK,CAACqG,KAAK,CAAC,OAAO,EAAE,EAAAsH,eAAA,GAAAlG,QAAQ,CAACI,IAAI,qBAAb8F,eAAA,CAAerF,OAAO,KAAI,wBAAwB,CAAC;QAC1E;QAEAnG,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOkG,KAAK,EAAE;QAAA,IAAAuF,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;QACd5F,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CH,OAAO,CAACG,KAAK,CAAC,gBAAgB,EAAE,EAAAuF,gBAAA,GAAAvF,KAAK,CAACZ,QAAQ,qBAAdmG,gBAAA,CAAgB/F,IAAI,KAAIQ,KAAK,CAACC,OAAO,CAAC;QACtEnG,UAAU,CAAC,KAAK,CAAC;QACjBnC,KAAK,CAACqG,KAAK,CAAC,OAAO,EAAE,EAAAwH,gBAAA,GAAAxF,KAAK,CAACZ,QAAQ,sBAAAqG,qBAAA,GAAdD,gBAAA,CAAgBhG,IAAI,qBAApBiG,qBAAA,CAAsBxF,OAAO,KAAI,oDAAoD,CAAC;MAC7G;IACF,CAAC;IAAA,gBA1DKgF,iBAAiBA,CAAA;MAAA,OAAAC,KAAA,CAAAhF,KAAA,OAAAC,SAAA;IAAA;EAAA,GA0DtB;EAGD,IAAMuF,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,OAAO,EAAK;IACrChO,KAAK,CAACqG,KAAK,CACT,gBAAgB,EAChB,6CAA6C,EAC7C,CACE;MACEuE,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAE;IACT,CAAC,EACD;MACED,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAE,aAAa;MACpBC,OAAO;QAAA,IAAAmD,SAAA,GAAAzG,iBAAA,CAAE,aAAY;UACnB,IAAI;YACFrF,UAAU,CAAC,IAAI,CAAC;YAEhB,IAAMsF,QAAQ,SAASpG,SAAS,CAAC+F,MAAM,oBAAkB4G,OAAO,EAAI;cAClEtG,OAAO,EAAE;gBACPC,aAAa,cAAY7F,QAAQ,CAAC8F;cACpC;YACF,CAAC,CAAC;YAEF,IAAIH,QAAQ,CAACI,IAAI,IAAIJ,QAAQ,CAACI,IAAI,CAACC,OAAO,EAAE;cAC1CI,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEV,QAAQ,CAACI,IAAI,CAAC;cACzD,MAAMpB,WAAW,CAAC,CAAC;cACnBzG,KAAK,CAACqG,KAAK,CAAC,SAAS,EAAE,4BAA4B,CAAC;YACtD,CAAC,MAAM;cAAA,IAAA6H,eAAA;cACLhG,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEZ,QAAQ,CAACI,IAAI,CAAC;cACvD7H,KAAK,CAACqG,KAAK,CAAC,OAAO,EAAE,EAAA6H,eAAA,GAAAzG,QAAQ,CAACI,IAAI,qBAAbqG,eAAA,CAAe5F,OAAO,KAAI,wBAAwB,CAAC;YAC1E;YAEAnG,UAAU,CAAC,KAAK,CAAC;UACnB,CAAC,CAAC,OAAOkG,KAAK,EAAE;YAAA,IAAA8F,gBAAA,EAAAC,qBAAA;YACdlG,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;YAC7ClG,UAAU,CAAC,KAAK,CAAC;YACjBnC,KAAK,CAACqG,KAAK,CAAC,OAAO,EAAE,EAAA8H,gBAAA,GAAA9F,KAAK,CAACZ,QAAQ,sBAAA2G,qBAAA,GAAdD,gBAAA,CAAgBtG,IAAI,qBAApBuG,qBAAA,CAAsB9F,OAAO,KAAI,wBAAwB,CAAC;UACjF;QACF,CAAC;QAAA,SAzBDwC,OAAOA,CAAA;UAAA,OAAAmD,SAAA,CAAA1F,KAAA,OAAAC,SAAA;QAAA;QAAA,OAAPsC,OAAO;MAAA;IA0BT,CAAC,CAEL,CAAC;EACH,CAAC;EAGD,IAAMuD,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,KAAA;IAAA,IAAMvC,IAAI,GAAAuC,KAAA,CAAJvC,IAAI;IAAA,OAC7BxK,IAAA,CAACnB,IAAI;MAACyK,KAAK,EAAEmB,MAAM,CAACuC,SAAU;MAAArC,QAAA,EAC5BzK,KAAA,CAACrB,IAAI,CAAC+L,OAAO;QAAAD,QAAA,GACXzK,KAAA,CAAC5B,IAAI;UAACgL,KAAK,EAAEmB,MAAM,CAACwC,eAAgB;UAAAtC,QAAA,GAClC3K,IAAA,CAACd,MAAM,CAACgO,IAAI;YACVpC,IAAI,EAAE,EAAG;YACTe,IAAI,EAAC,OAAO;YACZb,eAAe,EAAC;UAAS,CAC1B,CAAC,EACF9K,KAAA,CAAC5B,IAAI;YAACgL,KAAK,EAAEmB,MAAM,CAAC0C,SAAU;YAAAxC,QAAA,GAC5B3K,IAAA,CAACjB,KAAK;cAAA4L,QAAA,EAAEH,IAAI,CAAC9H;YAAI,CAAQ,CAAC,EAC1BxC,KAAA,CAAClB,SAAS;cAACsK,KAAK,EAAEmB,MAAM,CAAC2C,YAAa;cAAAzC,QAAA,GACnCH,IAAI,CAACrH,OAAO,CAACC,MAAM,EAAC,IAAE,EAACoH,IAAI,CAACrH,OAAO,CAACE,IAAI;YAAA,CAChC,CAAC,EACZrD,IAAA,CAAChB,SAAS;cAACsK,KAAK,EAAEmB,MAAM,CAAC4C,UAAW;cAAA1C,QAAA,EAAEH,IAAI,CAAC3H;YAAK,CAAY,CAAC;UAAA,CACzD,CAAC,EACP7C,IAAA,CAACX,IAAI;YACHgM,IAAI,EAAC,MAAM;YACX/B,KAAK,EAAE,CAACmB,MAAM,CAACa,UAAU,EAAE;cAACN,eAAe,EAAER,IAAI,CAACvG,QAAQ,GAAG,SAAS,GAAG;YAAS,CAAC,CAAE;YAAA0G,QAAA,EAEpFH,IAAI,CAACvG,QAAQ,GAAG,QAAQ,GAAG;UAAU,CAClC,CAAC;QAAA,CACH,CAAC,EACPjE,IAAA,CAACP,OAAO;UAAC6J,KAAK,EAAE;YAAEoC,cAAc,EAAE;UAAG;QAAE,CAAE,CAAC,EAC1CxL,KAAA,CAAC5B,IAAI;UAACgL,KAAK,EAAEmB,MAAM,CAAC6C,gBAAiB;UAAA3C,QAAA,GACnC3K,IAAA,CAAClB,MAAM;YACLuM,IAAI,EAAC,UAAU;YACfO,OAAO;YACPC,IAAI,EAAC,QAAQ;YACbtC,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQlJ,UAAU,CAACkN,QAAQ,CAAC,cAAc,EAAE;gBAAEd,OAAO,EAAEjC,IAAI,CAACV;cAAI,CAAC,CAAC;YAAA,CAAC;YAAAa,QAAA,EAC3E;UAED,CAAQ,CAAC,EACT3K,IAAA,CAAClB,MAAM;YACLuM,IAAI,EAAC,UAAU;YACfO,OAAO;YACPC,IAAI,EAAC,eAAe;YACpBtC,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQlJ,UAAU,CAACkN,QAAQ,CAAC,YAAY,EAAE;gBAAEd,OAAO,EAAEjC,IAAI,CAACV;cAAI,CAAC,CAAC;YAAA,CAAC;YAAAa,QAAA,EACzE;UAED,CAAQ,CAAC,EACT3K,IAAA,CAAClB,MAAM;YACLuM,IAAI,EAAC,UAAU;YACfO,OAAO;YACPC,IAAI,EAAC,QAAQ;YACbC,SAAS,EAAC,SAAS;YACnBvC,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQiD,iBAAiB,CAAChC,IAAI,CAACV,GAAG,CAAC;YAAA,CAAC;YAAAa,QAAA,EAC5C;UAED,CAAQ,CAAC;QAAA,CACL,CAAC;MAAA,CACK;IAAC,CACX,CAAC;EAAA,CACR;EAED,IAAIhK,OAAO,IAAII,KAAK,CAAC8F,MAAM,KAAK,CAAC,EAAE;IACjC,OACE3G,KAAA,CAAC5B,IAAI;MAACgL,KAAK,EAAEmB,MAAM,CAAC+C,iBAAkB;MAAA7C,QAAA,GACpC3K,IAAA,CAACb,iBAAiB;QAAC2L,IAAI,EAAC,OAAO;QAAC2C,KAAK,EAAC;MAAS,CAAE,CAAC,EAClDzN,IAAA,CAACpB,IAAI;QAAC0K,KAAK,EAAE;UAAEoE,SAAS,EAAE;QAAG,CAAE;QAAA/C,QAAA,EAAC;MAAoB,CAAM,CAAC;IAAA,CACvD,CAAC;EAEX;EAEA,OACEzK,KAAA,CAAC5B,IAAI;IAACgL,KAAK,EAAEmB,MAAM,CAACkD,SAAU;IAAAhD,QAAA,GAE5BzK,KAAA,CAAC5B,IAAI;MAACgL,KAAK,EAAEmB,MAAM,CAACmD,MAAO;MAAAjD,QAAA,GACzB3K,IAAA,CAACpB,IAAI;QAAC0K,KAAK,EAAEmB,MAAM,CAACoD,WAAY;QAAAlD,QAAA,EAAC;MAAe,CAAM,CAAC,EACvDzK,KAAA,CAACtB,IAAI;QAAC0K,KAAK,EAAEmB,MAAM,CAACqD,cAAe;QAAAnD,QAAA,GAAC,WAAS,EAACpK,QAAQ,oBAARA,QAAQ,CAAEmC,IAAI;MAAA,CAAO,CAAC;IAAA,CAChE,CAAC,EAEPxC,KAAA,CAAC1B,UAAU;MAAC8K,KAAK,EAAEmB,MAAM,CAACsD,OAAQ;MAAApD,QAAA,GAEhCzK,KAAA,CAAC5B,IAAI;QAACgL,KAAK,EAAEmB,MAAM,CAACuD,cAAe;QAAArD,QAAA,GACjC3K,IAAA,CAACnB,IAAI;UAACyK,KAAK,EAAE,CAACmB,MAAM,CAACwD,SAAS,EAAE;YAAEjD,eAAe,EAAE;UAAU,CAAC,CAAE;UAAAL,QAAA,EAC9DzK,KAAA,CAACrB,IAAI,CAAC+L,OAAO;YAAAD,QAAA,GACX3K,IAAA,CAACjB,KAAK;cAACuK,KAAK,EAAEmB,MAAM,CAACyD,UAAW;cAAAvD,QAAA,EAAE/F,KAAK,CAACN;YAAiB,CAAQ,CAAC,EAClEtE,IAAA,CAAChB,SAAS;cAAA2L,QAAA,EAAC;YAAkB,CAAW,CAAC;UAAA,CAC7B;QAAC,CACX,CAAC,EAEP3K,IAAA,CAACnB,IAAI;UAACyK,KAAK,EAAE,CAACmB,MAAM,CAACwD,SAAS,EAAE;YAAEjD,eAAe,EAAE;UAAU,CAAC,CAAE;UAAAL,QAAA,EAC9DzK,KAAA,CAACrB,IAAI,CAAC+L,OAAO;YAAAD,QAAA,GACX3K,IAAA,CAACjB,KAAK;cAACuK,KAAK,EAAEmB,MAAM,CAACyD,UAAW;cAAAvD,QAAA,EAAE/F,KAAK,CAACJ;YAAU,CAAQ,CAAC,EAC3DxE,IAAA,CAAChB,SAAS;cAAA2L,QAAA,EAAC;YAAS,CAAW,CAAC;UAAA,CACpB;QAAC,CACX,CAAC,EAEP3K,IAAA,CAACnB,IAAI;UAACyK,KAAK,EAAE,CAACmB,MAAM,CAACwD,SAAS,EAAE;YAAEjD,eAAe,EAAE;UAAU,CAAC,CAAE;UAAAL,QAAA,EAC9DzK,KAAA,CAACrB,IAAI,CAAC+L,OAAO;YAAAD,QAAA,GACX3K,IAAA,CAACjB,KAAK;cAACuK,KAAK,EAAEmB,MAAM,CAACyD,UAAW;cAAAvD,QAAA,EAAE/F,KAAK,CAACH;YAAY,CAAQ,CAAC,EAC7DzE,IAAA,CAAChB,SAAS;cAAA2L,QAAA,EAAC;YAAO,CAAW,CAAC;UAAA,CAClB;QAAC,CACX,CAAC;MAAA,CACH,CAAC,EAGPzK,KAAA,CAAC5B,IAAI;QAACgL,KAAK,EAAEmB,MAAM,CAAC0D,OAAQ;QAAAxD,QAAA,GAC1BzK,KAAA,CAAC5B,IAAI;UAACgL,KAAK,EAAEmB,MAAM,CAAC2D,aAAc;UAAAzD,QAAA,GAChC3K,IAAA,CAACpB,IAAI;YAAC0K,KAAK,EAAEmB,MAAM,CAAC4D,YAAa;YAAA1D,QAAA,EAAC;UAAgB,CAAM,CAAC,EACzD3K,IAAA,CAAClB,MAAM;YACLuM,IAAI,EAAC,WAAW;YAChBQ,IAAI,EAAC,MAAM;YACXtC,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQ/G,eAAe,CAAC,IAAI,CAAC;YAAA,CAAC;YAAAmI,QAAA,EACtC;UAED,CAAQ,CAAC;QAAA,CACL,CAAC,EAEP3K,IAAA,CAACrB,QAAQ;UACP2H,IAAI,EAAE3E,MAAO;UACb2M,UAAU,EAAExB,eAAgB;UAC5ByB,YAAY,EAAE,SAAdA,YAAYA,CAAE/D,IAAI;YAAA,OAAIA,IAAI,CAACV,GAAG;UAAA,CAAC;UAC/B0E,qBAAqB,EAAE;YAAEC,aAAa,EAAE;UAAG,CAAE;UAC7CC,kBAAkB,EAChB1O,IAAA,CAAC1B,IAAI;YAACgL,KAAK,EAAEmB,MAAM,CAACkE,cAAe;YAAAhE,QAAA,EACjC3K,IAAA,CAACpB,IAAI;cAAC0K,KAAK,EAAEmB,MAAM,CAACmE,SAAU;cAAAjE,QAAA,EAAC;YAAe,CAAM;UAAC,CACjD;QACP,CACF,CAAC;MAAA,CACE,CAAC,EAGPzK,KAAA,CAAC5B,IAAI;QAACgL,KAAK,EAAEmB,MAAM,CAAC0D,OAAQ;QAAAxD,QAAA,GAC1BzK,KAAA,CAAC5B,IAAI;UAACgL,KAAK,EAAEmB,MAAM,CAAC2D,aAAc;UAAAzD,QAAA,GAChC3K,IAAA,CAACpB,IAAI;YAAC0K,KAAK,EAAEmB,MAAM,CAAC4D,YAAa;YAAA1D,QAAA,EAAC;UAAgB,CAAM,CAAC,EACzD3K,IAAA,CAAClB,MAAM;YACLuM,IAAI,EAAC,WAAW;YAChBQ,IAAI,EAAC,MAAM;YACXtC,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQnH,eAAe,CAAC,IAAI,CAAC;YAAA,CAAC;YAAAuI,QAAA,EACtC;UAED,CAAQ,CAAC;QAAA,CACL,CAAC,EAEP3K,IAAA,CAACZ,SAAS;UACRyP,WAAW,EAAC,iBAAiB;UAC7BC,YAAY,EAAE9M,cAAe;UAC7B+M,KAAK,EAAEhN,WAAY;UACnBuH,KAAK,EAAEmB,MAAM,CAACuE;QAAU,CACzB,CAAC,EAEF9O,KAAA,CAACtB,IAAI;UAAC0K,KAAK,EAAEmB,MAAM,CAACwE,QAAS;UAAAtE,QAAA,GAAC,WAAS,EAACxJ,OAAO,CAAC0F,MAAM,EAAC,GAAC;QAAA,CAAM,CAAC,EAC/D7G,IAAA,CAACrB,QAAQ;UACP2H,IAAI,EAAEnF,OAAO,CAACsF,MAAM,CAAC,UAAAyI,CAAC;YAAA,OACpBA,CAAC,CAACxM,IAAI,CAACyM,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACrN,WAAW,CAACoN,WAAW,CAAC,CAAC,CAAC,IACxDD,CAAC,CAACvM,KAAK,CAACwM,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACrN,WAAW,CAACoN,WAAW,CAAC,CAAC,CAAC;UAAA,CAC3D,CAAE;UACFb,UAAU,EAAEhE,cAAe;UAC3BiE,YAAY,EAAE,SAAdA,YAAYA,CAAE/D,IAAI;YAAA,OAAIA,IAAI,CAACV,GAAG;UAAA,CAAC;UAC/B0E,qBAAqB,EAAE;YAAEC,aAAa,EAAE;UAAG,CAAE;UAC7CC,kBAAkB,EAChB1O,IAAA,CAAC1B,IAAI;YAACgL,KAAK,EAAEmB,MAAM,CAACkE,cAAe;YAAAhE,QAAA,EACjC3K,IAAA,CAACpB,IAAI;cAAC0K,KAAK,EAAEmB,MAAM,CAACmE,SAAU;cAAAjE,QAAA,EAAC;YAAgB,CAAM;UAAC,CAClD;QACP,CACF,CAAC,EAEFzK,KAAA,CAACtB,IAAI;UAAC0K,KAAK,EAAEmB,MAAM,CAACwE,QAAS;UAAAtE,QAAA,GAAC,YAAU,EAACpJ,QAAQ,CAACsF,MAAM,EAAC,GAAC;QAAA,CAAM,CAAC,EACjE7G,IAAA,CAACrB,QAAQ;UACP2H,IAAI,EAAE/E,QAAQ,CAACkF,MAAM,CAAC,UAAA4I,CAAC;YAAA,OACrBA,CAAC,CAAC3M,IAAI,CAACyM,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACrN,WAAW,CAACoN,WAAW,CAAC,CAAC,CAAC,IACxDE,CAAC,CAAC1M,KAAK,CAACwM,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACrN,WAAW,CAACoN,WAAW,CAAC,CAAC,CAAC;UAAA,CAC3D,CAAE;UACFb,UAAU,EAAEhE,cAAe;UAC3BiE,YAAY,EAAE,SAAdA,YAAYA,CAAE/D,IAAI;YAAA,OAAIA,IAAI,CAACV,GAAG;UAAA,CAAC;UAC/B0E,qBAAqB,EAAE;YAAEC,aAAa,EAAE;UAAG,CAAE;UAC7CC,kBAAkB,EAChB1O,IAAA,CAAC1B,IAAI;YAACgL,KAAK,EAAEmB,MAAM,CAACkE,cAAe;YAAAhE,QAAA,EACjC3K,IAAA,CAACpB,IAAI;cAAC0K,KAAK,EAAEmB,MAAM,CAACmE,SAAU;cAAAjE,QAAA,EAAC;YAAiB,CAAM;UAAC,CACnD;QACP,CACF,CAAC;MAAA,CACE,CAAC;IAAA,CACG,CAAC,EAGb3K,IAAA,CAACT,MAAM;MAAAoL,QAAA,EACLzK,KAAA,CAACZ,KAAK;QACJgQ,OAAO,EAAEnN,YAAa;QACtBoN,SAAS,EAAE,SAAXA,SAASA,CAAA;UAAA,OAAQnN,eAAe,CAAC,KAAK,CAAC;QAAA,CAAC;QACxCoM,qBAAqB,EAAE/D,MAAM,CAAC+E,YAAa;QAAA7E,QAAA,GAE3C3K,IAAA,CAACjB,KAAK;UAACuK,KAAK,EAAEmB,MAAM,CAACgF,UAAW;UAAA9E,QAAA,EAAC;QAAoB,CAAO,CAAC,EAE7D3K,IAAA,CAACR,SAAS;UACRuL,KAAK,EAAC,WAAW;UACjBgE,KAAK,EAAE/L,WAAW,CAACN,IAAK;UACxBoM,YAAY,EAAE,SAAdA,YAAYA,CAAEzF,IAAI,EAAI;YACpBpG,cAAc,CAAAuF,aAAA,CAAAA,aAAA,KAAKxF,WAAW;cAAEN,IAAI,EAAE2G;YAAI,EAAC,CAAC;YAG5C,IAAIA,IAAI,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC+F,QAAQ,CAACpM,WAAW,CAACF,IAAI,CAAC,EAAE;cAC5D,IAAM6E,YAAY,GAAG0B,IAAI,CACtBzB,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAAC,UAAAC,CAAC;gBAAA,OAAIA,CAAC,CAAC,CAAC,CAAC;cAAA,EAAC,CACdC,IAAI,CAAC,EAAE,CAAC,CACRC,WAAW,CAAC,CAAC;cAChB,IAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAI,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;cACzD,IAAMC,UAAU,GAAGrF,WAAW,CAACF,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;cACjE,IAAMwF,OAAO,GAAMD,UAAU,SAAIV,YAAY,GAAGM,SAAW;cAC3DtB,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE0B,OAAO,CAAC;YAClD;UACF,CAAE;UACFgB,KAAK,EAAEmB,MAAM,CAACiF,KAAM;UACpBrE,IAAI,EAAC;QAAU,CAChB,CAAC,EAEFrL,IAAA,CAACR,SAAS;UACRuL,KAAK,EAAC,OAAO;UACbgE,KAAK,EAAE/L,WAAW,CAACL,KAAM;UACzBmM,YAAY,EAAE,SAAdA,YAAYA,CAAEzF,IAAI;YAAA,OAAIpG,cAAc,CAAAuF,aAAA,CAAAA,aAAA,KAAKxF,WAAW;cAAEL,KAAK,EAAE0G;YAAI,EAAC,CAAC;UAAA,CAAC;UACpEC,KAAK,EAAEmB,MAAM,CAACiF,KAAM;UACpBrE,IAAI,EAAC,UAAU;UACfsE,YAAY,EAAC,eAAe;UAC5BC,cAAc,EAAC;QAAM,CACtB,CAAC,EAEF5P,IAAA,CAACR,SAAS;UACRuL,KAAK,EAAC,UAAU;UAChBgE,KAAK,EAAE/L,WAAW,CAACJ,QAAS;UAC5BkM,YAAY,EAAE,SAAdA,YAAYA,CAAEzF,IAAI;YAAA,OAAIpG,cAAc,CAAAuF,aAAA,CAAAA,aAAA,KAAKxF,WAAW;cAAEJ,QAAQ,EAAEyG;YAAI,EAAC,CAAC;UAAA,CAAC;UACvEC,KAAK,EAAEmB,MAAM,CAACiF,KAAM;UACpBrE,IAAI,EAAC,UAAU;UACfwE,eAAe;QAAA,CAChB,CAAC,EAEF7P,IAAA,CAACR,SAAS;UACRuL,KAAK,EAAC,OAAO;UACbgE,KAAK,EAAE/L,WAAW,CAACH,KAAM;UACzBiM,YAAY,EAAE,SAAdA,YAAYA,CAAEzF,IAAI;YAAA,OAAIpG,cAAc,CAAAuF,aAAA,CAAAA,aAAA,KAAKxF,WAAW;cAAEH,KAAK,EAAEwG;YAAI,EAAC,CAAC;UAAA,CAAC;UACpEC,KAAK,EAAEmB,MAAM,CAACiF,KAAM;UACpBrE,IAAI,EAAC,UAAU;UACfsE,YAAY,EAAC;QAAW,CACzB,CAAC,EAEFzP,KAAA,CAAC5B,IAAI;UAACgL,KAAK,EAAEmB,MAAM,CAACqF,YAAa;UAAAnF,QAAA,GAC/B3K,IAAA,CAACpB,IAAI;YAAC0K,KAAK,EAAEmB,MAAM,CAACsF,SAAU;YAAApF,QAAA,EAAC;UAAK,CAAM,CAAC,EAC3CzK,KAAA,CAAC5B,IAAI;YAACgL,KAAK,EAAEmB,MAAM,CAACuF,WAAY;YAAArF,QAAA,GAC9B3K,IAAA,CAAClB,MAAM;cACLuM,IAAI,EAAErI,WAAW,CAACF,IAAI,KAAK,QAAQ,GAAG,WAAW,GAAG,UAAW;cAC/DyG,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;gBAEb,IAAMzG,IAAI,GAAG,QAAQ;gBACrBG,cAAc,CAAAuF,aAAA,CAAAA,aAAA,KAAKxF,WAAW;kBAAEF,IAAI,EAAJA;gBAAI,EAAC,CAAC;gBAEtC,IAAIE,WAAW,CAACN,IAAI,EAAE;kBACpB,IAAMiF,YAAY,GAAG3E,WAAW,CAACN,IAAI,CAClCkF,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAAC,UAAAC,CAAC;oBAAA,OAAIA,CAAC,CAAC,CAAC,CAAC;kBAAA,EAAC,CACdC,IAAI,CAAC,EAAE,CAAC,CACRC,WAAW,CAAC,CAAC;kBAChB,IAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAI,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;kBACzDzB,OAAO,CAACC,GAAG,CAAC,2BAA2B,WAASe,YAAY,GAAGM,SAAW,CAAC;gBAC7E;cACF,CAAE;cACFqB,KAAK,EAAEmB,MAAM,CAACwF,UAAW;cAAAtF,QAAA,EAC1B;YAED,CAAQ,CAAC,EAET3K,IAAA,CAAClB,MAAM;cACLuM,IAAI,EAAErI,WAAW,CAACF,IAAI,KAAK,SAAS,GAAG,WAAW,GAAG,UAAW;cAChEyG,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;gBAEb,IAAMzG,IAAI,GAAG,SAAS;gBACtBG,cAAc,CAAAuF,aAAA,CAAAA,aAAA,KAAKxF,WAAW;kBAAEF,IAAI,EAAJA;gBAAI,EAAC,CAAC;gBAEtC,IAAIE,WAAW,CAACN,IAAI,EAAE;kBACpB,IAAMiF,YAAY,GAAG3E,WAAW,CAACN,IAAI,CAClCkF,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAAC,UAAAC,CAAC;oBAAA,OAAIA,CAAC,CAAC,CAAC,CAAC;kBAAA,EAAC,CACdC,IAAI,CAAC,EAAE,CAAC,CACRC,WAAW,CAAC,CAAC;kBAChB,IAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAI,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;kBACzDzB,OAAO,CAACC,GAAG,CAAC,4BAA4B,WAASe,YAAY,GAAGM,SAAW,CAAC;gBAC9E;cACF,CAAE;cACFqB,KAAK,EAAEmB,MAAM,CAACwF,UAAW;cAAAtF,QAAA,EAC1B;YAED,CAAQ,CAAC;UAAA,CACL,CAAC;QAAA,CACH,CAAC,EAEPzK,KAAA,CAAC5B,IAAI;UAACgL,KAAK,EAAEmB,MAAM,CAACyF,YAAa;UAAAvF,QAAA,GAC/B3K,IAAA,CAAClB,MAAM;YAACyK,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQnH,eAAe,CAAC,KAAK,CAAC;YAAA,CAAC;YAACkH,KAAK,EAAEmB,MAAM,CAAC0F,MAAO;YAAAxF,QAAA,EAAC;UAErE,CAAQ,CAAC,EACT3K,IAAA,CAAClB,MAAM;YACLuM,IAAI,EAAC,WAAW;YAChB9B,OAAO,EAAE9B,gBAAiB;YAC1B9G,OAAO,EAAEA,OAAQ;YACjB2I,KAAK,EAAEmB,MAAM,CAAC0F,MAAO;YAAAxF,QAAA,EACtB;UAED,CAAQ,CAAC;QAAA,CACL,CAAC;MAAA,CACF;IAAC,CACF,CAAC,EAGT3K,IAAA,CAACT,MAAM;MAAAoL,QAAA,EACLzK,KAAA,CAACZ,KAAK;QACJgQ,OAAO,EAAE/M,YAAa;QACtBgN,SAAS,EAAE,SAAXA,SAASA,CAAA;UAAA,OAAQ/M,eAAe,CAAC,KAAK,CAAC;QAAA,CAAC;QACxCgM,qBAAqB,EAAE/D,MAAM,CAAC+E,YAAa;QAAA7E,QAAA,GAE3C3K,IAAA,CAACjB,KAAK;UAACuK,KAAK,EAAEmB,MAAM,CAACgF,UAAW;UAAA9E,QAAA,EAAC;QAAa,CAAO,CAAC,EAEtD3K,IAAA,CAACR,SAAS;UACRuL,KAAK,EAAC,YAAY;UAClBgE,KAAK,EAAErL,YAAY,CAAChB,IAAK;UACzBoM,YAAY,EAAE,SAAdA,YAAYA,CAAEzF,IAAI;YAAA,OAAI1F,eAAe,CAAA6E,aAAA,CAAAA,aAAA,KAAK9E,YAAY;cAAEhB,IAAI,EAAE2G;YAAI,EAAC,CAAC;UAAA,CAAC;UACrEC,KAAK,EAAEmB,MAAM,CAACiF,KAAM;UACpBrE,IAAI,EAAC;QAAU,CAChB,CAAC,EAEFrL,IAAA,CAACR,SAAS;UACRuL,KAAK,EAAC,gBAAgB;UACtBgE,KAAK,EAAErL,YAAY,CAACP,OAAO,CAACC,MAAO;UACnC0L,YAAY,EAAE,SAAdA,YAAYA,CAAEzF,IAAI;YAAA,OAAI1F,eAAe,CAAA6E,aAAA,CAAAA,aAAA,KAChC9E,YAAY;cACfP,OAAO,EAAAqF,aAAA,CAAAA,aAAA,KAAM9E,YAAY,CAACP,OAAO;gBAAEC,MAAM,EAAEiG;cAAI;YAAC,EACjD,CAAC;UAAA,CAAC;UACHC,KAAK,EAAEmB,MAAM,CAACiF,KAAM;UACpBrE,IAAI,EAAC;QAAU,CAChB,CAAC,EAEFrL,IAAA,CAACR,SAAS;UACRuL,KAAK,EAAC,MAAM;UACZgE,KAAK,EAAErL,YAAY,CAACP,OAAO,CAACE,IAAK;UACjCyL,YAAY,EAAE,SAAdA,YAAYA,CAAEzF,IAAI;YAAA,OAAI1F,eAAe,CAAA6E,aAAA,CAAAA,aAAA,KAChC9E,YAAY;cACfP,OAAO,EAAAqF,aAAA,CAAAA,aAAA,KAAM9E,YAAY,CAACP,OAAO;gBAAEE,IAAI,EAAEgG;cAAI;YAAC,EAC/C,CAAC;UAAA,CAAC;UACHC,KAAK,EAAEmB,MAAM,CAACiF,KAAM;UACpBrE,IAAI,EAAC;QAAU,CAChB,CAAC,EAEFrL,IAAA,CAACR,SAAS;UACRuL,KAAK,EAAC,cAAc;UACpBgE,KAAK,EAAErL,YAAY,CAACP,OAAO,CAACG,KAAM;UAClCwL,YAAY,EAAE,SAAdA,YAAYA,CAAEzF,IAAI;YAAA,OAAI1F,eAAe,CAAA6E,aAAA,CAAAA,aAAA,KAChC9E,YAAY;cACfP,OAAO,EAAAqF,aAAA,CAAAA,aAAA,KAAM9E,YAAY,CAACP,OAAO;gBAAEG,KAAK,EAAE+F;cAAI;YAAC,EAChD,CAAC;UAAA,CAAC;UACHC,KAAK,EAAEmB,MAAM,CAACiF,KAAM;UACpBrE,IAAI,EAAC;QAAU,CAChB,CAAC,EAEFrL,IAAA,CAACR,SAAS;UACRuL,KAAK,EAAC,aAAa;UACnBgE,KAAK,EAAErL,YAAY,CAACP,OAAO,CAACI,UAAW;UACvCuL,YAAY,EAAE,SAAdA,YAAYA,CAAEzF,IAAI;YAAA,OAAI1F,eAAe,CAAA6E,aAAA,CAAAA,aAAA,KAChC9E,YAAY;cACfP,OAAO,EAAAqF,aAAA,CAAAA,aAAA,KAAM9E,YAAY,CAACP,OAAO;gBAAEI,UAAU,EAAE8F;cAAI;YAAC,EACrD,CAAC;UAAA,CAAC;UACHC,KAAK,EAAEmB,MAAM,CAACiF,KAAM;UACpBrE,IAAI,EAAC,UAAU;UACfsE,YAAY,EAAC;QAAS,CACvB,CAAC,EAEF3P,IAAA,CAACR,SAAS;UACRuL,KAAK,EAAC,OAAO;UACbgE,KAAK,EAAErL,YAAY,CAACb,KAAM;UAC1BiM,YAAY,EAAE,SAAdA,YAAYA,CAAEzF,IAAI;YAAA,OAAI1F,eAAe,CAAA6E,aAAA,CAAAA,aAAA,KAAK9E,YAAY;cAAEb,KAAK,EAAEwG;YAAI,EAAC,CAAC;UAAA,CAAC;UACtEC,KAAK,EAAEmB,MAAM,CAACiF,KAAM;UACpBrE,IAAI,EAAC,UAAU;UACfsE,YAAY,EAAC;QAAW,CACzB,CAAC,EAEF3P,IAAA,CAACR,SAAS;UACRuL,KAAK,EAAC,OAAO;UACbgE,KAAK,EAAErL,YAAY,CAACf,KAAM;UAC1BmM,YAAY,EAAE,SAAdA,YAAYA,CAAEzF,IAAI;YAAA,OAAI1F,eAAe,CAAA6E,aAAA,CAAAA,aAAA,KAAK9E,YAAY;cAAEf,KAAK,EAAE0G;YAAI,EAAC,CAAC;UAAA,CAAC;UACtEC,KAAK,EAAEmB,MAAM,CAACiF,KAAM;UACpBrE,IAAI,EAAC,UAAU;UACfsE,YAAY,EAAC,eAAe;UAC5BC,cAAc,EAAC;QAAM,CACtB,CAAC,EAEF5P,IAAA,CAACR,SAAS;UACRuL,KAAK,EAAC,aAAa;UACnBgE,KAAK,EAAErL,YAAY,CAACF,WAAY;UAChCsL,YAAY,EAAE,SAAdA,YAAYA,CAAEzF,IAAI;YAAA,OAAI1F,eAAe,CAAA6E,aAAA,CAAAA,aAAA,KAAK9E,YAAY;cAAEF,WAAW,EAAE6F;YAAI,EAAC,CAAC;UAAA,CAAC;UAC5EC,KAAK,EAAEmB,MAAM,CAACiF,KAAM;UACpBrE,IAAI,EAAC,UAAU;UACf+E,SAAS;UACTC,aAAa,EAAE;QAAE,CAClB,CAAC,EAEFnQ,KAAA,CAAC5B,IAAI;UAACgL,KAAK,EAAEmB,MAAM,CAACyF,YAAa;UAAAvF,QAAA,GAC/B3K,IAAA,CAAClB,MAAM;YAACyK,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQ/G,eAAe,CAAC,KAAK,CAAC;YAAA,CAAC;YAAC8G,KAAK,EAAEmB,MAAM,CAAC0F,MAAO;YAAAxF,QAAA,EAAC;UAErE,CAAQ,CAAC,EACT3K,IAAA,CAAClB,MAAM;YACLuM,IAAI,EAAC,WAAW;YAChB9B,OAAO,EAAEwC,iBAAkB;YAC3BpL,OAAO,EAAEA,OAAQ;YACjB2I,KAAK,EAAEmB,MAAM,CAAC0F,MAAO;YAAAxF,QAAA,EACtB;UAED,CAAQ,CAAC;QAAA,CACL,CAAC;MAAA,CACF;IAAC,CACF,CAAC,EAET3K,IAAA,CAACf,GAAG;MACFqK,KAAK,EAAEmB,MAAM,CAAC6F,GAAI;MAClBzE,IAAI,EAAC,SAAS;MACdtC,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;QACbvE,UAAU,CAAC,CAAC;QACZE,WAAW,CAAC,CAAC;QACbD,UAAU,CAAC,CAAC;MACd,CAAE;MACF8F,KAAK,EAAC;IAAS,CAChB,CAAC,EAGF/K,IAAA,CAACT,MAAM;MAAAoL,QAAA,EACLzK,KAAA,CAACZ,KAAK;QACJgQ,OAAO,EAAExL,cAAc,KAAK,IAAK;QACjCyL,SAAS,EAAE,SAAXA,SAASA,CAAA;UAAA,OAAQxL,iBAAiB,CAAC,IAAI,CAAC;QAAA,CAAC;QACzCyK,qBAAqB,EAAE/D,MAAM,CAAC+E,YAAa;QAAA7E,QAAA,GAE3C3K,IAAA,CAACjB,KAAK;UAACuK,KAAK,EAAEmB,MAAM,CAACgF,UAAW;UAAA9E,QAAA,EAAC;QAAiB,CAAO,CAAC,EAE1D3K,IAAA,CAACR,SAAS;UACRuL,KAAK,EAAC,WAAW;UACjBgE,KAAK,EAAE5K,YAAY,CAACzB,IAAK;UACzBoM,YAAY,EAAE,SAAdA,YAAYA,CAAEzF,IAAI;YAAA,OAAIjF,eAAe,CAAAoE,aAAA,CAAAA,aAAA,KAAKrE,YAAY;cAAEzB,IAAI,EAAE2G;YAAI,EAAC,CAAC;UAAA,CAAC;UACrEC,KAAK,EAAEmB,MAAM,CAACiF,KAAM;UACpBrE,IAAI,EAAC;QAAU,CAChB,CAAC,EAEFrL,IAAA,CAACR,SAAS;UACRuL,KAAK,EAAC,OAAO;UACbgE,KAAK,EAAE5K,YAAY,CAACxB,KAAM;UAC1BmM,YAAY,EAAE,SAAdA,YAAYA,CAAEzF,IAAI;YAAA,OAAIjF,eAAe,CAAAoE,aAAA,CAAAA,aAAA,KAAKrE,YAAY;cAAExB,KAAK,EAAE0G;YAAI,EAAC,CAAC;UAAA,CAAC;UACtEC,KAAK,EAAEmB,MAAM,CAACiF,KAAM;UACpBrE,IAAI,EAAC,UAAU;UACfsE,YAAY,EAAC,eAAe;UAC5BC,cAAc,EAAC;QAAM,CACtB,CAAC,EAEF5P,IAAA,CAACR,SAAS;UACRuL,KAAK,EAAC,OAAO;UACbgE,KAAK,EAAE5K,YAAY,CAACtB,KAAM;UAC1BiM,YAAY,EAAE,SAAdA,YAAYA,CAAEzF,IAAI;YAAA,OAAIjF,eAAe,CAAAoE,aAAA,CAAAA,aAAA,KAAKrE,YAAY;cAAEtB,KAAK,EAAEwG;YAAI,EAAC,CAAC;UAAA,CAAC;UACtEC,KAAK,EAAEmB,MAAM,CAACiF,KAAM;UACpBrE,IAAI,EAAC,UAAU;UACfsE,YAAY,EAAC;QAAW,CACzB,CAAC,EAEFzP,KAAA,CAAC5B,IAAI;UAACgL,KAAK,EAAEmB,MAAM,CAACqF,YAAa;UAAAnF,QAAA,GAC/B3K,IAAA,CAACpB,IAAI;YAAC0K,KAAK,EAAEmB,MAAM,CAACsF,SAAU;YAAApF,QAAA,EAAC;UAAK,CAAM,CAAC,EAC3CzK,KAAA,CAAC5B,IAAI;YAACgL,KAAK,EAAEmB,MAAM,CAACuF,WAAY;YAAArF,QAAA,GAC9B3K,IAAA,CAAClB,MAAM;cACLuM,IAAI,EAAElH,YAAY,CAACrB,IAAI,KAAK,QAAQ,GAAG,WAAW,GAAG,UAAW;cAChEyG,OAAO,EAAE,SAATA,OAAOA,CAAA;gBAAA,OAAQnF,eAAe,CAAAoE,aAAA,CAAAA,aAAA,KAAKrE,YAAY;kBAAErB,IAAI,EAAE;gBAAQ,EAAC,CAAC;cAAA,CAAC;cAClEwG,KAAK,EAAEmB,MAAM,CAACwF,UAAW;cAAAtF,QAAA,EAC1B;YAED,CAAQ,CAAC,EAET3K,IAAA,CAAClB,MAAM;cACLuM,IAAI,EAAElH,YAAY,CAACrB,IAAI,KAAK,SAAS,GAAG,WAAW,GAAG,UAAW;cACjEyG,OAAO,EAAE,SAATA,OAAOA,CAAA;gBAAA,OAAQnF,eAAe,CAAAoE,aAAA,CAAAA,aAAA,KAAKrE,YAAY;kBAAErB,IAAI,EAAE;gBAAS,EAAC,CAAC;cAAA,CAAC;cACnEwG,KAAK,EAAEmB,MAAM,CAACwF,UAAW;cAAAtF,QAAA,EAC1B;YAED,CAAQ,CAAC;UAAA,CACL,CAAC;QAAA,CACH,CAAC,EAEPzK,KAAA,CAAC5B,IAAI;UAACgL,KAAK,EAAEmB,MAAM,CAAC8F,cAAe;UAAA5F,QAAA,GACjC3K,IAAA,CAACpB,IAAI;YAAC0K,KAAK,EAAEmB,MAAM,CAACsF,SAAU;YAAApF,QAAA,EAAC;UAAO,CAAM,CAAC,EAC7CzK,KAAA,CAAC5B,IAAI;YAACgL,KAAK,EAAEmB,MAAM,CAACuF,WAAY;YAAArF,QAAA,GAC9B3K,IAAA,CAAClB,MAAM;cACLuM,IAAI,EAAElH,YAAY,CAACF,QAAQ,GAAG,WAAW,GAAG,UAAW;cACvDsF,OAAO,EAAE,SAATA,OAAOA,CAAA;gBAAA,OAAQnF,eAAe,CAAAoE,aAAA,CAAAA,aAAA,KAAKrE,YAAY;kBAAEF,QAAQ,EAAE;gBAAI,EAAC,CAAC;cAAA,CAAC;cAClEqF,KAAK,EAAE,CAACmB,MAAM,CAACwF,UAAU,EAAE;gBAACjF,eAAe,EAAE7G,YAAY,CAACF,QAAQ,GAAG,SAAS,GAAG;cAAa,CAAC,CAAE;cACjGuM,UAAU,EAAE;gBAAC/C,KAAK,EAAEtJ,YAAY,CAACF,QAAQ,GAAG,OAAO,GAAG;cAAS,CAAE;cAAA0G,QAAA,EAClE;YAED,CAAQ,CAAC,EAET3K,IAAA,CAAClB,MAAM;cACLuM,IAAI,EAAE,CAAClH,YAAY,CAACF,QAAQ,GAAG,WAAW,GAAG,UAAW;cACxDsF,OAAO,EAAE,SAATA,OAAOA,CAAA;gBAAA,OAAQnF,eAAe,CAAAoE,aAAA,CAAAA,aAAA,KAAKrE,YAAY;kBAAEF,QAAQ,EAAE;gBAAK,EAAC,CAAC;cAAA,CAAC;cACnEqF,KAAK,EAAE,CAACmB,MAAM,CAACwF,UAAU,EAAE;gBAACjF,eAAe,EAAE,CAAC7G,YAAY,CAACF,QAAQ,GAAG,SAAS,GAAG;cAAa,CAAC,CAAE;cAClGuM,UAAU,EAAE;gBAAC/C,KAAK,EAAE,CAACtJ,YAAY,CAACF,QAAQ,GAAG,OAAO,GAAG;cAAS,CAAE;cAAA0G,QAAA,EACnE;YAED,CAAQ,CAAC;UAAA,CACL,CAAC;QAAA,CACH,CAAC,EAEPzK,KAAA,CAAC5B,IAAI;UAACgL,KAAK,EAAEmB,MAAM,CAACyF,YAAa;UAAAvF,QAAA,GAC/B3K,IAAA,CAAClB,MAAM;YAACyK,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQxF,iBAAiB,CAAC,IAAI,CAAC;YAAA,CAAC;YAACuF,KAAK,EAAEmB,MAAM,CAAC0F,MAAO;YAAAxF,QAAA,EAAC;UAEtE,CAAQ,CAAC,EACT3K,IAAA,CAAClB,MAAM;YACLuM,IAAI,EAAC,WAAW;YAChB9B,OAAO,EAAES,gBAAiB;YAC1BrJ,OAAO,EAAEA,OAAQ;YACjB2I,KAAK,EAAEmB,MAAM,CAAC0F,MAAO;YAAAxF,QAAA,EACtB;UAED,CAAQ,CAAC;QAAA,CACL,CAAC;MAAA,CACF;IAAC,CACF,CAAC;EAAA,CACL,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGlM,UAAU,CAACkS,MAAM,CAAC;EAC/B9C,SAAS,EAAE;IACT+C,IAAI,EAAE,CAAC;IACP1F,eAAe,EAAE;EACnB,CAAC;EACDwC,iBAAiB,EAAE;IACjBkD,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpB5F,eAAe,EAAE;EACnB,CAAC;EACD4C,MAAM,EAAE;IACN5C,eAAe,EAAE,SAAS;IAC1B6F,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdrC,aAAa,EAAE;EACjB,CAAC;EACDZ,WAAW,EAAE;IACXkD,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBvD,KAAK,EAAE;EACT,CAAC;EACDK,cAAc,EAAE;IACdiD,QAAQ,EAAE,EAAE;IACZtD,KAAK,EAAE,SAAS;IAChBC,SAAS,EAAE;EACb,CAAC;EACDK,OAAO,EAAE;IACP2C,IAAI,EAAE;EACR,CAAC;EACD1C,cAAc,EAAE;IACdiD,aAAa,EAAE,KAAK;IACpBN,cAAc,EAAE,eAAe;IAC/BE,OAAO,EAAE;EACX,CAAC;EACD5C,SAAS,EAAE;IACTiD,KAAK,EAAE,KAAK;IACZC,SAAS,EAAE;EACb,CAAC;EACDjD,UAAU,EAAE;IACV6C,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACD7C,OAAO,EAAE;IACP0C,OAAO,EAAE,EAAE;IACXO,YAAY,EAAE;EAChB,CAAC;EACDhD,aAAa,EAAE;IACb6C,aAAa,EAAE,KAAK;IACpBN,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBQ,YAAY,EAAE;EAChB,CAAC;EACD/C,YAAY,EAAE;IACZ0C,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBvD,KAAK,EAAE;EACT,CAAC;EACDwB,QAAQ,EAAE;IACR8B,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBtD,SAAS,EAAE,EAAE;IACb0D,YAAY,EAAE,EAAE;IAChB3D,KAAK,EAAE;EACT,CAAC;EACDuB,SAAS,EAAE;IACToC,YAAY,EAAE,EAAE;IAChBD,SAAS,EAAE;EACb,CAAC;EACDzG,QAAQ,EAAE;IACR0G,YAAY,EAAE,EAAE;IAChBD,SAAS,EAAE;EACb,CAAC;EACDtG,cAAc,EAAE;IACdoG,aAAa,EAAE,KAAK;IACpBL,UAAU,EAAE;EACd,CAAC;EACDrQ,QAAQ,EAAE;IACRmQ,IAAI,EAAE,CAAC;IACPW,UAAU,EAAE;EACd,CAAC;EACDpG,cAAc,EAAE;IACdgG,aAAa,EAAE,KAAK;IACpBL,UAAU,EAAE,QAAQ;IACpBlD,SAAS,EAAE;EACb,CAAC;EACDxC,SAAS,EAAE;IACT6F,QAAQ,EAAE,EAAE;IACZtD,KAAK,EAAE;EACT,CAAC;EACDtC,SAAS,EAAE;IACT4F,QAAQ,EAAE,EAAE;IACZtD,KAAK,EAAE;EACT,CAAC;EACDrC,gBAAgB,EAAE;IAChB6F,aAAa,EAAE,KAAK;IACpBL,UAAU,EAAE;EACd,CAAC;EACDtI,OAAO,EAAE;IACPyI,QAAQ,EAAE,EAAE;IACZtD,KAAK,EAAE;EACT,CAAC;EACDlC,QAAQ,EAAE;IACR8F,UAAU,EAAE;EACd,CAAC;EACD1F,eAAe,EAAE;IACfsF,aAAa,EAAE,KAAK;IACpBN,cAAc,EAAE,cAAc;IAC9BjD,SAAS,EAAE;EACb,CAAC;EACDkB,SAAS,EAAE;IACT0C,SAAS,EAAE,QAAQ;IACnBT,OAAO,EAAE,EAAE;IACXpD,KAAK,EAAE;EACT,CAAC;EACD6C,GAAG,EAAE;IACHiB,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACT1G,eAAe,EAAE;EACnB,CAAC;EACDwE,YAAY,EAAE;IACZxE,eAAe,EAAE,OAAO;IACxB6F,OAAO,EAAE,EAAE;IACXW,MAAM,EAAE,EAAE;IACVG,YAAY,EAAE;EAChB,CAAC;EACDlC,UAAU,EAAE;IACV2B,YAAY,EAAE,EAAE;IAChBE,SAAS,EAAE;EACb,CAAC;EACD5B,KAAK,EAAE;IACL0B,YAAY,EAAE;EAChB,CAAC;EACDtB,YAAY,EAAE;IACZpE,cAAc,EAAE;EAClB,CAAC;EACDqE,SAAS,EAAE;IACTqB,YAAY,EAAE,EAAE;IAChBL,QAAQ,EAAE;EACZ,CAAC;EACDf,WAAW,EAAE;IACXiB,aAAa,EAAE,KAAK;IACpBN,cAAc,EAAE;EAClB,CAAC;EACDV,UAAU,EAAE;IACViB,KAAK,EAAE;EACT,CAAC;EACDhB,YAAY,EAAE;IACZe,aAAa,EAAE,KAAK;IACpBN,cAAc,EAAE,cAAc;IAC9BjD,SAAS,EAAE;EACb,CAAC;EACDyC,MAAM,EAAE;IACNyB,gBAAgB,EAAE,CAAC;IACnBV,KAAK,EAAE;EACT,CAAC;EACD5F,UAAU,EAAE;IACV+F,UAAU,EAAE;EACd,CAAC;EACDrE,SAAS,EAAE;IACToE,YAAY,EAAE,EAAE;IAChBD,SAAS,EAAE;EACb,CAAC;EACDlE,eAAe,EAAE;IACfgE,aAAa,EAAE,KAAK;IACpBL,UAAU,EAAE;EACd,CAAC;EACDzD,SAAS,EAAE;IACTuD,IAAI,EAAE,CAAC;IACPW,UAAU,EAAE;EACd,CAAC;EACDjE,YAAY,EAAE;IACZ2D,QAAQ,EAAE,EAAE;IACZtD,KAAK,EAAE;EACT,CAAC;EACDJ,UAAU,EAAE;IACV0D,QAAQ,EAAE,EAAE;IACZtD,KAAK,EAAE;EACT,CAAC;EACDH,gBAAgB,EAAE;IAChB2D,aAAa,EAAE,KAAK;IACpBN,cAAc,EAAE,cAAc;IAC9BjD,SAAS,EAAE;EACb,CAAC;EACDiB,cAAc,EAAE;IACdkC,OAAO,EAAE,EAAE;IACXD,UAAU,EAAE;EACd,CAAC;EACDL,cAAc,EAAE;IACd7E,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAevL,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}