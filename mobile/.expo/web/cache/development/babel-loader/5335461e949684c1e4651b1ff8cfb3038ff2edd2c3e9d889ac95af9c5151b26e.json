{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Text, Card, Title, Button, ActivityIndicator, Chip, Divider, Banner, Dialog, Portal, Menu, IconButton } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { appointmentsApi } from \"../../api/client\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BarberAppointmentsScreen = function BarberAppointmentsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(AuthContext),\n    userInfo = _useContext.userInfo;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    appointments = _useState2[0],\n    setAppointments = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    refreshing = _useState6[0],\n    setRefreshing = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var _useState9 = useState('upcoming'),\n    _useState10 = _slicedToArray(_useState9, 2),\n    activeTab = _useState10[0],\n    setActiveTab = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    dialogVisible = _useState12[0],\n    setDialogVisible = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    actionDialogType = _useState14[0],\n    setActionDialogType = _useState14[1];\n  var _useState15 = useState(''),\n    _useState16 = _slicedToArray(_useState15, 2),\n    actionReason = _useState16[0],\n    setActionReason = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    selectedAppointment = _useState18[0],\n    setSelectedAppointment = _useState18[1];\n  var _useState19 = useState({}),\n    _useState20 = _slicedToArray(_useState19, 2),\n    menuVisible = _useState20[0],\n    setMenuVisible = _useState20[1];\n  useEffect(function () {\n    fetchAppointments();\n    var unsubscribe = navigation.addListener('focus', function () {\n      fetchAppointments();\n    });\n    return unsubscribe;\n  }, [navigation]);\n  var fetchAppointments = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        setError(null);\n        var response = yield appointmentsApi.getUserAppointments();\n        if (response.data.appointments && response.data.appointments.length > 0) {\n          setAppointments(response.data.appointments);\n        } else {\n          setAppointments([]);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching appointments:', error);\n        setError('Failed to load appointments. Please try again.');\n        setLoading(false);\n      }\n    });\n    return function fetchAppointments() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var onRefresh = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      setRefreshing(true);\n      yield fetchAppointments();\n      setRefreshing(false);\n    });\n    return function onRefresh() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var openActionDialog = function openActionDialog(appointment, type) {\n    setSelectedAppointment(appointment);\n    setActionDialogType(type);\n    setActionReason('');\n    setDialogVisible(true);\n    setMenuVisible({});\n  };\n  var performAppointmentAction = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (!selectedAppointment) return;\n      setDialogVisible(false);\n      setLoading(true);\n      try {\n        var response;\n        switch (actionDialogType) {\n          case 'cancel':\n            response = yield appointmentsApi.cancelAppointment(selectedAppointment._id, {\n              cancellationReason: actionReason\n            });\n            if (response.data.success) {\n              Alert.alert('Success', 'Appointment cancelled successfully');\n            }\n            break;\n          case 'complete':\n            response = yield appointmentsApi.updateAppointment(selectedAppointment._id, {\n              status: 'completed',\n              notes: actionReason\n            });\n            if (response.data.success) {\n              Alert.alert('Success', 'Appointment marked as completed');\n            }\n            break;\n          case 'noshow':\n            response = yield appointmentsApi.updateAppointment(selectedAppointment._id, {\n              status: 'no-show',\n              notes: actionReason\n            });\n            if (response.data.success) {\n              Alert.alert('Success', 'Appointment marked as no-show');\n            }\n            break;\n        }\n        yield fetchAppointments();\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error('Error updating appointment:', error);\n        Alert.alert('Error', ((_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.message) || 'Failed to update appointment');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function performAppointmentAction() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var promptDelete = function promptDelete(appointmentId) {\n    var appointment = appointments.find(function (app) {\n      return app._id === appointmentId;\n    });\n    Alert.alert('Delete Appointment', \"Are you sure you want to delete this appointment\" + (appointment ? \" for \" + appointment.service.name : '') + \"? This action cannot be undone.\", [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Delete',\n      onPress: function onPress() {\n        return deleteAppointment(appointmentId);\n      },\n      style: 'destructive'\n    }]);\n    console.log(\"Prompted deletion for appointment \" + appointmentId);\n  };\n  var deleteAppointment = function () {\n    var _ref5 = _asyncToGenerator(function* (appointmentId) {\n      try {\n        setLoading(true);\n        console.log(\"Deleting appointment \" + appointmentId);\n        var response = yield appointmentsApi.deleteAppointment(appointmentId);\n        console.log('Delete appointment response:', response.data);\n        if (response.data && response.data.success) {\n          Alert.alert('Success', 'Appointment deleted successfully');\n          yield fetchAppointments();\n        } else {\n          var _response$data;\n          console.error('Failed to delete appointment:', response.data);\n          Alert.alert('Error', ((_response$data = response.data) == null ? void 0 : _response$data.message) || 'Failed to delete appointment');\n          setLoading(false);\n        }\n      } catch (error) {\n        var _error$response2, _error$response2$data;\n        console.error('Error deleting appointment:', error);\n        Alert.alert('Error', ((_error$response2 = error.response) == null ? void 0 : (_error$response2$data = _error$response2.data) == null ? void 0 : _error$response2$data.message) || 'Failed to delete appointment. Please try again.');\n        setLoading(false);\n      }\n    });\n    return function deleteAppointment(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var filteredAppointments = appointments.filter(function (appointment) {\n    var appointmentDate = new Date(appointment.date);\n    var today = new Date();\n    var todayForComparison = new Date();\n    todayForComparison.setHours(0, 0, 0, 0);\n    var appointmentDay = appointmentDate.getDate();\n    var appointmentMonth = appointmentDate.getMonth();\n    var appointmentYear = appointmentDate.getFullYear();\n    var todayDay = todayForComparison.getDate();\n    var todayMonth = todayForComparison.getMonth();\n    var todayYear = todayForComparison.getFullYear();\n    var isToday = appointmentDay === todayDay && appointmentMonth === todayMonth && appointmentYear === todayYear;\n    var isCancelled = appointment.status === 'cancelled';\n    var isCompleted = appointment.status === 'completed';\n    var isNoShow = appointment.status === 'no-show';\n    var isActive = !isCancelled && !isCompleted && !isNoShow;\n    var appointmentDateNoTime = new Date(appointmentDate);\n    appointmentDateNoTime.setHours(0, 0, 0, 0);\n    var isFuture = appointmentDateNoTime > todayForComparison;\n    var isPast = appointmentDateNoTime < todayForComparison;\n    if (activeTab === 'today') {\n      return isToday && isActive;\n    } else if (activeTab === 'upcoming') {\n      return isFuture && isActive;\n    } else {\n      return isPast || isCancelled || isCompleted || isNoShow;\n    }\n  }).sort(function (a, b) {\n    var dateA = new Date(a.date);\n    var dateB = new Date(b.date);\n    if (dateA.toDateString() === dateB.toDateString()) {\n      var _a$startTime$split$ma = a.startTime.split(':').map(Number),\n        _a$startTime$split$ma2 = _slicedToArray(_a$startTime$split$ma, 2),\n        hoursA = _a$startTime$split$ma2[0],\n        minutesA = _a$startTime$split$ma2[1];\n      var _b$startTime$split$ma = b.startTime.split(':').map(Number),\n        _b$startTime$split$ma2 = _slicedToArray(_b$startTime$split$ma, 2),\n        hoursB = _b$startTime$split$ma2[0],\n        minutesB = _b$startTime$split$ma2[1];\n      return hoursA * 60 + minutesA - (hoursB * 60 + minutesB);\n    }\n    if (activeTab === 'past') {\n      return dateB - dateA;\n    } else {\n      return dateA - dateB;\n    }\n  });\n  var renderAppointmentItem = function renderAppointmentItem(_ref6) {\n    var item = _ref6.item;\n    var isPast = new Date(item.date) < new Date() || item.status === 'completed' || item.status === 'cancelled' || item.status === 'no-show';\n    var toggleMenu = function toggleMenu(id) {\n      setMenuVisible(_objectSpread(_objectSpread({}, menuVisible), {}, _defineProperty({}, id, !menuVisible[id])));\n    };\n    return _jsx(Card, {\n      style: [styles.card, isPast && styles.pastCard],\n      children: _jsxs(Card.Content, {\n        children: [_jsxs(View, {\n          style: styles.headerRow,\n          children: [_jsx(Title, {\n            children: item.service.name\n          }), !isPast && _jsxs(View, {\n            children: [_jsx(IconButton, {\n              icon: \"dots-vertical\",\n              onPress: function onPress() {\n                return toggleMenu(item._id);\n              },\n              size: 24\n            }), _jsxs(Menu, {\n              visible: menuVisible[item._id] || false,\n              onDismiss: function onDismiss() {\n                return toggleMenu(item._id);\n              },\n              anchor: {\n                x: 200,\n                y: 0\n              },\n              style: styles.menu,\n              children: [_jsx(Menu.Item, {\n                onPress: function onPress() {\n                  return openActionDialog(item, 'complete');\n                },\n                title: \"Mark as Complete\",\n                icon: \"check\"\n              }), _jsx(Menu.Item, {\n                onPress: function onPress() {\n                  return openActionDialog(item, 'cancel');\n                },\n                title: \"Cancel Appointment\",\n                icon: \"close\"\n              }), _jsx(Menu.Item, {\n                onPress: function onPress() {\n                  return openActionDialog(item, 'noshow');\n                },\n                title: \"Mark as No-Show\",\n                icon: \"account-off\"\n              }), _jsx(Menu.Item, {\n                onPress: function onPress() {\n                  return promptDelete(item._id);\n                },\n                title: \"Delete Appointment\",\n                icon: \"delete\"\n              })]\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.row,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Customer:\"\n          }), _jsx(Text, {\n            children: item.customer.name\n          })]\n        }), _jsxs(View, {\n          style: styles.row,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Barber:\"\n          }), _jsx(Text, {\n            children: item.barber.name\n          })]\n        }), _jsxs(View, {\n          style: styles.row,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Date:\"\n          }), _jsx(Text, {\n            children: format(new Date(item.date), 'MMMM d, yyyy')\n          })]\n        }), _jsxs(View, {\n          style: styles.row,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Time:\"\n          }), _jsxs(Text, {\n            children: [item.startTime, \" - \", item.endTime]\n          })]\n        }), _jsxs(View, {\n          style: styles.row,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Service:\"\n          }), _jsx(Text, {\n            children: item.service.name\n          })]\n        }), _jsxs(View, {\n          style: styles.row,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Price:\"\n          }), _jsxs(Text, {\n            children: [\"$\", item.service.price]\n          })]\n        }), _jsx(View, {\n          style: styles.statusContainer,\n          children: _jsx(Chip, {\n            style: {\n              backgroundColor: item.status === 'confirmed' ? '#4CAF50' : item.status === 'pending' ? '#FFC107' : item.status === 'completed' ? '#3282B8' : item.status === 'no-show' ? '#9C27B0' : '#F44336'\n            },\n            textStyle: {\n              color: 'white'\n            },\n            children: item.status.toUpperCase()\n          })\n        }), item.cancellationReason && _jsxs(View, {\n          style: styles.infoBox,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Cancellation Reason:\"\n          }), _jsx(Text, {\n            children: item.cancellationReason\n          }), item.cancelledBy && _jsxs(Text, {\n            style: styles.subText,\n            children: [\"Cancelled by: \", item.cancelledBy]\n          })]\n        }), item.notes && _jsxs(View, {\n          style: styles.infoBox,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Notes:\"\n          }), _jsx(Text, {\n            children: item.notes\n          })]\n        }), !isPast && _jsx(Button, {\n          mode: \"outlined\",\n          style: styles.cancelButton,\n          icon: \"close\",\n          onPress: function onPress() {\n            return openActionDialog(item, 'cancel');\n          },\n          children: \"Cancel Appointment\"\n        })]\n      })\n    });\n  };\n  if (loading && !refreshing) {\n    return _jsx(View, {\n      style: styles.centered,\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#0F4C75\"\n      })\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsx(Text, {\n        style: styles.headerTitle,\n        children: \"Appointments Management\"\n      })\n    }), _jsxs(View, {\n      style: styles.tabContainer,\n      children: [_jsx(Button, {\n        mode: activeTab === 'today' ? 'contained' : 'outlined',\n        onPress: function onPress() {\n          return setActiveTab('today');\n        },\n        style: [styles.tabButton, {\n          flex: 1\n        }],\n        children: \"Today\"\n      }), _jsx(Button, {\n        mode: activeTab === 'upcoming' ? 'contained' : 'outlined',\n        onPress: function onPress() {\n          return setActiveTab('upcoming');\n        },\n        style: [styles.tabButton, {\n          flex: 1\n        }],\n        children: \"Upcoming\"\n      }), _jsx(Button, {\n        mode: activeTab === 'past' ? 'contained' : 'outlined',\n        onPress: function onPress() {\n          return setActiveTab('past');\n        },\n        style: [styles.tabButton, {\n          flex: 1\n        }],\n        children: \"Past\"\n      })]\n    }), _jsx(Divider, {}), error ? _jsx(Banner, {\n      visible: true,\n      icon: \"alert\",\n      actions: [{\n        label: 'Retry',\n        onPress: fetchAppointments\n      }],\n      children: error\n    }) : _jsx(FlatList, {\n      data: filteredAppointments,\n      renderItem: renderAppointmentItem,\n      keyExtractor: function keyExtractor(item) {\n        return item._id;\n      },\n      contentContainerStyle: styles.appointmentsList,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        colors: ['#0F4C75']\n      }),\n      ListEmptyComponent: _jsx(View, {\n        style: styles.emptyContainer,\n        children: _jsx(Text, {\n          style: styles.emptyText,\n          children: activeTab === 'today' ? \"You don't have any appointments scheduled for today\" : activeTab === 'upcoming' ? \"You don't have any upcoming appointments\" : \"You don't have any past appointments\"\n        })\n      })\n    }), _jsx(Portal, {\n      children: _jsxs(Dialog, {\n        visible: dialogVisible,\n        onDismiss: function onDismiss() {\n          return setDialogVisible(false);\n        },\n        children: [_jsx(Dialog.Title, {\n          children: actionDialogType === 'cancel' ? 'Cancel Appointment' : actionDialogType === 'complete' ? 'Complete Appointment' : 'Mark as No-Show'\n        }), _jsxs(Dialog.Content, {\n          children: [_jsx(Text, {\n            style: styles.dialogText,\n            children: actionDialogType === 'cancel' ? 'Please provide a reason for cancelling:' : actionDialogType === 'complete' ? 'Add any notes about this appointment (optional):' : 'Add any notes about this no-show (optional):'\n          }), _jsx(TextInput, {\n            style: styles.input,\n            value: actionReason,\n            onChangeText: setActionReason,\n            placeholder: actionDialogType === 'cancel' ? \"e.g., Customer requested cancellation\" : actionDialogType === 'complete' ? \"e.g., Service notes, products used\" : \"e.g., Customer didn't show up, no call\",\n            multiline: true\n          })]\n        }), _jsxs(Dialog.Actions, {\n          children: [_jsx(Button, {\n            onPress: function onPress() {\n              return setDialogVisible(false);\n            },\n            children: \"Cancel\"\n          }), _jsx(Button, {\n            onPress: performAppointmentAction,\n            children: \"Confirm\"\n          })]\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  header: {\n    backgroundColor: '#0F4C75',\n    padding: 20,\n    paddingTop: 50,\n    paddingBottom: 20\n  },\n  headerTitle: {\n    fontSize: 24,\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  tabButton: {\n    margin: 5\n  },\n  appointmentsList: {\n    padding: 15,\n    paddingBottom: 80\n  },\n  card: {\n    marginBottom: 15,\n    borderRadius: 10,\n    elevation: 3\n  },\n  pastCard: {\n    opacity: 0.8\n  },\n  headerRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginVertical: 5\n  },\n  label: {\n    fontWeight: 'bold',\n    color: '#666'\n  },\n  subText: {\n    fontSize: 12,\n    color: '#888',\n    fontStyle: 'italic',\n    marginTop: 2\n  },\n  statusContainer: {\n    marginTop: 10,\n    marginBottom: 10,\n    alignItems: 'flex-start'\n  },\n  emptyContainer: {\n    padding: 20,\n    alignItems: 'center'\n  },\n  emptyText: {\n    fontSize: 16,\n    color: 'gray',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  dialogText: {\n    marginBottom: 10\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 5,\n    padding: 10,\n    marginTop: 5,\n    minHeight: 80\n  },\n  menu: {\n    position: 'absolute',\n    top: 50,\n    right: 10\n  },\n  infoBox: {\n    backgroundColor: '#f9f9f9',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10\n  },\n  cancelButton: {\n    marginTop: 15,\n    borderColor: '#F44336',\n    borderWidth: 1\n  }\n});\nexport default BarberAppointmentsScreen;","map":{"version":3,"names":["React","useState","useEffect","useContext","View","StyleSheet","FlatList","RefreshControl","Alert","TextInput","Text","Card","Title","Button","ActivityIndicator","Chip","Divider","Banner","Dialog","Portal","Menu","IconButton","format","appointmentsApi","AuthContext","jsx","_jsx","jsxs","_jsxs","BarberAppointmentsScreen","_ref","navigation","_useContext","userInfo","_useState","_useState2","_slicedToArray","appointments","setAppointments","_useState3","_useState4","loading","setLoading","_useState5","_useState6","refreshing","setRefreshing","_useState7","_useState8","error","setError","_useState9","_useState10","activeTab","setActiveTab","_useState11","_useState12","dialogVisible","setDialogVisible","_useState13","_useState14","actionDialogType","setActionDialogType","_useState15","_useState16","actionReason","setActionReason","_useState17","_useState18","selectedAppointment","setSelectedAppointment","_useState19","_useState20","menuVisible","setMenuVisible","fetchAppointments","unsubscribe","addListener","_ref2","_asyncToGenerator","response","getUserAppointments","data","length","console","apply","arguments","onRefresh","_ref3","openActionDialog","appointment","type","performAppointmentAction","_ref4","cancelAppointment","_id","cancellationReason","success","alert","updateAppointment","status","notes","_error$response","_error$response$data","message","promptDelete","appointmentId","find","app","service","name","text","style","onPress","deleteAppointment","log","_ref5","_response$data","_error$response2","_error$response2$data","_x","filteredAppointments","filter","appointmentDate","Date","date","today","todayForComparison","setHours","appointmentDay","getDate","appointmentMonth","getMonth","appointmentYear","getFullYear","todayDay","todayMonth","todayYear","isToday","isCancelled","isCompleted","isNoShow","isActive","appointmentDateNoTime","isFuture","isPast","sort","a","b","dateA","dateB","toDateString","_a$startTime$split$ma","startTime","split","map","Number","_a$startTime$split$ma2","hoursA","minutesA","_b$startTime$split$ma","_b$startTime$split$ma2","hoursB","minutesB","renderAppointmentItem","_ref6","item","toggleMenu","id","_objectSpread","_defineProperty","styles","card","pastCard","children","Content","headerRow","icon","size","visible","onDismiss","anchor","x","y","menu","Item","title","row","label","customer","barber","endTime","price","statusContainer","backgroundColor","textStyle","color","toUpperCase","infoBox","cancelledBy","subText","mode","cancelButton","centered","container","header","headerTitle","tabContainer","tabButton","flex","actions","renderItem","keyExtractor","contentContainerStyle","appointmentsList","refreshControl","colors","ListEmptyComponent","emptyContainer","emptyText","dialogText","input","value","onChangeText","placeholder","multiline","Actions","create","justifyContent","alignItems","padding","paddingTop","paddingBottom","fontSize","fontWeight","flexDirection","margin","marginBottom","borderRadius","elevation","opacity","marginVertical","fontStyle","marginTop","textAlign","borderWidth","borderColor","minHeight","position","top","right"],"sources":["C:/Users/User/Downloads/mobile/screens/barber/BarberAppointmentsScreen.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, StyleSheet, FlatList, RefreshControl, Alert, TextInput } from 'react-native';\r\nimport { Text, Card, Title, Button, ActivityIndicator, Chip, Divider, Banner, Dialog, Portal, Menu, IconButton } from 'react-native-paper';\r\nimport { format } from 'date-fns';\r\nimport { appointmentsApi } from '../../api/client';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst BarberAppointmentsScreen = ({ navigation }) => {\r\n  const { userInfo } = useContext(AuthContext);\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('upcoming'); // 'upcoming', 'past', 'today'\r\n  \r\n  // Dialog states\r\n  const [dialogVisible, setDialogVisible] = useState(false);\r\n  const [actionDialogType, setActionDialogType] = useState(''); // 'cancel', 'complete', 'noshow'\r\n  const [actionReason, setActionReason] = useState('');\r\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\r\n  const [menuVisible, setMenuVisible] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchAppointments();\r\n    \r\n    // Refresh appointments when screen is focused\r\n    const unsubscribe = navigation.addListener('focus', () => {\r\n      fetchAppointments();\r\n    });\r\n    \r\n    return unsubscribe;\r\n  }, [navigation]);\r\n  \r\n  const fetchAppointments = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await appointmentsApi.getUserAppointments();\r\n      \r\n      if (response.data.appointments && response.data.appointments.length > 0) {\r\n        setAppointments(response.data.appointments);\r\n      } else {\r\n        setAppointments([]);\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching appointments:', error);\r\n      setError('Failed to load appointments. Please try again.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const onRefresh = async () => {\r\n    setRefreshing(true);\r\n    await fetchAppointments();\r\n    setRefreshing(false);\r\n  };\r\n  \r\n  const openActionDialog = (appointment, type) => {\r\n    setSelectedAppointment(appointment);\r\n    setActionDialogType(type);\r\n    setActionReason('');\r\n    setDialogVisible(true);\r\n    setMenuVisible({});\r\n  };\r\n  \r\n  const performAppointmentAction = async () => {\r\n    if (!selectedAppointment) return;\r\n    \r\n    setDialogVisible(false);\r\n    setLoading(true);\r\n    \r\n    try {\r\n      let response;\r\n      \r\n      switch (actionDialogType) {\r\n        case 'cancel':\r\n          response = await appointmentsApi.cancelAppointment(\r\n            selectedAppointment._id,\r\n            { cancellationReason: actionReason }\r\n          );\r\n          if (response.data.success) {\r\n            Alert.alert('Success', 'Appointment cancelled successfully');\r\n          }\r\n          break;\r\n          \r\n        case 'complete':\r\n          response = await appointmentsApi.updateAppointment(\r\n            selectedAppointment._id, \r\n            { \r\n              status: 'completed',\r\n              notes: actionReason\r\n            }\r\n          );\r\n          if (response.data.success) {\r\n            Alert.alert('Success', 'Appointment marked as completed');\r\n          }\r\n          break;\r\n          \r\n        case 'noshow':\r\n          response = await appointmentsApi.updateAppointment(\r\n            selectedAppointment._id, \r\n            { \r\n              status: 'no-show',\r\n              notes: actionReason\r\n            }\r\n          );\r\n          if (response.data.success) {\r\n            Alert.alert('Success', 'Appointment marked as no-show');\r\n          }\r\n          break;\r\n      }\r\n      \r\n      await fetchAppointments();\r\n    } catch (error) {\r\n      console.error('Error updating appointment:', error);\r\n      Alert.alert('Error', error.response?.data?.message || 'Failed to update appointment');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // First, add a promptDelete function to handle appointment deletion\r\n  const promptDelete = (appointmentId) => {\r\n    // Find the appointment to get more details for a better user experience\r\n    const appointment = appointments.find(app => app._id === appointmentId);\r\n    \r\n    Alert.alert(\r\n      'Delete Appointment',\r\n      `Are you sure you want to delete this appointment${appointment ? ` for ${appointment.service.name}` : ''}? This action cannot be undone.`,\r\n      [\r\n        {\r\n          text: 'Cancel',\r\n          style: 'cancel'\r\n        },\r\n        {\r\n          text: 'Delete',\r\n          onPress: () => deleteAppointment(appointmentId),\r\n          style: 'destructive'\r\n        }\r\n      ]\r\n    );\r\n    \r\n    // Debug info\r\n    console.log(`Prompted deletion for appointment ${appointmentId}`);\r\n  };\r\n\r\n  // Add a function to handle appointment deletion\r\n  const deleteAppointment = async (appointmentId) => {\r\n    try {\r\n      setLoading(true);\r\n      console.log(`Deleting appointment ${appointmentId}`);\r\n      \r\n      // Call the API to delete the appointment\r\n      const response = await appointmentsApi.deleteAppointment(appointmentId);\r\n      console.log('Delete appointment response:', response.data);\r\n      \r\n      if (response.data && response.data.success) {\r\n        Alert.alert('Success', 'Appointment deleted successfully');\r\n        // Reload appointments to refresh the list\r\n        await fetchAppointments();\r\n      } else {\r\n        console.error('Failed to delete appointment:', response.data);\r\n        Alert.alert('Error', response.data?.message || 'Failed to delete appointment');\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting appointment:', error);\r\n      Alert.alert('Error', error.response?.data?.message || 'Failed to delete appointment. Please try again.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Filter appointments by tab\r\n  const filteredAppointments = appointments.filter(appointment => {\r\n    // Improved date comparison\r\n    const appointmentDate = new Date(appointment.date);\r\n    const today = new Date();\r\n    \r\n    // Reset hours for date comparison\r\n    const todayForComparison = new Date();\r\n    todayForComparison.setHours(0, 0, 0, 0);\r\n    \r\n    const appointmentDay = appointmentDate.getDate();\r\n    const appointmentMonth = appointmentDate.getMonth();\r\n    const appointmentYear = appointmentDate.getFullYear();\r\n    \r\n    const todayDay = todayForComparison.getDate();\r\n    const todayMonth = todayForComparison.getMonth();\r\n    const todayYear = todayForComparison.getFullYear();\r\n    \r\n    // Check if the appointment is today\r\n    const isToday = appointmentDay === todayDay && \r\n                    appointmentMonth === todayMonth && \r\n                    appointmentYear === todayYear;\r\n    \r\n    // Check appointment status\r\n    const isCancelled = appointment.status === 'cancelled';\r\n    const isCompleted = appointment.status === 'completed';\r\n    const isNoShow = appointment.status === 'no-show';\r\n    const isActive = !isCancelled && !isCompleted && !isNoShow;\r\n    \r\n    // Use appointmentDate with time reset for proper comparison\r\n    const appointmentDateNoTime = new Date(appointmentDate);\r\n    appointmentDateNoTime.setHours(0, 0, 0, 0);\r\n    \r\n    // Future date (tomorrow or later)\r\n    const isFuture = appointmentDateNoTime > todayForComparison;\r\n    \r\n    // Past date (yesterday or earlier)\r\n    const isPast = appointmentDateNoTime < todayForComparison;\r\n    \r\n    if (activeTab === 'today') {\r\n      // Today tab should only show active appointments for today\r\n      return isToday && isActive;\r\n    } else if (activeTab === 'upcoming') {\r\n      // Upcoming tab should show future active appointments\r\n      // This includes tomorrow and later (not today)\r\n      return isFuture && isActive;\r\n    } else { // past tab\r\n      // Past tab shows:\r\n      // 1. Any appointment with status completed/cancelled/no-show (regardless of date)\r\n      // 2. Any appointment with date in the past (yesterday or earlier)\r\n      return isPast || isCancelled || isCompleted || isNoShow;\r\n    }\r\n  }).sort((a, b) => {\r\n    // Sort by date and time\r\n    const dateA = new Date(a.date);\r\n    const dateB = new Date(b.date);\r\n    \r\n    // For same day, sort by time\r\n    if (dateA.toDateString() === dateB.toDateString()) {\r\n      const [hoursA, minutesA] = a.startTime.split(':').map(Number);\r\n      const [hoursB, minutesB] = b.startTime.split(':').map(Number);\r\n      return (hoursA * 60 + minutesA) - (hoursB * 60 + minutesB);\r\n    }\r\n    \r\n    if (activeTab === 'past') {\r\n      return dateB - dateA; // Descending for past\r\n    } else {\r\n      return dateA - dateB; // Ascending for upcoming and today\r\n    }\r\n  });\r\n  \r\n  const renderAppointmentItem = ({ item }) => {\r\n    const isPast = new Date(item.date) < new Date() || \r\n                  item.status === 'completed' || \r\n                  item.status === 'cancelled' ||\r\n                  item.status === 'no-show';\r\n    \r\n    const toggleMenu = (id) => {\r\n      setMenuVisible({\r\n        ...menuVisible,\r\n        [id]: !menuVisible[id]\r\n      });\r\n    };\r\n    \r\n    return (\r\n      <Card style={[styles.card, isPast && styles.pastCard]}>\r\n        <Card.Content>\r\n          <View style={styles.headerRow}>\r\n            <Title>{item.service.name}</Title>\r\n            \r\n            {!isPast && (\r\n              <View>\r\n                <IconButton\r\n                  icon=\"dots-vertical\"\r\n                  onPress={() => toggleMenu(item._id)}\r\n                  size={24}\r\n                />\r\n                <Menu\r\n                  visible={menuVisible[item._id] || false}\r\n                  onDismiss={() => toggleMenu(item._id)}\r\n                  anchor={{ x: 200, y: 0 }}\r\n                  style={styles.menu}\r\n                >\r\n                  <Menu.Item\r\n                    onPress={() => openActionDialog(item, 'complete')}\r\n                    title=\"Mark as Complete\"\r\n                    icon=\"check\"\r\n                  />\r\n                  <Menu.Item\r\n                    onPress={() => openActionDialog(item, 'cancel')}\r\n                    title=\"Cancel Appointment\"\r\n                    icon=\"close\"\r\n                  />\r\n                  <Menu.Item\r\n                    onPress={() => openActionDialog(item, 'noshow')}\r\n                    title=\"Mark as No-Show\"\r\n                    icon=\"account-off\"\r\n                  />\r\n                  <Menu.Item\r\n                    onPress={() => promptDelete(item._id)}\r\n                    title=\"Delete Appointment\"\r\n                    icon=\"delete\"\r\n                  />\r\n                </Menu>\r\n              </View>\r\n            )}\r\n          </View>\r\n          \r\n          <View style={styles.row}>\r\n            <Text style={styles.label}>Customer:</Text>\r\n            <Text>{item.customer.name}</Text>\r\n          </View>\r\n          \r\n          <View style={styles.row}>\r\n            <Text style={styles.label}>Barber:</Text>\r\n            <Text>{item.barber.name}</Text>\r\n          </View>\r\n          \r\n          <View style={styles.row}>\r\n            <Text style={styles.label}>Date:</Text>\r\n            <Text>{format(new Date(item.date), 'MMMM d, yyyy')}</Text>\r\n          </View>\r\n          \r\n          <View style={styles.row}>\r\n            <Text style={styles.label}>Time:</Text>\r\n            <Text>{item.startTime} - {item.endTime}</Text>\r\n          </View>\r\n          \r\n          <View style={styles.row}>\r\n            <Text style={styles.label}>Service:</Text>\r\n            <Text>{item.service.name}</Text>\r\n          </View>\r\n          \r\n          <View style={styles.row}>\r\n            <Text style={styles.label}>Price:</Text>\r\n            <Text>${item.service.price}</Text>\r\n          </View>\r\n          \r\n          <View style={styles.statusContainer}>\r\n            <Chip\r\n              style={{\r\n                backgroundColor: \r\n                  item.status === 'confirmed' ? '#4CAF50' :\r\n                  item.status === 'pending' ? '#FFC107' :\r\n                  item.status === 'completed' ? '#3282B8' :\r\n                  item.status === 'no-show' ? '#9C27B0' : '#F44336'\r\n              }}\r\n              textStyle={{ color: 'white' }}\r\n            >\r\n              {item.status.toUpperCase()}\r\n            </Chip>\r\n          </View>\r\n          \r\n          {item.cancellationReason && (\r\n            <View style={styles.infoBox}>\r\n              <Text style={styles.label}>Cancellation Reason:</Text>\r\n              <Text>{item.cancellationReason}</Text>\r\n              {item.cancelledBy && (\r\n                <Text style={styles.subText}>Cancelled by: {item.cancelledBy}</Text>\r\n              )}\r\n            </View>\r\n          )}\r\n          \r\n          {item.notes && (\r\n            <View style={styles.infoBox}>\r\n              <Text style={styles.label}>Notes:</Text>\r\n              <Text>{item.notes}</Text>\r\n            </View>\r\n          )}\r\n          \r\n          {!isPast && (\r\n            <Button\r\n              mode=\"outlined\"\r\n              style={styles.cancelButton}\r\n              icon=\"close\"\r\n              onPress={() => openActionDialog(item, 'cancel')}\r\n            >\r\n              Cancel Appointment\r\n            </Button>\r\n          )}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  };\r\n  \r\n  if (loading && !refreshing) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Appointments Management</Text>\r\n      </View>\r\n      \r\n      <View style={styles.tabContainer}>\r\n        <Button\r\n          mode={activeTab === 'today' ? 'contained' : 'outlined'}\r\n          onPress={() => setActiveTab('today')}\r\n          style={[styles.tabButton, { flex: 1 }]}\r\n        >\r\n          Today\r\n        </Button>\r\n        <Button\r\n          mode={activeTab === 'upcoming' ? 'contained' : 'outlined'}\r\n          onPress={() => setActiveTab('upcoming')}\r\n          style={[styles.tabButton, { flex: 1 }]}\r\n        >\r\n          Upcoming\r\n        </Button>\r\n        <Button\r\n          mode={activeTab === 'past' ? 'contained' : 'outlined'}\r\n          onPress={() => setActiveTab('past')}\r\n          style={[styles.tabButton, { flex: 1 }]}\r\n        >\r\n          Past\r\n        </Button>\r\n      </View>\r\n      \r\n      <Divider />\r\n      \r\n      {error ? (\r\n        <Banner\r\n          visible={true}\r\n          icon=\"alert\"\r\n          actions={[\r\n            {\r\n              label: 'Retry',\r\n              onPress: fetchAppointments,\r\n            },\r\n          ]}\r\n        >\r\n          {error}\r\n        </Banner>\r\n      ) : (\r\n        <FlatList\r\n          data={filteredAppointments}\r\n          renderItem={renderAppointmentItem}\r\n          keyExtractor={(item) => item._id}\r\n          contentContainerStyle={styles.appointmentsList}\r\n          refreshControl={\r\n            <RefreshControl\r\n              refreshing={refreshing}\r\n              onRefresh={onRefresh}\r\n              colors={['#0F4C75']}\r\n            />\r\n          }\r\n          ListEmptyComponent={\r\n            <View style={styles.emptyContainer}>\r\n              <Text style={styles.emptyText}>\r\n                {activeTab === 'today'\r\n                  ? \"You don't have any appointments scheduled for today\"\r\n                  : activeTab === 'upcoming'\r\n                  ? \"You don't have any upcoming appointments\"\r\n                  : \"You don't have any past appointments\"}\r\n              </Text>\r\n            </View>\r\n          }\r\n        />\r\n      )}\r\n      \r\n      <Portal>\r\n        <Dialog visible={dialogVisible} onDismiss={() => setDialogVisible(false)}>\r\n          <Dialog.Title>\r\n            {actionDialogType === 'cancel' ? 'Cancel Appointment' : \r\n             actionDialogType === 'complete' ? 'Complete Appointment' : \r\n             'Mark as No-Show'}\r\n          </Dialog.Title>\r\n          <Dialog.Content>\r\n            <Text style={styles.dialogText}>\r\n              {actionDialogType === 'cancel' ? 'Please provide a reason for cancelling:' : \r\n               actionDialogType === 'complete' ? 'Add any notes about this appointment (optional):' : \r\n               'Add any notes about this no-show (optional):'}\r\n            </Text>\r\n            <TextInput\r\n              style={styles.input}\r\n              value={actionReason}\r\n              onChangeText={setActionReason}\r\n              placeholder={\r\n                actionDialogType === 'cancel' ? \"e.g., Customer requested cancellation\" : \r\n                actionDialogType === 'complete' ? \"e.g., Service notes, products used\" : \r\n                \"e.g., Customer didn't show up, no call\"\r\n              }\r\n              multiline\r\n            />\r\n          </Dialog.Content>\r\n          <Dialog.Actions>\r\n            <Button onPress={() => setDialogVisible(false)}>Cancel</Button>\r\n            <Button onPress={performAppointmentAction}>Confirm</Button>\r\n          </Dialog.Actions>\r\n        </Dialog>\r\n      </Portal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  header: {\r\n    backgroundColor: '#0F4C75',\r\n    padding: 20,\r\n    paddingTop: 50,\r\n    paddingBottom: 20,\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n  tabContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    padding: 10,\r\n    backgroundColor: 'white',\r\n  },\r\n  tabButton: {\r\n    margin: 5,\r\n  },\r\n  appointmentsList: {\r\n    padding: 15,\r\n    paddingBottom: 80,\r\n  },\r\n  card: {\r\n    marginBottom: 15,\r\n    borderRadius: 10,\r\n    elevation: 3,\r\n  },\r\n  pastCard: {\r\n    opacity: 0.8,\r\n  },\r\n  headerRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginVertical: 5,\r\n  },\r\n  label: {\r\n    fontWeight: 'bold',\r\n    color: '#666',\r\n  },\r\n  subText: {\r\n    fontSize: 12,\r\n    color: '#888',\r\n    fontStyle: 'italic',\r\n    marginTop: 2,\r\n  },\r\n  statusContainer: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    alignItems: 'flex-start',\r\n  },\r\n  emptyContainer: {\r\n    padding: 20,\r\n    alignItems: 'center',\r\n  },\r\n  emptyText: {\r\n    fontSize: 16,\r\n    color: 'gray',\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n  },\r\n  dialogText: {\r\n    marginBottom: 10,\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginTop: 5,\r\n    minHeight: 80,\r\n  },\r\n  menu: {\r\n    position: 'absolute',\r\n    top: 50,\r\n    right: 10,\r\n  },\r\n  infoBox: {\r\n    backgroundColor: '#f9f9f9',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    marginTop: 10,\r\n  },\r\n  cancelButton: {\r\n    marginTop: 15,\r\n    borderColor: '#F44336',\r\n    borderWidth: 1,\r\n  },\r\n});\r\n\r\nexport default BarberAppointmentsScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}