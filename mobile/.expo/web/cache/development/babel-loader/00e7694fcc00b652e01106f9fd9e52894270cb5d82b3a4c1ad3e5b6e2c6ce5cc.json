{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport findIndex from 'lodash/findIndex';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { extractCalendarProps, extractHeaderProps } from \"../componentUpdater\";\nimport { parseDate, toMarkingFormat, xdateToData } from \"../interface\";\nimport { page, sameDate, sameMonth } from \"../dateutils\";\nimport constants from \"../commons/constants\";\nimport { useDidUpdate } from \"../hooks\";\nimport styleConstructor from \"./style\";\nimport Calendar from \"../calendar\";\nimport CalendarListItem from \"./item\";\nimport CalendarHeader from \"../calendar/header/index\";\nimport isEqual from 'lodash/isEqual';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CALENDAR_WIDTH = constants.screenWidth;\nvar CALENDAR_HEIGHT = 360;\nvar PAST_SCROLL_RANGE = 50;\nvar FUTURE_SCROLL_RANGE = 50;\nvar CalendarList = function CalendarList(props, ref) {\n  useImperativeHandle(ref, function () {\n    return {\n      scrollToDay: function scrollToDay(date, offset, animated) {\n        _scrollToDay(date, offset, animated);\n      },\n      scrollToMonth: function scrollToMonth(date) {\n        _scrollToMonth(date);\n      }\n    };\n  });\n  var theme = props.theme,\n    current = props.current,\n    firstDay = props.firstDay,\n    markedDates = props.markedDates,\n    headerStyle = props.headerStyle,\n    onMonthChange = props.onMonthChange,\n    onVisibleMonthsChange = props.onVisibleMonthsChange,\n    _props$pastScrollRang = props.pastScrollRange,\n    pastScrollRange = _props$pastScrollRang === void 0 ? PAST_SCROLL_RANGE : _props$pastScrollRang,\n    _props$futureScrollRa = props.futureScrollRange,\n    futureScrollRange = _props$futureScrollRa === void 0 ? FUTURE_SCROLL_RANGE : _props$futureScrollRa,\n    _props$calendarHeight = props.calendarHeight,\n    calendarHeight = _props$calendarHeight === void 0 ? CALENDAR_HEIGHT : _props$calendarHeight,\n    _props$calendarWidth = props.calendarWidth,\n    calendarWidth = _props$calendarWidth === void 0 ? CALENDAR_WIDTH : _props$calendarWidth,\n    calendarStyle = props.calendarStyle,\n    _props$animateScroll = props.animateScroll,\n    animateScroll = _props$animateScroll === void 0 ? false : _props$animateScroll,\n    _props$showScrollIndi = props.showScrollIndicator,\n    showScrollIndicator = _props$showScrollIndi === void 0 ? false : _props$showScrollIndi,\n    staticHeader = props.staticHeader,\n    testID = props.testID,\n    propsStyle = props.style,\n    onLayout = props.onLayout,\n    removeClippedSubviews = props.removeClippedSubviews,\n    _props$horizontal = props.horizontal,\n    horizontal = _props$horizontal === void 0 ? false : _props$horizontal,\n    pagingEnabled = props.pagingEnabled,\n    _props$scrollEnabled = props.scrollEnabled,\n    scrollEnabled = _props$scrollEnabled === void 0 ? true : _props$scrollEnabled,\n    _props$nestedScrollEn = props.nestedScrollEnabled,\n    nestedScrollEnabled = _props$nestedScrollEn === void 0 ? true : _props$nestedScrollEn,\n    _props$scrollsToTop = props.scrollsToTop,\n    scrollsToTop = _props$scrollsToTop === void 0 ? false : _props$scrollsToTop,\n    _props$keyExtractor = props.keyExtractor,\n    keyExtractor = _props$keyExtractor === void 0 ? function (_, index) {\n      return String(index);\n    } : _props$keyExtractor,\n    keyboardShouldPersistTaps = props.keyboardShouldPersistTaps,\n    onScrollBeginDrag = props.onScrollBeginDrag,\n    onScrollEndDrag = props.onScrollEndDrag,\n    onMomentumScrollBegin = props.onMomentumScrollBegin,\n    onMomentumScrollEnd = props.onMomentumScrollEnd,\n    contentContainerStyle = props.contentContainerStyle,\n    onEndReachedThreshold = props.onEndReachedThreshold,\n    onEndReached = props.onEndReached,\n    onHeaderLayout = props.onHeaderLayout;\n  var calendarProps = extractCalendarProps(props);\n  var headerProps = extractHeaderProps(props);\n  var calendarSize = horizontal ? calendarWidth : calendarHeight;\n  var shouldUseStaticHeader = staticHeader && horizontal;\n  var _useState = useState(parseDate(current)),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentMonth = _useState2[0],\n    setCurrentMonth = _useState2[1];\n  var shouldFixRTL = useMemo(function () {\n    return !constants.isRN73() && constants.isAndroidRTL && horizontal;\n  }, [horizontal]);\n  var shouldMeasureHeader = useRef(true);\n  var style = useRef(styleConstructor(theme));\n  var list = useRef();\n  var range = useRef(horizontal ? 1 : 3);\n  var initialDate = useRef(parseDate(current) || new XDate());\n  var visibleMonth = useRef(currentMonth);\n  var items = useMemo(function () {\n    var months = [];\n    for (var i = 0; i <= pastScrollRange + futureScrollRange; i++) {\n      var _initialDate$current;\n      var rangeDate = (_initialDate$current = initialDate.current) == null ? void 0 : _initialDate$current.clone().addMonths(i - pastScrollRange, true);\n      months.push(rangeDate);\n    }\n    return months;\n  }, [pastScrollRange, futureScrollRange]);\n  var staticHeaderStyle = useMemo(function () {\n    return [style.current.staticHeader, headerStyle];\n  }, [headerStyle]);\n  var listStyle = useMemo(function () {\n    return [style.current.container, propsStyle];\n  }, [propsStyle]);\n  var initialDateIndex = useMemo(function () {\n    return findIndex(items, function (item) {\n      var _initialDate$current2;\n      return item.toString() === ((_initialDate$current2 = initialDate.current) == null ? void 0 : _initialDate$current2.toString());\n    });\n  }, [items]);\n  var getDateIndex = useCallback(function (date) {\n    return findIndex(items, function (item) {\n      return item.toString() === date.toString();\n    });\n  }, [items]);\n  useEffect(function () {\n    if (current) {\n      _scrollToMonth(new XDate(current));\n    }\n  }, [current]);\n  useDidUpdate(function () {\n    var currMont = currentMonth == null ? void 0 : currentMonth.clone();\n    if (currMont) {\n      var data = xdateToData(currMont);\n      onMonthChange == null ? void 0 : onMonthChange(data);\n      onVisibleMonthsChange == null ? void 0 : onVisibleMonthsChange([data]);\n    }\n  }, [currentMonth]);\n  var _scrollToDay = function _scrollToDay(date, offset, animated) {\n    var _initialDate$current3;\n    var scrollTo = parseDate(date);\n    var diffMonths = Math.round(initialDate == null ? void 0 : (_initialDate$current3 = initialDate.current) == null ? void 0 : _initialDate$current3.clone().setDate(1).diffMonths(scrollTo == null ? void 0 : scrollTo.clone().setDate(1)));\n    var scrollAmount = calendarSize * pastScrollRange + diffMonths * calendarSize + (offset || 0);\n    if (!horizontal) {\n      var week = 0;\n      var days = page(scrollTo, firstDay);\n      for (var i = 0; i < days.length; i++) {\n        week = Math.floor(i / 7);\n        if (sameDate(days[i], scrollTo)) {\n          scrollAmount += 46 * week;\n          break;\n        }\n      }\n    }\n    if (scrollAmount !== 0) {\n      var _list$current;\n      list == null ? void 0 : (_list$current = list.current) == null ? void 0 : _list$current.scrollToOffset({\n        offset: scrollAmount,\n        animated: animated\n      });\n    }\n  };\n  var _scrollToMonth = useCallback(function (date) {\n    var _initialDate$current4;\n    var scrollTo = parseDate(date);\n    var diffMonths = Math.round(initialDate == null ? void 0 : (_initialDate$current4 = initialDate.current) == null ? void 0 : _initialDate$current4.clone().setDate(1).diffMonths(scrollTo == null ? void 0 : scrollTo.clone().setDate(1)));\n    var scrollAmount = calendarSize * (shouldFixRTL ? pastScrollRange - diffMonths : pastScrollRange + diffMonths);\n    if (scrollAmount !== 0) {\n      var _list$current2;\n      list == null ? void 0 : (_list$current2 = list.current) == null ? void 0 : _list$current2.scrollToOffset({\n        offset: scrollAmount,\n        animated: animateScroll\n      });\n    }\n  }, [calendarSize, shouldFixRTL, pastScrollRange, animateScroll]);\n  var addMonth = useCallback(function (count) {\n    var day = currentMonth == null ? void 0 : currentMonth.clone().addMonths(count, true);\n    if (sameMonth(day, currentMonth) || getDateIndex(day) === -1) {\n      return;\n    }\n    _scrollToMonth(day);\n    setCurrentMonth(day);\n  }, [currentMonth, _scrollToMonth]);\n  var getMarkedDatesForItem = useCallback(function (item) {\n    if (markedDates && item) {\n      for (var _ref of Object.entries(markedDates)) {\n        var _ref2 = _slicedToArray(_ref, 2);\n        var key = _ref2[0];\n        var _ = _ref2[1];\n        if (sameMonth(new XDate(key), new XDate(item))) {\n          return markedDates;\n        }\n      }\n    }\n  }, [markedDates]);\n  var getItemLayout = useCallback(function (_, index) {\n    return {\n      length: calendarSize,\n      offset: calendarSize * index,\n      index: index\n    };\n  }, []);\n  var isDateInRange = useCallback(function (date) {\n    for (var i = -range.current; i <= range.current; i++) {\n      var newMonth = currentMonth == null ? void 0 : currentMonth.clone().addMonths(i, true);\n      if (sameMonth(date, newMonth)) {\n        return true;\n      }\n    }\n    return false;\n  }, [currentMonth]);\n  var renderItem = useCallback(function (_ref3) {\n    var item = _ref3.item;\n    var dateString = toMarkingFormat(item);\n    var _dateString$split = dateString.split('-'),\n      _dateString$split2 = _slicedToArray(_dateString$split, 2),\n      year = _dateString$split2[0],\n      month = _dateString$split2[1];\n    var testId = testID + \".item_\" + year + \"-\" + month;\n    var onHeaderLayoutToPass = shouldMeasureHeader.current ? onHeaderLayout : undefined;\n    shouldMeasureHeader.current = false;\n    return _jsx(CalendarListItem, _objectSpread(_objectSpread({}, calendarProps), {}, {\n      testID: testId,\n      markedDates: getMarkedDatesForItem(item),\n      item: item,\n      style: calendarStyle,\n      horizontal: horizontal,\n      calendarWidth: calendarWidth,\n      calendarHeight: calendarHeight,\n      scrollToMonth: _scrollToMonth,\n      visible: isDateInRange(item),\n      onHeaderLayout: onHeaderLayoutToPass\n    }));\n  }, [horizontal, calendarStyle, calendarWidth, testID, getMarkedDatesForItem, isDateInRange, calendarProps]);\n  var renderStaticHeader = function renderStaticHeader() {\n    if (shouldUseStaticHeader) {\n      var onHeaderLayoutToPass = shouldMeasureHeader.current ? onHeaderLayout : undefined;\n      shouldMeasureHeader.current = false;\n      return _jsx(CalendarHeader, _objectSpread(_objectSpread({}, headerProps), {}, {\n        testID: testID + \".staticHeader\",\n        style: staticHeaderStyle,\n        month: currentMonth,\n        addMonth: addMonth,\n        accessibilityElementsHidden: true,\n        importantForAccessibility: 'no-hide-descendants',\n        onHeaderLayout: onHeaderLayoutToPass\n      }));\n    }\n  };\n  var viewabilityConfig = useRef({\n    viewAreaCoveragePercentThreshold: 20\n  });\n  var onViewableItemsChanged = useCallback(function (_ref4) {\n    var _viewableItems$;\n    var viewableItems = _ref4.viewableItems;\n    var newVisibleMonth = parseDate((_viewableItems$ = viewableItems[0]) == null ? void 0 : _viewableItems$.item);\n    if (shouldFixRTL) {\n      var centerIndex = items.findIndex(function (item) {\n        return isEqual(parseDate(current), item);\n      });\n      var adjustedOffset = centerIndex - items.findIndex(function (item) {\n        return isEqual(newVisibleMonth, item);\n      });\n      visibleMonth.current = items[centerIndex + adjustedOffset];\n      setCurrentMonth(visibleMonth.current);\n    } else {\n      if (!sameDate(visibleMonth == null ? void 0 : visibleMonth.current, newVisibleMonth)) {\n        visibleMonth.current = newVisibleMonth;\n        setCurrentMonth(visibleMonth.current);\n      }\n    }\n  }, [items, shouldFixRTL, current]);\n  var viewabilityConfigCallbackPairs = useRef([{\n    viewabilityConfig: viewabilityConfig.current,\n    onViewableItemsChanged: onViewableItemsChanged\n  }]);\n  return _jsxs(View, {\n    style: style.current.flatListContainer,\n    testID: testID,\n    children: [_jsx(FlatList, {\n      ref: list,\n      windowSize: shouldFixRTL ? pastScrollRange + futureScrollRange + 1 : undefined,\n      style: listStyle,\n      showsVerticalScrollIndicator: showScrollIndicator,\n      showsHorizontalScrollIndicator: showScrollIndicator,\n      data: items,\n      renderItem: renderItem,\n      getItemLayout: getItemLayout,\n      initialNumToRender: range.current,\n      initialScrollIndex: initialDateIndex,\n      viewabilityConfigCallbackPairs: viewabilityConfigCallbackPairs.current,\n      testID: testID + \".list\",\n      onLayout: onLayout,\n      removeClippedSubviews: removeClippedSubviews,\n      pagingEnabled: pagingEnabled,\n      scrollEnabled: scrollEnabled,\n      scrollsToTop: scrollsToTop,\n      horizontal: horizontal,\n      keyboardShouldPersistTaps: keyboardShouldPersistTaps,\n      keyExtractor: keyExtractor,\n      onEndReachedThreshold: onEndReachedThreshold,\n      onEndReached: onEndReached,\n      nestedScrollEnabled: nestedScrollEnabled,\n      onMomentumScrollBegin: onMomentumScrollBegin,\n      onMomentumScrollEnd: onMomentumScrollEnd,\n      onScrollBeginDrag: onScrollBeginDrag,\n      onScrollEndDrag: onScrollEndDrag,\n      contentContainerStyle: contentContainerStyle\n    }), renderStaticHeader()]\n  });\n};\nexport default forwardRef(CalendarList);\nCalendarList.displayName = 'CalendarList';\nCalendarList.propTypes = _objectSpread(_objectSpread({}, Calendar.propTypes), {}, {\n  pastScrollRange: PropTypes.number,\n  futureScrollRange: PropTypes.number,\n  calendarWidth: PropTypes.number,\n  calendarHeight: PropTypes.number,\n  calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  staticHeader: PropTypes.bool,\n  showScrollIndicator: PropTypes.bool,\n  animateScroll: PropTypes.bool,\n  scrollEnabled: PropTypes.bool,\n  scrollsToTop: PropTypes.bool,\n  pagingEnabled: PropTypes.bool,\n  horizontal: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n  keyExtractor: PropTypes.func,\n  onEndReachedThreshold: PropTypes.number,\n  onEndReached: PropTypes.func,\n  nestedScrollEnabled: PropTypes.bool\n});","map":{"version":3,"names":["findIndex","PropTypes","XDate","React","forwardRef","useCallback","useEffect","useImperativeHandle","useMemo","useRef","useState","FlatList","View","extractCalendarProps","extractHeaderProps","parseDate","toMarkingFormat","xdateToData","page","sameDate","sameMonth","constants","useDidUpdate","styleConstructor","Calendar","CalendarListItem","CalendarHeader","isEqual","jsx","_jsx","jsxs","_jsxs","CALENDAR_WIDTH","screenWidth","CALENDAR_HEIGHT","PAST_SCROLL_RANGE","FUTURE_SCROLL_RANGE","CalendarList","props","ref","scrollToDay","date","offset","animated","scrollToMonth","theme","current","firstDay","markedDates","headerStyle","onMonthChange","onVisibleMonthsChange","_props$pastScrollRang","pastScrollRange","_props$futureScrollRa","futureScrollRange","_props$calendarHeight","calendarHeight","_props$calendarWidth","calendarWidth","calendarStyle","_props$animateScroll","animateScroll","_props$showScrollIndi","showScrollIndicator","staticHeader","testID","propsStyle","style","onLayout","removeClippedSubviews","_props$horizontal","horizontal","pagingEnabled","_props$scrollEnabled","scrollEnabled","_props$nestedScrollEn","nestedScrollEnabled","_props$scrollsToTop","scrollsToTop","_props$keyExtractor","keyExtractor","_","index","String","keyboardShouldPersistTaps","onScrollBeginDrag","onScrollEndDrag","onMomentumScrollBegin","onMomentumScrollEnd","contentContainerStyle","onEndReachedThreshold","onEndReached","onHeaderLayout","calendarProps","headerProps","calendarSize","shouldUseStaticHeader","_useState","_useState2","_slicedToArray","currentMonth","setCurrentMonth","shouldFixRTL","isRN73","isAndroidRTL","shouldMeasureHeader","list","range","initialDate","visibleMonth","items","months","i","_initialDate$current","rangeDate","clone","addMonths","push","staticHeaderStyle","listStyle","container","initialDateIndex","item","_initialDate$current2","toString","getDateIndex","currMont","data","_initialDate$current3","scrollTo","diffMonths","Math","round","setDate","scrollAmount","week","days","length","floor","_list$current","scrollToOffset","_initialDate$current4","_list$current2","addMonth","count","day","getMarkedDatesForItem","_ref","Object","entries","_ref2","key","getItemLayout","isDateInRange","newMonth","renderItem","_ref3","dateString","_dateString$split","split","_dateString$split2","year","month","testId","onHeaderLayoutToPass","undefined","_objectSpread","visible","renderStaticHeader","accessibilityElementsHidden","importantForAccessibility","viewabilityConfig","viewAreaCoveragePercentThreshold","onViewableItemsChanged","_ref4","_viewableItems$","viewableItems","newVisibleMonth","centerIndex","adjustedOffset","viewabilityConfigCallbackPairs","flatListContainer","children","windowSize","showsVerticalScrollIndicator","showsHorizontalScrollIndicator","initialNumToRender","initialScrollIndex","displayName","propTypes","number","oneOfType","object","array","bool","oneOf","func"],"sources":["C:/Users/User/Downloads/mobile/node_modules/react-native-calendars/src/calendar-list/index.js"],"sourcesContent":["import findIndex from 'lodash/findIndex';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { FlatList, View } from 'react-native';\nimport { extractCalendarProps, extractHeaderProps } from '../componentUpdater';\nimport { parseDate, toMarkingFormat, xdateToData } from '../interface';\nimport { page, sameDate, sameMonth } from '../dateutils';\nimport constants from '../commons/constants';\nimport { useDidUpdate } from '../hooks';\nimport styleConstructor from './style';\nimport Calendar from '../calendar';\nimport CalendarListItem from './item';\nimport CalendarHeader from '../calendar/header/index';\nimport isEqual from 'lodash/isEqual';\nconst CALENDAR_WIDTH = constants.screenWidth;\nconst CALENDAR_HEIGHT = 360;\nconst PAST_SCROLL_RANGE = 50;\nconst FUTURE_SCROLL_RANGE = 50;\n/**\n * @description: Calendar List component for both vertical and horizontal calendars\n * @extends: Calendar\n * @extendslink: docs/Calendar\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendarsList.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/assets/calendar-list.gif\n */\nconst CalendarList = (props, ref) => {\n    useImperativeHandle(ref, () => ({\n        scrollToDay: (date, offset, animated) => {\n            scrollToDay(date, offset, animated);\n        },\n        scrollToMonth: (date) => {\n            scrollToMonth(date);\n        }\n    }));\n    const { \n    /** Calendar props */\n    theme, current, firstDay, markedDates, headerStyle, onMonthChange, onVisibleMonthsChange, \n    /** CalendarList props */\n    pastScrollRange = PAST_SCROLL_RANGE, futureScrollRange = FUTURE_SCROLL_RANGE, calendarHeight = CALENDAR_HEIGHT, calendarWidth = CALENDAR_WIDTH, calendarStyle, animateScroll = false, showScrollIndicator = false, staticHeader, \n    /** View props */\n    testID, style: propsStyle, onLayout, removeClippedSubviews, \n    /** ScrollView props */\n    horizontal = false, pagingEnabled, scrollEnabled = true, nestedScrollEnabled = true, scrollsToTop = false, keyExtractor = (_, index) => String(index), keyboardShouldPersistTaps, onScrollBeginDrag, onScrollEndDrag, onMomentumScrollBegin, onMomentumScrollEnd, \n    /** FlatList props */\n    contentContainerStyle, onEndReachedThreshold, onEndReached, onHeaderLayout } = props;\n    const calendarProps = extractCalendarProps(props);\n    const headerProps = extractHeaderProps(props);\n    const calendarSize = horizontal ? calendarWidth : calendarHeight;\n    const shouldUseStaticHeader = staticHeader && horizontal;\n    const [currentMonth, setCurrentMonth] = useState(parseDate(current));\n    const shouldFixRTL = useMemo(() => !constants.isRN73() && constants.isAndroidRTL && horizontal, [horizontal]);\n    /**\n     * we render a lot of months in the calendar list and we need to measure the header only once\n     * so we use this ref to limit the header measurement to the first render\n     */\n    const shouldMeasureHeader = useRef(true);\n    const style = useRef(styleConstructor(theme));\n    const list = useRef();\n    const range = useRef(horizontal ? 1 : 3);\n    const initialDate = useRef(parseDate(current) || new XDate());\n    const visibleMonth = useRef(currentMonth);\n    const items = useMemo(() => {\n        const months = [];\n        for (let i = 0; i <= pastScrollRange + futureScrollRange; i++) {\n            const rangeDate = initialDate.current?.clone().addMonths(i - pastScrollRange, true);\n            months.push(rangeDate);\n        }\n        return months;\n    }, [pastScrollRange, futureScrollRange]);\n    const staticHeaderStyle = useMemo(() => {\n        return [style.current.staticHeader, headerStyle];\n    }, [headerStyle]);\n    const listStyle = useMemo(() => {\n        return [style.current.container, propsStyle];\n    }, [propsStyle]);\n    const initialDateIndex = useMemo(() => {\n        return findIndex(items, function (item) {\n            return item.toString() === initialDate.current?.toString();\n        });\n    }, [items]);\n    const getDateIndex = useCallback((date) => {\n        return findIndex(items, function (item) {\n            return item.toString() === date.toString();\n        });\n    }, [items]);\n    useEffect(() => {\n        if (current) {\n            scrollToMonth(new XDate(current));\n        }\n    }, [current]);\n    useDidUpdate(() => {\n        const currMont = currentMonth?.clone();\n        if (currMont) {\n            const data = xdateToData(currMont);\n            onMonthChange?.(data);\n            onVisibleMonthsChange?.([data]);\n        }\n    }, [currentMonth]);\n    const scrollToDay = (date, offset, animated) => {\n        const scrollTo = parseDate(date);\n        const diffMonths = Math.round(initialDate?.current?.clone().setDate(1).diffMonths(scrollTo?.clone().setDate(1)));\n        let scrollAmount = calendarSize * pastScrollRange + diffMonths * calendarSize + (offset || 0);\n        if (!horizontal) {\n            let week = 0;\n            const days = page(scrollTo, firstDay);\n            for (let i = 0; i < days.length; i++) {\n                week = Math.floor(i / 7);\n                if (sameDate(days[i], scrollTo)) {\n                    scrollAmount += 46 * week;\n                    break;\n                }\n            }\n        }\n        if (scrollAmount !== 0) {\n            list?.current?.scrollToOffset({ offset: scrollAmount, animated });\n        }\n    };\n    const scrollToMonth = useCallback((date) => {\n        const scrollTo = parseDate(date);\n        const diffMonths = Math.round(initialDate?.current?.clone().setDate(1).diffMonths(scrollTo?.clone().setDate(1)));\n        const scrollAmount = calendarSize * (shouldFixRTL ? pastScrollRange - diffMonths : pastScrollRange + diffMonths);\n        if (scrollAmount !== 0) {\n            list?.current?.scrollToOffset({ offset: scrollAmount, animated: animateScroll });\n        }\n    }, [calendarSize, shouldFixRTL, pastScrollRange, animateScroll]);\n    const addMonth = useCallback((count) => {\n        const day = currentMonth?.clone().addMonths(count, true);\n        if (sameMonth(day, currentMonth) || getDateIndex(day) === -1) {\n            return;\n        }\n        scrollToMonth(day);\n        setCurrentMonth(day);\n    }, [currentMonth, scrollToMonth]);\n    const getMarkedDatesForItem = useCallback((item) => {\n        if (markedDates && item) {\n            for (const [key, _] of Object.entries(markedDates)) {\n                if (sameMonth(new XDate(key), new XDate(item))) {\n                    return markedDates;\n                }\n            }\n        }\n    }, [markedDates]);\n    const getItemLayout = useCallback((_, index) => {\n        return {\n            length: calendarSize,\n            offset: calendarSize * index,\n            index\n        };\n    }, []);\n    const isDateInRange = useCallback((date) => {\n        for (let i = -range.current; i <= range.current; i++) {\n            const newMonth = currentMonth?.clone().addMonths(i, true);\n            if (sameMonth(date, newMonth)) {\n                return true;\n            }\n        }\n        return false;\n    }, [currentMonth]);\n    const renderItem = useCallback(({ item }) => {\n        const dateString = toMarkingFormat(item);\n        const [year, month] = dateString.split('-');\n        const testId = `${testID}.item_${year}-${month}`;\n        const onHeaderLayoutToPass = shouldMeasureHeader.current ? onHeaderLayout : undefined;\n        shouldMeasureHeader.current = false;\n        return (<CalendarListItem {...calendarProps} testID={testId} markedDates={getMarkedDatesForItem(item)} item={item} style={calendarStyle} \n        // @ts-expect-error - type mismatch - ScrollView's 'horizontal' is nullable\n        horizontal={horizontal} calendarWidth={calendarWidth} calendarHeight={calendarHeight} scrollToMonth={scrollToMonth} visible={isDateInRange(item)} onHeaderLayout={onHeaderLayoutToPass}/>);\n    }, [horizontal, calendarStyle, calendarWidth, testID, getMarkedDatesForItem, isDateInRange, calendarProps]);\n    const renderStaticHeader = () => {\n        if (shouldUseStaticHeader) {\n            const onHeaderLayoutToPass = shouldMeasureHeader.current ? onHeaderLayout : undefined;\n            shouldMeasureHeader.current = false;\n            return (<CalendarHeader {...headerProps} testID={`${testID}.staticHeader`} style={staticHeaderStyle} month={currentMonth} addMonth={addMonth} accessibilityElementsHidden={true} // iOS\n             importantForAccessibility={'no-hide-descendants'} // Android\n             onHeaderLayout={onHeaderLayoutToPass}/>);\n        }\n    };\n    /** Viewable month */\n    const viewabilityConfig = useRef({\n        viewAreaCoveragePercentThreshold: 20\n    });\n    const onViewableItemsChanged = useCallback(({ viewableItems }) => {\n        const newVisibleMonth = parseDate(viewableItems[0]?.item);\n        if (shouldFixRTL) {\n            const centerIndex = items.findIndex((item) => isEqual(parseDate(current), item));\n            const adjustedOffset = centerIndex - items.findIndex((item) => isEqual(newVisibleMonth, item));\n            visibleMonth.current = items[centerIndex + adjustedOffset];\n            setCurrentMonth(visibleMonth.current);\n        }\n        else {\n            if (!sameDate(visibleMonth?.current, newVisibleMonth)) {\n                visibleMonth.current = newVisibleMonth;\n                setCurrentMonth(visibleMonth.current);\n            }\n        }\n    }, [items, shouldFixRTL, current]);\n    const viewabilityConfigCallbackPairs = useRef([\n        {\n            viewabilityConfig: viewabilityConfig.current,\n            onViewableItemsChanged\n        }\n    ]);\n    return (<View style={style.current.flatListContainer} testID={testID}>\n      <FlatList ref={list} windowSize={shouldFixRTL ? pastScrollRange + futureScrollRange + 1 : undefined} style={listStyle} showsVerticalScrollIndicator={showScrollIndicator} showsHorizontalScrollIndicator={showScrollIndicator} data={items} renderItem={renderItem} getItemLayout={getItemLayout} initialNumToRender={range.current} initialScrollIndex={initialDateIndex} viewabilityConfigCallbackPairs={viewabilityConfigCallbackPairs.current} testID={`${testID}.list`} onLayout={onLayout} removeClippedSubviews={removeClippedSubviews} pagingEnabled={pagingEnabled} scrollEnabled={scrollEnabled} scrollsToTop={scrollsToTop} horizontal={horizontal} keyboardShouldPersistTaps={keyboardShouldPersistTaps} keyExtractor={keyExtractor} onEndReachedThreshold={onEndReachedThreshold} onEndReached={onEndReached} nestedScrollEnabled={nestedScrollEnabled} onMomentumScrollBegin={onMomentumScrollBegin} onMomentumScrollEnd={onMomentumScrollEnd} onScrollBeginDrag={onScrollBeginDrag} onScrollEndDrag={onScrollEndDrag} contentContainerStyle={contentContainerStyle}/>\n      {renderStaticHeader()}\n    </View>);\n};\nexport default forwardRef(CalendarList);\nCalendarList.displayName = 'CalendarList';\nCalendarList.propTypes = {\n    ...Calendar.propTypes,\n    pastScrollRange: PropTypes.number,\n    futureScrollRange: PropTypes.number,\n    calendarWidth: PropTypes.number,\n    calendarHeight: PropTypes.number,\n    calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    staticHeader: PropTypes.bool,\n    showScrollIndicator: PropTypes.bool,\n    animateScroll: PropTypes.bool,\n    scrollEnabled: PropTypes.bool,\n    scrollsToTop: PropTypes.bool,\n    pagingEnabled: PropTypes.bool,\n    horizontal: PropTypes.bool,\n    keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n    keyExtractor: PropTypes.func,\n    onEndReachedThreshold: PropTypes.number,\n    onEndReached: PropTypes.func,\n    nestedScrollEnabled: PropTypes.bool\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}