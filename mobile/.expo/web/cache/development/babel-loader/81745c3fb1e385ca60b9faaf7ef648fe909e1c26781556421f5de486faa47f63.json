{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text, Card, Title, Paragraph, Avatar, Button, ActivityIndicator, Chip, Searchbar, ProgressBar, Modal, Portal, DataTable } from 'react-native-paper';\nimport { Ionicons } from '@expo/vector-icons';\nimport { AuthContext } from \"../../context/AuthContext\";\nimport apiClient from \"../../api/client\";\nimport { format } from 'date-fns';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ManagerDashboardScreen = function ManagerDashboardScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(AuthContext),\n    userInfo = _useContext.userInfo;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    barbers = _useState4[0],\n    setBarbers = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedBarber = _useState6[0],\n    setSelectedBarber = _useState6[1];\n  var _useState7 = useState({}),\n    _useState8 = _slicedToArray(_useState7, 2),\n    barberStats = _useState8[0],\n    setBarberStats = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    searchQuery = _useState10[0],\n    setSearchQuery = _useState10[1];\n  var _useState11 = useState('week'),\n    _useState12 = _slicedToArray(_useState11, 2),\n    dateFilter = _useState12[0],\n    setDateFilter = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    detailsVisible = _useState14[0],\n    setDetailsVisible = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    appointmentHistory = _useState16[0],\n    setAppointmentHistory = _useState16[1];\n  useEffect(function () {\n    if (userInfo && userInfo.role !== 'manager' && userInfo.role !== 'admin') {\n      Alert.alert('Access Denied', 'Only managers can access this screen.');\n      navigation.goBack();\n    } else {\n      fetchBarbers();\n    }\n  }, [userInfo]);\n  useEffect(function () {\n    if (selectedBarber) {\n      fetchBarberStats(selectedBarber._id);\n    }\n  }, [dateFilter, selectedBarber]);\n  var managerApi = {\n    getBarbers: function getBarbers() {\n      return apiClient.get('/users/barbers');\n    },\n    getBarberStats: function getBarberStats(barberId, period) {\n      return apiClient.get(\"/manager/barber/\" + barberId + \"/stats?period=\" + period);\n    },\n    getBarberAppointments: function getBarberAppointments(barberId, period) {\n      return apiClient.get(\"/manager/barber/\" + barberId + \"/appointments?period=\" + period);\n    },\n    getManagerSalons: function getManagerSalons() {\n      return apiClient.get('/manager/salons');\n    }\n  };\n  var fetchBarbers = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var response = yield apiClient.get('/users/barbers');\n        if (response.data && response.data.success) {\n          setBarbers(response.data.barbers || []);\n          if (response.data.barbers && response.data.barbers.length > 0) {\n            setSelectedBarber(response.data.barbers[0]);\n            fetchBarberStats(response.data.barbers[0]._id);\n          }\n        } else {\n          Alert.alert('Error', 'Failed to load barbers');\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching barbers:', error);\n        setLoading(false);\n        Alert.alert('Error', 'Failed to load barbers');\n      }\n    });\n    return function fetchBarbers() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchBarberStats = function () {\n    var _ref3 = _asyncToGenerator(function* (barberId) {\n      try {\n        setLoading(true);\n        var statsResponse = yield apiClient.get(\"/manager/barber/\" + barberId + \"/stats?period=\" + dateFilter, {\n          headers: {\n            Authorization: \"Bearer \" + userInfo.token\n          }\n        });\n        var appointmentsResponse = yield apiClient.get(\"/manager/barber/\" + barberId + \"/appointments?period=\" + dateFilter, {\n          headers: {\n            Authorization: \"Bearer \" + userInfo.token\n          }\n        });\n        if (statsResponse.data && statsResponse.data.success && appointmentsResponse.data && appointmentsResponse.data.success) {\n          var barberStatsData = statsResponse.data.stats;\n          var appointments = appointmentsResponse.data.appointments || [];\n          var today = new Date();\n          today.setHours(0, 0, 0, 0);\n          var todayAppointments = appointments.filter(function (app) {\n            var appDate = new Date(app.date);\n            appDate.setHours(0, 0, 0, 0);\n            return appDate.getTime() === today.getTime();\n          });\n          var hoursInDay = 9;\n          var timeSlots = [];\n          var _loop = function* _loop() {\n            var hour = 9 + i;\n            var morningSlot = {\n              time: hour + \":00 - \" + hour + \":30\",\n              status: 'free'\n            };\n            var afternoonSlot = {\n              time: hour + \":30 - \" + (hour + 1) + \":00\",\n              status: 'free'\n            };\n            todayAppointments.forEach(function (app) {\n              var _app$startTime$split$ = app.startTime.split(':').map(Number),\n                _app$startTime$split$2 = _slicedToArray(_app$startTime$split$, 2),\n                startHour = _app$startTime$split$2[0],\n                startMin = _app$startTime$split$2[1];\n              if (startHour === hour && startMin === 0) {\n                var _app$customer2, _app$service4;\n                morningSlot.status = 'booked';\n                morningSlot.appointmentId = app._id;\n                morningSlot.clientName = ((_app$customer2 = app.customer) == null ? void 0 : _app$customer2.name) || 'Client';\n                morningSlot.service = ((_app$service4 = app.service) == null ? void 0 : _app$service4.name) || 'Service';\n              }\n              if (startHour === hour && startMin === 30) {\n                var _app$customer3, _app$service5;\n                afternoonSlot.status = 'booked';\n                afternoonSlot.appointmentId = app._id;\n                afternoonSlot.clientName = ((_app$customer3 = app.customer) == null ? void 0 : _app$customer3.name) || 'Client';\n                afternoonSlot.service = ((_app$service5 = app.service) == null ? void 0 : _app$service5.name) || 'Service';\n              }\n            });\n            timeSlots.push(morningSlot);\n            timeSlots.push(afternoonSlot);\n          };\n          for (var i = 0; i < hoursInDay; i++) {\n            yield* _loop();\n          }\n          var history = appointments.map(function (app) {\n            var _app$customer, _app$barber, _app$service, _app$service2, _app$service3;\n            return {\n              id: app._id,\n              date: new Date(app.date),\n              formattedDate: format(new Date(app.date), 'MMM dd, yyyy HH:mm'),\n              client: ((_app$customer = app.customer) == null ? void 0 : _app$customer.name) || 'Unknown Client',\n              barber: ((_app$barber = app.barber) == null ? void 0 : _app$barber.name) || 'Unknown Barber',\n              service: ((_app$service = app.service) == null ? void 0 : _app$service.name) || 'Unknown Service',\n              serviceType: ((_app$service2 = app.service) == null ? void 0 : _app$service2.category) || 'Unknown Type',\n              price: ((_app$service3 = app.service) == null ? void 0 : _app$service3.price) || 0,\n              status: app.status\n            };\n          });\n          history.sort(function (a, b) {\n            return b.date - a.date;\n          });\n          setBarberStats({\n            barberId: barberId,\n            appointmentsCount: barberStatsData.appointmentsCount || 0,\n            clientsCount: barberStatsData.clientsCount || 0,\n            revenue: barberStatsData.revenue || 0,\n            timeSlots: timeSlots,\n            utilization: barberStatsData.utilization || 0,\n            clientRetention: barberStatsData.clientRetention || 0,\n            averageRating: barberStatsData.averageRating || '0.0'\n          });\n          setAppointmentHistory(history);\n        } else {\n          console.error('Failed to fetch barber stats:', statsResponse.data, appointmentsResponse.data);\n          Alert.alert('Error', 'Failed to load barber statistics.');\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching barber stats:', error);\n        setLoading(false);\n        Alert.alert('Error', 'Failed to load barber statistics. Please try again.');\n      }\n    });\n    return function fetchBarberStats(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleViewDetails = function handleViewDetails(barber) {\n    setSelectedBarber(barber);\n    fetchBarberStats(barber._id);\n  };\n  var showAppointmentDetails = function showAppointmentDetails() {\n    setDetailsVisible(true);\n  };\n  var renderBarberItem = function renderBarberItem(_ref4) {\n    var _item$specialties;\n    var item = _ref4.item;\n    return _jsx(Card, {\n      style: [styles.barberCard, (selectedBarber == null ? void 0 : selectedBarber._id) === item._id ? styles.selectedBarberCard : null],\n      onPress: function onPress() {\n        return handleViewDetails(item);\n      },\n      children: _jsxs(Card.Content, {\n        style: styles.barberCardContent,\n        children: [_jsx(Avatar.Image, {\n          size: 50,\n          source: {\n            uri: item.profileImage || 'https://randomuser.me/api/portraits/men/32.jpg'\n          }\n        }), _jsxs(View, {\n          style: styles.barberInfo,\n          children: [_jsx(Title, {\n            style: styles.barberName,\n            children: item.name\n          }), _jsx(Paragraph, {\n            children: ((_item$specialties = item.specialties) == null ? void 0 : _item$specialties.join(', ')) || 'General Barber'\n          })]\n        })]\n      })\n    });\n  };\n  var renderTimeSlot = function renderTimeSlot(_ref5) {\n    var item = _ref5.item;\n    return _jsxs(View, {\n      style: [styles.timeSlot, item.status === 'booked' ? styles.bookedSlot : styles.freeSlot],\n      children: [_jsx(Text, {\n        style: styles.timeSlotTime,\n        children: item.time\n      }), item.status === 'booked' ? _jsxs(View, {\n        style: styles.timeSlotBookingInfo,\n        children: [_jsx(Text, {\n          style: styles.timeSlotClientName,\n          children: item.clientName\n        }), _jsx(Text, {\n          style: styles.timeSlotService,\n          children: item.service\n        }), item.serviceType && _jsx(Text, {\n          style: styles.timeSlotServiceType,\n          children: item.serviceType\n        })]\n      }) : _jsx(Text, {\n        style: styles.timeSlotStatus,\n        children: \"Free\"\n      })]\n    });\n  };\n  if (loading && !barbers.length) {\n    return _jsxs(View, {\n      style: styles.centeredContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#0F4C75\"\n      }), _jsx(Text, {\n        style: {\n          marginTop: 20\n        },\n        children: \"Loading dashboard...\"\n      })]\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.headerTitle,\n        children: \"Manager Dashboard\"\n      }), _jsx(Text, {\n        style: styles.headerSubtitle,\n        children: \"Staff Monitoring\"\n      })]\n    }), _jsx(Button, {\n      mode: \"contained\",\n      icon: \"store\",\n      onPress: function onPress() {\n        return navigation.navigate('SalonDashboard');\n      },\n      style: styles.salonButton,\n      children: \"Salon Dashboard\"\n    }), _jsxs(ScrollView, {\n      style: styles.content,\n      children: [_jsxs(View, {\n        style: styles.dateFilterContainer,\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Statistics Period:\"\n        }), _jsxs(View, {\n          style: styles.dateFilterButtons,\n          children: [_jsx(Button, {\n            mode: dateFilter === 'day' ? 'contained' : 'outlined',\n            onPress: function onPress() {\n              return setDateFilter('day');\n            },\n            style: styles.dateFilterButton,\n            children: \"Day\"\n          }), _jsx(Button, {\n            mode: dateFilter === 'week' ? 'contained' : 'outlined',\n            onPress: function onPress() {\n              return setDateFilter('week');\n            },\n            style: styles.dateFilterButton,\n            children: \"Week\"\n          }), _jsx(Button, {\n            mode: dateFilter === 'month' ? 'contained' : 'outlined',\n            onPress: function onPress() {\n              return setDateFilter('month');\n            },\n            style: styles.dateFilterButton,\n            children: \"Month\"\n          })]\n        })]\n      }), _jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Your Staff:\"\n      }), _jsx(FlatList, {\n        data: barbers,\n        renderItem: renderBarberItem,\n        keyExtractor: function keyExtractor(item) {\n          return item._id;\n        },\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        contentContainerStyle: styles.barberList\n      }), selectedBarber && barberStats && _jsxs(View, {\n        style: styles.statsContainer,\n        children: [_jsxs(Text, {\n          style: styles.barberStatsTitle,\n          children: [\"Statistics for \", selectedBarber.name]\n        }), _jsxs(View, {\n          style: styles.statsCards,\n          children: [_jsx(Card, {\n            style: [styles.statsCard, {\n              backgroundColor: '#E3F2FD'\n            }],\n            children: _jsxs(Card.Content, {\n              children: [_jsx(Paragraph, {\n                children: \"Appointments\"\n              }), _jsx(Title, {\n                style: styles.statsValue,\n                children: barberStats.appointmentsCount\n              })]\n            })\n          }), _jsx(Card, {\n            style: [styles.statsCard, {\n              backgroundColor: '#E8F5E9'\n            }],\n            children: _jsxs(Card.Content, {\n              children: [_jsx(Paragraph, {\n                children: \"Clients\"\n              }), _jsx(Title, {\n                style: styles.statsValue,\n                children: barberStats.clientsCount\n              })]\n            })\n          }), _jsx(Card, {\n            style: [styles.statsCard, {\n              backgroundColor: '#FFF8E1'\n            }],\n            children: _jsxs(Card.Content, {\n              children: [_jsx(Paragraph, {\n                children: \"Revenue\"\n              }), _jsxs(Title, {\n                style: styles.statsValue,\n                children: [\"$\", barberStats.revenue]\n              })]\n            })\n          })]\n        }), _jsx(Card, {\n          style: styles.metricsCard,\n          children: _jsxs(Card.Content, {\n            children: [_jsx(Title, {\n              style: styles.metricsTitle,\n              children: \"Performance Metrics\"\n            }), _jsxs(View, {\n              style: styles.metricRow,\n              children: [_jsx(Text, {\n                style: styles.metricLabel,\n                children: \"Utilization\"\n              }), _jsxs(Text, {\n                style: styles.metricValue,\n                children: [barberStats.utilization, \"%\"]\n              })]\n            }), _jsx(ProgressBar, {\n              progress: barberStats.utilization / 100,\n              color: \"#2196F3\",\n              style: styles.progressBar\n            }), _jsxs(View, {\n              style: styles.metricRow,\n              children: [_jsx(Text, {\n                style: styles.metricLabel,\n                children: \"Client Retention\"\n              }), _jsxs(Text, {\n                style: styles.metricValue,\n                children: [barberStats.clientRetention, \"%\"]\n              })]\n            }), _jsx(ProgressBar, {\n              progress: barberStats.clientRetention / 100,\n              color: \"#4CAF50\",\n              style: styles.progressBar\n            }), _jsxs(View, {\n              style: styles.metricRow,\n              children: [_jsx(Text, {\n                style: styles.metricLabel,\n                children: \"Average Rating\"\n              }), _jsxs(View, {\n                style: styles.ratingContainer,\n                children: [_jsx(Text, {\n                  style: styles.metricValue,\n                  children: barberStats.averageRating\n                }), _jsx(Ionicons, {\n                  name: \"star\",\n                  size: 16,\n                  color: \"#FFC107\",\n                  style: styles.starIcon\n                })]\n              })]\n            })]\n          })\n        }), _jsx(Card, {\n          style: styles.scheduleCard,\n          children: _jsxs(Card.Content, {\n            children: [_jsxs(View, {\n              style: styles.scheduleHeader,\n              children: [_jsx(Title, {\n                style: styles.scheduleTitle,\n                children: \"Today's Schedule\"\n              }), _jsx(Text, {\n                style: styles.scheduleDate,\n                children: format(new Date(), 'MMMM d, yyyy')\n              })]\n            }), _jsx(FlatList, {\n              data: barberStats.timeSlots,\n              renderItem: renderTimeSlot,\n              keyExtractor: function keyExtractor(item, index) {\n                return \"time-\" + index;\n              },\n              style: styles.timeSlotList,\n              scrollEnabled: false\n            })]\n          })\n        }), _jsx(Card, {\n          style: styles.appointmentsCard,\n          children: _jsxs(Card.Content, {\n            children: [_jsxs(View, {\n              style: styles.appointmentsHeader,\n              children: [_jsx(Title, {\n                style: styles.appointmentsTitle,\n                children: \"Recent Appointments\"\n              }), _jsx(Button, {\n                mode: \"text\",\n                onPress: showAppointmentDetails,\n                children: \"See All\"\n              })]\n            }), appointmentHistory.slice(0, 5).map(function (appointment, index) {\n              return _jsxs(View, {\n                style: styles.appointmentItem,\n                children: [_jsxs(View, {\n                  style: styles.appointmentInfo,\n                  children: [_jsx(Text, {\n                    style: styles.appointmentClient,\n                    children: appointment.client\n                  }), _jsxs(View, {\n                    style: styles.serviceRow,\n                    children: [_jsx(Text, {\n                      style: styles.appointmentService,\n                      children: appointment.service\n                    }), _jsx(Text, {\n                      style: styles.appointmentServiceType,\n                      children: appointment.serviceType !== 'Unknown Type' ? \"(\" + appointment.serviceType + \")\" : ''\n                    })]\n                  }), _jsx(Text, {\n                    style: styles.appointmentDate,\n                    children: appointment.formattedDate\n                  }), _jsxs(Text, {\n                    style: styles.appointmentBarber,\n                    children: [\"Barber: \", appointment.barber !== 'Unknown Barber' ? appointment.barber : 'Not assigned']\n                  })]\n                }), _jsx(Chip, {\n                  style: [styles.statusChip, appointment.status === 'completed' ? styles.completedChip : appointment.status === 'cancelled' ? styles.cancelledChip : styles.pendingChip],\n                  textStyle: styles.statusChipText,\n                  children: appointment.status.toUpperCase()\n                })]\n              }, appointment.id);\n            })]\n          })\n        })]\n      })]\n    }), _jsx(Portal, {\n      children: _jsxs(Modal, {\n        visible: detailsVisible,\n        onDismiss: function onDismiss() {\n          return setDetailsVisible(false);\n        },\n        contentContainerStyle: styles.modalContent,\n        children: [_jsxs(Title, {\n          style: styles.modalTitle,\n          children: [selectedBarber == null ? void 0 : selectedBarber.name, \"'s Appointments\"]\n        }), _jsxs(DataTable, {\n          children: [_jsxs(DataTable.Header, {\n            children: [_jsx(DataTable.Title, {\n              children: \"Date\"\n            }), _jsx(DataTable.Title, {\n              children: \"Client\"\n            }), _jsx(DataTable.Title, {\n              children: \"Service\"\n            }), _jsx(DataTable.Title, {\n              children: \"Barber\"\n            }), _jsx(DataTable.Title, {\n              numeric: true,\n              children: \"Price\"\n            }), _jsx(DataTable.Title, {\n              children: \"Status\"\n            })]\n          }), _jsx(ScrollView, {\n            style: {\n              maxHeight: 400\n            },\n            children: appointmentHistory.map(function (appointment) {\n              return _jsxs(DataTable.Row, {\n                children: [_jsx(DataTable.Cell, {\n                  children: format(appointment.date, 'MM/dd HH:mm')\n                }), _jsx(DataTable.Cell, {\n                  children: appointment.client\n                }), _jsxs(DataTable.Cell, {\n                  children: [appointment.service, _jsx(Text, {\n                    style: styles.serviceTypeText,\n                    children: appointment.serviceType !== 'Unknown Type' ? \"(\" + appointment.serviceType + \")\" : ''\n                  })]\n                }), _jsx(DataTable.Cell, {\n                  children: appointment.barber !== 'Unknown Barber' ? appointment.barber : 'Not assigned'\n                }), _jsxs(DataTable.Cell, {\n                  numeric: true,\n                  children: [\"$\", appointment.price]\n                }), _jsx(DataTable.Cell, {\n                  children: _jsx(Chip, {\n                    style: [styles.smallChip, appointment.status === 'completed' ? styles.completedChip : appointment.status === 'cancelled' ? styles.cancelledChip : styles.pendingChip],\n                    textStyle: styles.smallChipText,\n                    children: appointment.status.substr(0, 4).toUpperCase()\n                  })\n                })]\n              }, appointment.id);\n            })\n          })]\n        }), _jsx(Button, {\n          mode: \"contained\",\n          onPress: function onPress() {\n            return setDetailsVisible(false);\n          },\n          style: styles.modalButton,\n          children: \"Close\"\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  centeredContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  header: {\n    backgroundColor: '#0F4C75',\n    padding: 20,\n    paddingTop: 50,\n    paddingBottom: 20\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  headerSubtitle: {\n    fontSize: 16,\n    color: '#BBE1FA',\n    marginTop: 5\n  },\n  content: {\n    flex: 1,\n    padding: 15\n  },\n  dateFilterContainer: {\n    marginBottom: 15\n  },\n  dateFilterButtons: {\n    flexDirection: 'row',\n    marginTop: 10\n  },\n  dateFilterButton: {\n    marginRight: 10\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#1B262C',\n    marginBottom: 10\n  },\n  barberList: {\n    paddingBottom: 15\n  },\n  barberCard: {\n    marginRight: 10,\n    width: 200\n  },\n  selectedBarberCard: {\n    borderWidth: 2,\n    borderColor: '#0F4C75'\n  },\n  barberCardContent: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  barberInfo: {\n    marginLeft: 10\n  },\n  barberName: {\n    fontSize: 16\n  },\n  statsContainer: {\n    marginTop: 15\n  },\n  barberStatsTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#1B262C',\n    marginBottom: 15\n  },\n  statsCards: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 15\n  },\n  statsCard: {\n    width: '31%',\n    elevation: 2\n  },\n  statsValue: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  metricsCard: {\n    marginBottom: 15\n  },\n  metricsTitle: {\n    fontSize: 16,\n    marginBottom: 10\n  },\n  metricRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  metricLabel: {\n    fontSize: 14,\n    color: '#555'\n  },\n  metricValue: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  progressBar: {\n    height: 8,\n    borderRadius: 4,\n    marginTop: 5,\n    marginBottom: 10\n  },\n  ratingContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  starIcon: {\n    marginLeft: 5\n  },\n  scheduleCard: {\n    marginBottom: 15\n  },\n  scheduleHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  scheduleTitle: {\n    fontSize: 16\n  },\n  scheduleDate: {\n    fontSize: 14,\n    color: '#666'\n  },\n  timeSlotList: {\n    marginTop: 10\n  },\n  timeSlot: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 5,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee'\n  },\n  timeSlotInfo: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  timeSlotTime: {\n    fontSize: 14\n  },\n  timeSlotDetails: {\n    marginLeft: 10\n  },\n  timeSlotClient: {\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  timeSlotService: {\n    fontSize: 12,\n    color: '#555'\n  },\n  statusChip: {\n    height: 30\n  },\n  bookedChip: {\n    backgroundColor: '#FFECB3'\n  },\n  freeChip: {\n    backgroundColor: '#C8E6C9'\n  },\n  bookedChipText: {\n    color: '#F57C00'\n  },\n  freeChipText: {\n    color: '#388E3C'\n  },\n  completedChip: {\n    backgroundColor: '#C8E6C9'\n  },\n  cancelledChip: {\n    backgroundColor: '#FFCDD2'\n  },\n  pendingChip: {\n    backgroundColor: '#E1F5FE'\n  },\n  statusChipText: {\n    fontSize: 10\n  },\n  appointmentsCard: {\n    marginBottom: 15\n  },\n  appointmentsHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  appointmentsTitle: {\n    fontSize: 16\n  },\n  appointmentItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee'\n  },\n  appointmentInfo: {\n    flex: 1\n  },\n  appointmentClient: {\n    fontSize: 14,\n    fontWeight: 'bold'\n  },\n  appointmentService: {\n    fontSize: 13,\n    color: '#555'\n  },\n  appointmentDate: {\n    fontSize: 12,\n    color: '#888',\n    marginTop: 2\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 20,\n    borderRadius: 5\n  },\n  modalTitle: {\n    marginBottom: 15,\n    textAlign: 'center'\n  },\n  modalButton: {\n    marginTop: 20\n  },\n  smallChip: {\n    height: 24\n  },\n  smallChipText: {\n    fontSize: 8\n  },\n  salonButton: {\n    margin: 15,\n    marginTop: 5\n  },\n  timeSlotBookingInfo: {\n    marginLeft: 10\n  },\n  timeSlotClientName: {\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  timeSlotServiceType: {\n    fontSize: 12,\n    color: '#555'\n  },\n  timeSlotStatus: {\n    fontSize: 12,\n    color: '#555'\n  },\n  serviceRow: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  appointmentBarber: {\n    fontSize: 12,\n    color: '#888',\n    marginTop: 2\n  },\n  serviceTypeText: {\n    fontSize: 10,\n    color: '#888',\n    marginLeft: 4\n  }\n});\nexport default ManagerDashboardScreen;","map":{"version":3,"names":["React","useState","useEffect","useContext","View","StyleSheet","ScrollView","FlatList","Alert","TouchableOpacity","Text","Card","Title","Paragraph","Avatar","Button","ActivityIndicator","Chip","Searchbar","ProgressBar","Modal","Portal","DataTable","Ionicons","AuthContext","apiClient","format","jsx","_jsx","jsxs","_jsxs","ManagerDashboardScreen","_ref","navigation","_useContext","userInfo","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","barbers","setBarbers","_useState5","_useState6","selectedBarber","setSelectedBarber","_useState7","_useState8","barberStats","setBarberStats","_useState9","_useState10","searchQuery","setSearchQuery","_useState11","_useState12","dateFilter","setDateFilter","_useState13","_useState14","detailsVisible","setDetailsVisible","_useState15","_useState16","appointmentHistory","setAppointmentHistory","role","alert","goBack","fetchBarbers","fetchBarberStats","_id","managerApi","getBarbers","get","getBarberStats","barberId","period","getBarberAppointments","getManagerSalons","_ref2","_asyncToGenerator","response","data","success","length","error","console","apply","arguments","_ref3","statsResponse","headers","Authorization","token","appointmentsResponse","barberStatsData","stats","appointments","today","Date","setHours","todayAppointments","filter","app","appDate","date","getTime","hoursInDay","timeSlots","_loop","hour","i","morningSlot","time","status","afternoonSlot","forEach","_app$startTime$split$","startTime","split","map","Number","_app$startTime$split$2","startHour","startMin","_app$customer2","_app$service4","appointmentId","clientName","customer","name","service","_app$customer3","_app$service5","push","history","_app$customer","_app$barber","_app$service","_app$service2","_app$service3","id","formattedDate","client","barber","serviceType","category","price","sort","a","b","appointmentsCount","clientsCount","revenue","utilization","clientRetention","averageRating","_x","handleViewDetails","showAppointmentDetails","renderBarberItem","_ref4","_item$specialties","item","style","styles","barberCard","selectedBarberCard","onPress","children","Content","barberCardContent","Image","size","source","uri","profileImage","barberInfo","barberName","specialties","join","renderTimeSlot","_ref5","timeSlot","bookedSlot","freeSlot","timeSlotTime","timeSlotBookingInfo","timeSlotClientName","timeSlotService","timeSlotServiceType","timeSlotStatus","centeredContainer","color","marginTop","container","header","headerTitle","headerSubtitle","mode","icon","navigate","salonButton","content","dateFilterContainer","sectionTitle","dateFilterButtons","dateFilterButton","renderItem","keyExtractor","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","barberList","statsContainer","barberStatsTitle","statsCards","statsCard","backgroundColor","statsValue","metricsCard","metricsTitle","metricRow","metricLabel","metricValue","progress","progressBar","ratingContainer","starIcon","scheduleCard","scheduleHeader","scheduleTitle","scheduleDate","index","timeSlotList","scrollEnabled","appointmentsCard","appointmentsHeader","appointmentsTitle","slice","appointment","appointmentItem","appointmentInfo","appointmentClient","serviceRow","appointmentService","appointmentServiceType","appointmentDate","appointmentBarber","statusChip","completedChip","cancelledChip","pendingChip","textStyle","statusChipText","toUpperCase","visible","onDismiss","modalContent","modalTitle","Header","numeric","maxHeight","Row","Cell","serviceTypeText","smallChip","smallChipText","substr","modalButton","create","flex","justifyContent","alignItems","padding","paddingTop","paddingBottom","fontSize","fontWeight","marginBottom","flexDirection","marginRight","width","borderWidth","borderColor","marginLeft","elevation","height","borderRadius","paddingVertical","borderBottomWidth","borderBottomColor","timeSlotInfo","timeSlotDetails","timeSlotClient","bookedChip","freeChip","bookedChipText","freeChipText","margin","textAlign"],"sources":["C:/Users/User/Downloads/mobile/screens/manager/DashboardScreen.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, StyleSheet, ScrollView, FlatList, Alert, TouchableOpacity } from 'react-native';\r\nimport { Text, Card, Title, Paragraph, Avatar, Button, ActivityIndicator, Chip, Searchbar, ProgressBar, Modal, Portal, DataTable } from 'react-native-paper';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport apiClient from '../../api/client';\r\nimport { format } from 'date-fns';\r\n\r\nconst ManagerDashboardScreen = ({ navigation }) => {\r\n  const { userInfo } = useContext(AuthContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const [barbers, setBarbers] = useState([]);\r\n  const [selectedBarber, setSelectedBarber] = useState(null);\r\n  const [barberStats, setBarberStats] = useState({});\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [dateFilter, setDateFilter] = useState('week'); // 'day', 'week', 'month'\r\n  const [detailsVisible, setDetailsVisible] = useState(false);\r\n  const [appointmentHistory, setAppointmentHistory] = useState([]);\r\n\r\n  // Check if user is manager\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.role !== 'manager' && userInfo.role !== 'admin') {\r\n      Alert.alert('Access Denied', 'Only managers can access this screen.');\r\n      navigation.goBack();\r\n    } else {\r\n      fetchBarbers();\r\n    }\r\n  }, [userInfo]);\r\n\r\n  // Fetch barbers when date filter changes\r\n  useEffect(() => {\r\n    if (selectedBarber) {\r\n      fetchBarberStats(selectedBarber._id);\r\n    }\r\n  }, [dateFilter, selectedBarber]);\r\n\r\n  // Manager API endpoints\r\n  const managerApi = {\r\n    getBarbers: () => apiClient.get('/users/barbers'),\r\n    getBarberStats: (barberId, period) => apiClient.get(`/manager/barber/${barberId}/stats?period=${period}`),\r\n    getBarberAppointments: (barberId, period) => apiClient.get(`/manager/barber/${barberId}/appointments?period=${period}`),\r\n    getManagerSalons: () => apiClient.get('/manager/salons')\r\n  };\r\n\r\n  // Fetch barbers\r\n  const fetchBarbers = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await apiClient.get('/users/barbers');\r\n      \r\n      if (response.data && response.data.success) {\r\n        setBarbers(response.data.barbers || []);\r\n        \r\n        // If there are barbers, select the first one by default\r\n        if (response.data.barbers && response.data.barbers.length > 0) {\r\n          setSelectedBarber(response.data.barbers[0]);\r\n          fetchBarberStats(response.data.barbers[0]._id);\r\n        }\r\n      } else {\r\n        Alert.alert('Error', 'Failed to load barbers');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching barbers:', error);\r\n      setLoading(false);\r\n      Alert.alert('Error', 'Failed to load barbers');\r\n    }\r\n  };\r\n\r\n  // Fetch barber statistics\r\n  const fetchBarberStats = async (barberId) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Make real API calls to get barber stats and appointments\r\n      const statsResponse = await apiClient.get(`/manager/barber/${barberId}/stats?period=${dateFilter}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      const appointmentsResponse = await apiClient.get(`/manager/barber/${barberId}/appointments?period=${dateFilter}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      if (statsResponse.data && statsResponse.data.success && \r\n          appointmentsResponse.data && appointmentsResponse.data.success) {\r\n        \r\n        const barberStatsData = statsResponse.data.stats;\r\n        const appointments = appointmentsResponse.data.appointments || [];\r\n        \r\n        // Process schedule data for today\r\n        const today = new Date();\r\n        today.setHours(0, 0, 0, 0);\r\n        \r\n        // Filter appointments for today to build the schedule\r\n        const todayAppointments = appointments.filter(app => {\r\n          const appDate = new Date(app.date);\r\n          appDate.setHours(0, 0, 0, 0);\r\n          return appDate.getTime() === today.getTime();\r\n        });\r\n        \r\n        // Create time slots (9am - 6pm)\r\n        const hoursInDay = 9;\r\n        const timeSlots = [];\r\n        \r\n        for (let i = 0; i < hoursInDay; i++) {\r\n          const hour = 9 + i;\r\n          \r\n          // Morning slot (Hour:00)\r\n          const morningSlot = {\r\n            time: `${hour}:00 - ${hour}:30`,\r\n            status: 'free'\r\n          };\r\n          \r\n          // Afternoon slot (Hour:30)\r\n          const afternoonSlot = {\r\n            time: `${hour}:30 - ${hour + 1}:00`,\r\n            status: 'free'\r\n          };\r\n          \r\n          // Check if slots are booked\r\n          todayAppointments.forEach(app => {\r\n            const [startHour, startMin] = app.startTime.split(':').map(Number);\r\n            \r\n            if (startHour === hour && startMin === 0) {\r\n              morningSlot.status = 'booked';\r\n              morningSlot.appointmentId = app._id;\r\n              morningSlot.clientName = app.customer?.name || 'Client';\r\n              morningSlot.service = app.service?.name || 'Service';\r\n            }\r\n            \r\n            if (startHour === hour && startMin === 30) {\r\n              afternoonSlot.status = 'booked';\r\n              afternoonSlot.appointmentId = app._id;\r\n              afternoonSlot.clientName = app.customer?.name || 'Client';\r\n              afternoonSlot.service = app.service?.name || 'Service';\r\n            }\r\n          });\r\n          \r\n          timeSlots.push(morningSlot);\r\n          timeSlots.push(afternoonSlot);\r\n        }\r\n        \r\n        // Format appointment history from real data\r\n        const history = appointments.map(app => ({\r\n          id: app._id,\r\n          date: new Date(app.date),\r\n          formattedDate: format(new Date(app.date), 'MMM dd, yyyy HH:mm'),\r\n          client: app.customer?.name || 'Unknown Client',\r\n          barber: app.barber?.name || 'Unknown Barber',\r\n          service: app.service?.name || 'Unknown Service',\r\n          serviceType: app.service?.category || 'Unknown Type',\r\n          price: app.service?.price || 0,\r\n          status: app.status\r\n        }));\r\n        \r\n        // Sort by date (newest first)\r\n        history.sort((a, b) => b.date - a.date);\r\n        \r\n        setBarberStats({\r\n          barberId,\r\n          appointmentsCount: barberStatsData.appointmentsCount || 0,\r\n          clientsCount: barberStatsData.clientsCount || 0,\r\n          revenue: barberStatsData.revenue || 0,\r\n          timeSlots,\r\n          utilization: barberStatsData.utilization || 0,\r\n          clientRetention: barberStatsData.clientRetention || 0,\r\n          averageRating: barberStatsData.averageRating || '0.0'\r\n        });\r\n        \r\n        setAppointmentHistory(history);\r\n      } else {\r\n        console.error('Failed to fetch barber stats:', statsResponse.data, appointmentsResponse.data);\r\n        Alert.alert('Error', 'Failed to load barber statistics.');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching barber stats:', error);\r\n      setLoading(false);\r\n      Alert.alert('Error', 'Failed to load barber statistics. Please try again.');\r\n    }\r\n  };\r\n\r\n  // View barber details\r\n  const handleViewDetails = (barber) => {\r\n    setSelectedBarber(barber);\r\n    fetchBarberStats(barber._id);\r\n  };\r\n\r\n  // Show appointment details modal\r\n  const showAppointmentDetails = () => {\r\n    setDetailsVisible(true);\r\n  };\r\n\r\n  // Render barber card\r\n  const renderBarberItem = ({ item }) => (\r\n    <Card \r\n      style={[\r\n        styles.barberCard, \r\n        selectedBarber?._id === item._id ? styles.selectedBarberCard : null\r\n      ]}\r\n      onPress={() => handleViewDetails(item)}\r\n    >\r\n      <Card.Content style={styles.barberCardContent}>\r\n        <Avatar.Image \r\n          size={50} \r\n          source={{ uri: item.profileImage || 'https://randomuser.me/api/portraits/men/32.jpg' }} \r\n        />\r\n        <View style={styles.barberInfo}>\r\n          <Title style={styles.barberName}>{item.name}</Title>\r\n          <Paragraph>{item.specialties?.join(', ') || 'General Barber'}</Paragraph>\r\n        </View>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n\r\n  // Render time slot\r\n  const renderTimeSlot = ({ item }) => (\r\n    <View style={[styles.timeSlot, item.status === 'booked' ? styles.bookedSlot : styles.freeSlot]}>\r\n      <Text style={styles.timeSlotTime}>{item.time}</Text>\r\n      {item.status === 'booked' ? (\r\n        <View style={styles.timeSlotBookingInfo}>\r\n          <Text style={styles.timeSlotClientName}>{item.clientName}</Text>\r\n          <Text style={styles.timeSlotService}>{item.service}</Text>\r\n          {item.serviceType && <Text style={styles.timeSlotServiceType}>{item.serviceType}</Text>}\r\n        </View>\r\n      ) : (\r\n        <Text style={styles.timeSlotStatus}>Free</Text>\r\n      )}\r\n    </View>\r\n  );\r\n\r\n  if (loading && !barbers.length) {\r\n    return (\r\n      <View style={styles.centeredContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n        <Text style={{ marginTop: 20 }}>Loading dashboard...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Manager Header */}\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Manager Dashboard</Text>\r\n        <Text style={styles.headerSubtitle}>Staff Monitoring</Text>\r\n      </View>\r\n      \r\n      {/* Salon Dashboard Button */}\r\n      <Button \r\n        mode=\"contained\" \r\n        icon=\"store\"\r\n        onPress={() => navigation.navigate('SalonDashboard')}\r\n        style={styles.salonButton}\r\n      >\r\n        Salon Dashboard\r\n      </Button>\r\n\r\n      <ScrollView style={styles.content}>\r\n        {/* Date Filter */}\r\n        <View style={styles.dateFilterContainer}>\r\n          <Text style={styles.sectionTitle}>Statistics Period:</Text>\r\n          <View style={styles.dateFilterButtons}>\r\n            <Button \r\n              mode={dateFilter === 'day' ? 'contained' : 'outlined'} \r\n              onPress={() => setDateFilter('day')}\r\n              style={styles.dateFilterButton}\r\n            >\r\n              Day\r\n            </Button>\r\n            <Button \r\n              mode={dateFilter === 'week' ? 'contained' : 'outlined'} \r\n              onPress={() => setDateFilter('week')}\r\n              style={styles.dateFilterButton}\r\n            >\r\n              Week\r\n            </Button>\r\n            <Button \r\n              mode={dateFilter === 'month' ? 'contained' : 'outlined'} \r\n              onPress={() => setDateFilter('month')}\r\n              style={styles.dateFilterButton}\r\n            >\r\n              Month\r\n            </Button>\r\n          </View>\r\n        </View>\r\n\r\n        {/* Barber Selection */}\r\n        <Text style={styles.sectionTitle}>Your Staff:</Text>\r\n        <FlatList\r\n          data={barbers}\r\n          renderItem={renderBarberItem}\r\n          keyExtractor={item => item._id}\r\n          horizontal\r\n          showsHorizontalScrollIndicator={false}\r\n          contentContainerStyle={styles.barberList}\r\n        />\r\n\r\n        {/* Selected Barber Stats */}\r\n        {selectedBarber && barberStats && (\r\n          <View style={styles.statsContainer}>\r\n            <Text style={styles.barberStatsTitle}>Statistics for {selectedBarber.name}</Text>\r\n            \r\n            {/* Stats Cards */}\r\n            <View style={styles.statsCards}>\r\n              <Card style={[styles.statsCard, { backgroundColor: '#E3F2FD' }]}>\r\n                <Card.Content>\r\n                  <Paragraph>Appointments</Paragraph>\r\n                  <Title style={styles.statsValue}>{barberStats.appointmentsCount}</Title>\r\n                </Card.Content>\r\n              </Card>\r\n              \r\n              <Card style={[styles.statsCard, { backgroundColor: '#E8F5E9' }]}>\r\n                <Card.Content>\r\n                  <Paragraph>Clients</Paragraph>\r\n                  <Title style={styles.statsValue}>{barberStats.clientsCount}</Title>\r\n                </Card.Content>\r\n              </Card>\r\n              \r\n              <Card style={[styles.statsCard, { backgroundColor: '#FFF8E1' }]}>\r\n                <Card.Content>\r\n                  <Paragraph>Revenue</Paragraph>\r\n                  <Title style={styles.statsValue}>${barberStats.revenue}</Title>\r\n                </Card.Content>\r\n              </Card>\r\n            </View>\r\n            \r\n            {/* Performance Metrics */}\r\n            <Card style={styles.metricsCard}>\r\n              <Card.Content>\r\n                <Title style={styles.metricsTitle}>Performance Metrics</Title>\r\n                \r\n                <View style={styles.metricRow}>\r\n                  <Text style={styles.metricLabel}>Utilization</Text>\r\n                  <Text style={styles.metricValue}>{barberStats.utilization}%</Text>\r\n                </View>\r\n                <ProgressBar progress={barberStats.utilization / 100} color=\"#2196F3\" style={styles.progressBar} />\r\n                \r\n                <View style={styles.metricRow}>\r\n                  <Text style={styles.metricLabel}>Client Retention</Text>\r\n                  <Text style={styles.metricValue}>{barberStats.clientRetention}%</Text>\r\n                </View>\r\n                <ProgressBar progress={barberStats.clientRetention / 100} color=\"#4CAF50\" style={styles.progressBar} />\r\n                \r\n                <View style={styles.metricRow}>\r\n                  <Text style={styles.metricLabel}>Average Rating</Text>\r\n                  <View style={styles.ratingContainer}>\r\n                    <Text style={styles.metricValue}>{barberStats.averageRating}</Text>\r\n                    <Ionicons name=\"star\" size={16} color=\"#FFC107\" style={styles.starIcon} />\r\n                  </View>\r\n                </View>\r\n              </Card.Content>\r\n            </Card>\r\n            \r\n            {/* Schedule Today */}\r\n            <Card style={styles.scheduleCard}>\r\n              <Card.Content>\r\n                <View style={styles.scheduleHeader}>\r\n                  <Title style={styles.scheduleTitle}>Today's Schedule</Title>\r\n                  <Text style={styles.scheduleDate}>{format(new Date(), 'MMMM d, yyyy')}</Text>\r\n                </View>\r\n                \r\n                <FlatList\r\n                  data={barberStats.timeSlots}\r\n                  renderItem={renderTimeSlot}\r\n                  keyExtractor={(item, index) => `time-${index}`}\r\n                  style={styles.timeSlotList}\r\n                  scrollEnabled={false}\r\n                />\r\n              </Card.Content>\r\n            </Card>\r\n            \r\n            {/* Recent Appointments */}\r\n            <Card style={styles.appointmentsCard}>\r\n              <Card.Content>\r\n                <View style={styles.appointmentsHeader}>\r\n                  <Title style={styles.appointmentsTitle}>Recent Appointments</Title>\r\n                  <Button mode=\"text\" onPress={showAppointmentDetails}>\r\n                    See All\r\n                  </Button>\r\n                </View>\r\n                \r\n                {appointmentHistory.slice(0, 5).map((appointment, index) => (\r\n                  <View key={appointment.id} style={styles.appointmentItem}>\r\n                    <View style={styles.appointmentInfo}>\r\n                      <Text style={styles.appointmentClient}>{appointment.client}</Text>\r\n                      <View style={styles.serviceRow}>\r\n                        <Text style={styles.appointmentService}>{appointment.service}</Text>\r\n                        <Text style={styles.appointmentServiceType}>\r\n                          {appointment.serviceType !== 'Unknown Type' ? `(${appointment.serviceType})` : ''}\r\n                        </Text>\r\n                      </View>\r\n                      <Text style={styles.appointmentDate}>{appointment.formattedDate}</Text>\r\n                      <Text style={styles.appointmentBarber}>\r\n                        Barber: {appointment.barber !== 'Unknown Barber' ? appointment.barber : 'Not assigned'}\r\n                      </Text>\r\n                    </View>\r\n                    <Chip \r\n                      style={[\r\n                        styles.statusChip,\r\n                        appointment.status === 'completed' ? styles.completedChip : \r\n                        appointment.status === 'cancelled' ? styles.cancelledChip : styles.pendingChip\r\n                      ]}\r\n                      textStyle={styles.statusChipText}\r\n                    >\r\n                      {appointment.status.toUpperCase()}\r\n                    </Chip>\r\n                  </View>\r\n                ))}\r\n              </Card.Content>\r\n            </Card>\r\n          </View>\r\n        )}\r\n      </ScrollView>\r\n      \r\n      {/* Appointment Details Modal */}\r\n      <Portal>\r\n        <Modal\r\n          visible={detailsVisible}\r\n          onDismiss={() => setDetailsVisible(false)}\r\n          contentContainerStyle={styles.modalContent}\r\n        >\r\n          <Title style={styles.modalTitle}>\r\n            {selectedBarber?.name}'s Appointments\r\n          </Title>\r\n          \r\n          <DataTable>\r\n            <DataTable.Header>\r\n              <DataTable.Title>Date</DataTable.Title>\r\n              <DataTable.Title>Client</DataTable.Title>\r\n              <DataTable.Title>Service</DataTable.Title>\r\n              <DataTable.Title>Barber</DataTable.Title>\r\n              <DataTable.Title numeric>Price</DataTable.Title>\r\n              <DataTable.Title>Status</DataTable.Title>\r\n            </DataTable.Header>\r\n            \r\n            <ScrollView style={{ maxHeight: 400 }}>\r\n              {appointmentHistory.map((appointment) => (\r\n                <DataTable.Row key={appointment.id}>\r\n                  <DataTable.Cell>{format(appointment.date, 'MM/dd HH:mm')}</DataTable.Cell>\r\n                  <DataTable.Cell>{appointment.client}</DataTable.Cell>\r\n                  <DataTable.Cell>\r\n                    {appointment.service}\r\n                    <Text style={styles.serviceTypeText}>\r\n                      {appointment.serviceType !== 'Unknown Type' ? `(${appointment.serviceType})` : ''}\r\n                    </Text>\r\n                  </DataTable.Cell>\r\n                  <DataTable.Cell>{appointment.barber !== 'Unknown Barber' ? appointment.barber : 'Not assigned'}</DataTable.Cell>\r\n                  <DataTable.Cell numeric>${appointment.price}</DataTable.Cell>\r\n                  <DataTable.Cell>\r\n                    <Chip \r\n                      style={[\r\n                        styles.smallChip,\r\n                        appointment.status === 'completed' ? styles.completedChip : \r\n                        appointment.status === 'cancelled' ? styles.cancelledChip : styles.pendingChip\r\n                      ]}\r\n                      textStyle={styles.smallChipText}\r\n                    >\r\n                      {appointment.status.substr(0, 4).toUpperCase()}\r\n                    </Chip>\r\n                  </DataTable.Cell>\r\n                </DataTable.Row>\r\n              ))}\r\n            </ScrollView>\r\n          </DataTable>\r\n          \r\n          <Button \r\n            mode=\"contained\" \r\n            onPress={() => setDetailsVisible(false)}\r\n            style={styles.modalButton}\r\n          >\r\n            Close\r\n          </Button>\r\n        </Modal>\r\n      </Portal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  centeredContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  header: {\r\n    backgroundColor: '#0F4C75',\r\n    padding: 20,\r\n    paddingTop: 50,\r\n    paddingBottom: 20,\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  headerSubtitle: {\r\n    fontSize: 16,\r\n    color: '#BBE1FA',\r\n    marginTop: 5,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: 15,\r\n  },\r\n  dateFilterContainer: {\r\n    marginBottom: 15,\r\n  },\r\n  dateFilterButtons: {\r\n    flexDirection: 'row',\r\n    marginTop: 10,\r\n  },\r\n  dateFilterButton: {\r\n    marginRight: 10,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#1B262C',\r\n    marginBottom: 10,\r\n  },\r\n  barberList: {\r\n    paddingBottom: 15,\r\n  },\r\n  barberCard: {\r\n    marginRight: 10,\r\n    width: 200,\r\n  },\r\n  selectedBarberCard: {\r\n    borderWidth: 2,\r\n    borderColor: '#0F4C75',\r\n  },\r\n  barberCardContent: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  barberInfo: {\r\n    marginLeft: 10,\r\n  },\r\n  barberName: {\r\n    fontSize: 16,\r\n  },\r\n  statsContainer: {\r\n    marginTop: 15,\r\n  },\r\n  barberStatsTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#1B262C',\r\n    marginBottom: 15,\r\n  },\r\n  statsCards: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 15,\r\n  },\r\n  statsCard: {\r\n    width: '31%',\r\n    elevation: 2,\r\n  },\r\n  statsValue: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n  },\r\n  metricsCard: {\r\n    marginBottom: 15,\r\n  },\r\n  metricsTitle: {\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n  },\r\n  metricRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n  },\r\n  metricLabel: {\r\n    fontSize: 14,\r\n    color: '#555',\r\n  },\r\n  metricValue: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  progressBar: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n    marginTop: 5,\r\n    marginBottom: 10,\r\n  },\r\n  ratingContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  starIcon: {\r\n    marginLeft: 5,\r\n  },\r\n  scheduleCard: {\r\n    marginBottom: 15,\r\n  },\r\n  scheduleHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  scheduleTitle: {\r\n    fontSize: 16,\r\n  },\r\n  scheduleDate: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n  timeSlotList: {\r\n    marginTop: 10,\r\n  },\r\n  timeSlot: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingVertical: 5,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#eee',\r\n  },\r\n  timeSlotInfo: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  timeSlotTime: {\r\n    fontSize: 14,\r\n  },\r\n  timeSlotDetails: {\r\n    marginLeft: 10,\r\n  },\r\n  timeSlotClient: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  timeSlotService: {\r\n    fontSize: 12,\r\n    color: '#555',\r\n  },\r\n  statusChip: {\r\n    height: 30,\r\n  },\r\n  bookedChip: {\r\n    backgroundColor: '#FFECB3',\r\n  },\r\n  freeChip: {\r\n    backgroundColor: '#C8E6C9',\r\n  },\r\n  bookedChipText: {\r\n    color: '#F57C00',\r\n  },\r\n  freeChipText: {\r\n    color: '#388E3C',\r\n  },\r\n  completedChip: {\r\n    backgroundColor: '#C8E6C9',\r\n  },\r\n  cancelledChip: {\r\n    backgroundColor: '#FFCDD2',\r\n  },\r\n  pendingChip: {\r\n    backgroundColor: '#E1F5FE',\r\n  },\r\n  statusChipText: {\r\n    fontSize: 10,\r\n  },\r\n  appointmentsCard: {\r\n    marginBottom: 15,\r\n  },\r\n  appointmentsHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  appointmentsTitle: {\r\n    fontSize: 16,\r\n  },\r\n  appointmentItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingVertical: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#eee',\r\n  },\r\n  appointmentInfo: {\r\n    flex: 1,\r\n  },\r\n  appointmentClient: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n  },\r\n  appointmentService: {\r\n    fontSize: 13,\r\n    color: '#555',\r\n  },\r\n  appointmentDate: {\r\n    fontSize: 12,\r\n    color: '#888',\r\n    marginTop: 2,\r\n  },\r\n  modalContent: {\r\n    backgroundColor: 'white',\r\n    padding: 20,\r\n    margin: 20,\r\n    borderRadius: 5,\r\n  },\r\n  modalTitle: {\r\n    marginBottom: 15,\r\n    textAlign: 'center',\r\n  },\r\n  modalButton: {\r\n    marginTop: 20,\r\n  },\r\n  smallChip: {\r\n    height: 24,\r\n  },\r\n  smallChipText: {\r\n    fontSize: 8,\r\n  },\r\n  salonButton: {\r\n    margin: 15,\r\n    marginTop: 5,\r\n  },\r\n  timeSlotBookingInfo: {\r\n    marginLeft: 10,\r\n  },\r\n  timeSlotClientName: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  timeSlotServiceType: {\r\n    fontSize: 12,\r\n    color: '#555',\r\n  },\r\n  timeSlotStatus: {\r\n    fontSize: 12,\r\n    color: '#555',\r\n  },\r\n  serviceRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  appointmentBarber: {\r\n    fontSize: 12,\r\n    color: '#888',\r\n    marginTop: 2,\r\n  },\r\n  serviceTypeText: {\r\n    fontSize: 10,\r\n    color: '#888',\r\n    marginLeft: 4,\r\n  },\r\n});\r\n\r\nexport default ManagerDashboardScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}