{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { createContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\nimport apiClient from \"../api/client\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar getApiUrl = function getApiUrl() {\n  var baseUrl = apiClient.defaults.baseURL;\n  if (baseUrl.endsWith('/api')) {\n    return baseUrl;\n  }\n  return baseUrl.endsWith('/') ? baseUrl + \"api\" : baseUrl + \"/api\";\n};\nvar API_URL = getApiUrl();\nexport var AuthContext = createContext();\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userToken = _useState4[0],\n    setUserToken = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userInfo = _useState6[0],\n    setUserInfo = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var createTestUser = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        console.log('Creating test user account...');\n        yield apiClient.post('/users/register', {\n          name: 'Test User',\n          email: 'test@example.com',\n          password: 'password123',\n          phone: '123-456-7890',\n          role: 'customer'\n        });\n        console.log('Test user created or already exists');\n      } catch (error) {\n        var _error$response, _error$response2, _error$response2$data, _error$response2$data2;\n        if (((_error$response = error.response) == null ? void 0 : _error$response.status) === 400 && (_error$response2 = error.response) != null && (_error$response2$data = _error$response2.data) != null && (_error$response2$data2 = _error$response2$data.message) != null && _error$response2$data2.includes('already exists')) {\n          console.log('Test user already exists');\n        } else {\n          var _error$response3;\n          console.error('Error creating test user:', ((_error$response3 = error.response) == null ? void 0 : _error$response3.data) || error.message);\n        }\n      }\n    });\n    return function createTestUser() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var login = function () {\n    var _ref3 = _asyncToGenerator(function* (email, password) {\n      setIsLoading(true);\n      setError(null);\n      try {\n        console.log(\"Attempting login with \" + email);\n        var response = yield apiClient.post('/users/login', {\n          email: email,\n          password: password\n        });\n        var data = response.data;\n        console.log('Login response:', JSON.stringify(data));\n        if (data.success) {\n          var userWithToken = _objectSpread(_objectSpread({}, data.user), {}, {\n            token: data.token || data.user.token\n          });\n          console.log('Setting user info with token:', userWithToken.token);\n          setUserInfo(userWithToken);\n          setUserToken(userWithToken.token);\n          yield AsyncStorage.setItem('userInfo', JSON.stringify(userWithToken));\n          yield AsyncStorage.setItem('userToken', userWithToken.token);\n          var savedUserInfo = yield AsyncStorage.getItem('userInfo');\n          var savedToken = yield AsyncStorage.getItem('userToken');\n          console.log('Saved user info:', savedUserInfo ? 'Yes' : 'No');\n          console.log('Saved token:', savedToken ? 'Yes' : 'No');\n        }\n        setIsLoading(false);\n        return data;\n      } catch (error) {\n        var _error$response4, _error$response5, _error$response5$data, _error$response6, _error$response6$data;\n        console.error('Login error:', ((_error$response4 = error.response) == null ? void 0 : _error$response4.data) || error.message);\n        setIsLoading(false);\n        setError(((_error$response5 = error.response) == null ? void 0 : (_error$response5$data = _error$response5.data) == null ? void 0 : _error$response5$data.message) || 'An error occurred during login');\n        return {\n          success: false,\n          message: ((_error$response6 = error.response) == null ? void 0 : (_error$response6$data = _error$response6.data) == null ? void 0 : _error$response6$data.message) || 'Login failed'\n        };\n      }\n    });\n    return function login(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var register = function () {\n    var _ref4 = _asyncToGenerator(function* (userData) {\n      setIsLoading(true);\n      setError(null);\n      try {\n        console.log(\"Registering user: \" + userData.email);\n        var response = yield apiClient.post('/users/register', userData);\n        var data = response.data;\n        console.log('Register response:', data);\n        if (data.success) {\n          setUserInfo(data.user);\n          setUserToken(data.user.token);\n          yield AsyncStorage.setItem('userInfo', JSON.stringify(data.user));\n          yield AsyncStorage.setItem('userToken', data.user.token);\n        }\n        setIsLoading(false);\n        return data;\n      } catch (error) {\n        var _error$response7, _error$response8, _error$response8$data, _error$response9, _error$response9$data;\n        console.error('Registration error:', ((_error$response7 = error.response) == null ? void 0 : _error$response7.data) || error.message);\n        setIsLoading(false);\n        setError(((_error$response8 = error.response) == null ? void 0 : (_error$response8$data = _error$response8.data) == null ? void 0 : _error$response8$data.message) || 'An error occurred during registration');\n        return {\n          success: false,\n          message: ((_error$response9 = error.response) == null ? void 0 : (_error$response9$data = _error$response9.data) == null ? void 0 : _error$response9$data.message) || 'Registration failed'\n        };\n      }\n    });\n    return function register(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var logout = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        console.log('=== LOGOUT STARTED ===');\n        setIsLoading(true);\n        var keys = ['userInfo', 'userToken'];\n        console.log('Clearing AsyncStorage keys:', keys);\n        for (var key of keys) {\n          yield AsyncStorage.removeItem(key);\n          console.log(\"Removed key: \" + key);\n        }\n        var checkUserInfo = yield AsyncStorage.getItem('userInfo');\n        var checkUserToken = yield AsyncStorage.getItem('userToken');\n        console.log('After removal - userInfo exists:', !!checkUserInfo);\n        console.log('After removal - userToken exists:', !!checkUserToken);\n        console.log('Clearing React state...');\n        setUserToken(null);\n        setUserInfo(null);\n        yield new Promise(function (resolve) {\n          return setTimeout(resolve, 800);\n        });\n        console.log('=== LOGOUT COMPLETED ===');\n        setIsLoading(false);\n        return {\n          success: true,\n          message: 'Logout successful'\n        };\n      } catch (error) {\n        console.error('Logout error:', error);\n        setIsLoading(false);\n        setUserToken(null);\n        setUserInfo(null);\n        return {\n          success: false,\n          message: 'Error during logout, but state was cleared'\n        };\n      }\n    });\n    return function logout() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var updateProfile = function () {\n    var _ref6 = _asyncToGenerator(function* (userData) {\n      setIsLoading(true);\n      setError(null);\n      try {\n        var response = yield apiClient.put('/users/profile', userData);\n        var data = response.data;\n        if (data.success) {\n          setUserInfo(data.user);\n          yield AsyncStorage.setItem('userInfo', JSON.stringify(data.user));\n        }\n        setIsLoading(false);\n        return data;\n      } catch (error) {\n        var _error$response10, _error$response11, _error$response11$dat, _error$response12, _error$response12$dat;\n        console.error('Profile update error:', ((_error$response10 = error.response) == null ? void 0 : _error$response10.data) || error.message);\n        setIsLoading(false);\n        setError(((_error$response11 = error.response) == null ? void 0 : (_error$response11$dat = _error$response11.data) == null ? void 0 : _error$response11$dat.message) || 'An error occurred while updating profile');\n        return {\n          success: false,\n          message: ((_error$response12 = error.response) == null ? void 0 : (_error$response12$dat = _error$response12.data) == null ? void 0 : _error$response12$dat.message) || 'Profile update failed'\n        };\n      }\n    });\n    return function updateProfile(_x4) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var isLoggedIn = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      try {\n        setIsLoading(true);\n        var _userInfo = yield AsyncStorage.getItem('userInfo');\n        var _userToken = yield AsyncStorage.getItem('userToken');\n        _userInfo = JSON.parse(_userInfo);\n        if (_userInfo) {\n          console.log('User is logged in:', _userInfo.name);\n          setUserToken(_userToken);\n          setUserInfo(_userInfo);\n        } else {\n          console.log('No user logged in');\n        }\n        setIsLoading(false);\n      } catch (error) {\n        console.log('isLogged in error:', error);\n        setIsLoading(false);\n      }\n    });\n    return function isLoggedIn() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    isLoggedIn();\n    createTestUser();\n  }, []);\n  return _jsx(AuthContext.Provider, {\n    value: {\n      isLoading: isLoading,\n      userToken: userToken,\n      userInfo: userInfo,\n      error: error,\n      login: login,\n      register: register,\n      logout: logout,\n      updateProfile: updateProfile,\n      createTestUser: createTestUser\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["React","createContext","useState","useEffect","AsyncStorage","axios","apiClient","jsx","_jsx","getApiUrl","baseUrl","defaults","baseURL","endsWith","API_URL","AuthContext","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","userToken","setUserToken","_useState5","_useState6","userInfo","setUserInfo","_useState7","_useState8","error","setError","createTestUser","_ref2","_asyncToGenerator","console","log","post","name","email","password","phone","role","_error$response","_error$response2","_error$response2$data","_error$response2$data2","response","status","data","message","includes","_error$response3","apply","arguments","login","_ref3","JSON","stringify","success","userWithToken","_objectSpread","user","token","setItem","savedUserInfo","getItem","savedToken","_error$response4","_error$response5","_error$response5$data","_error$response6","_error$response6$data","_x","_x2","register","_ref4","userData","_error$response7","_error$response8","_error$response8$data","_error$response9","_error$response9$data","_x3","logout","_ref5","keys","key","removeItem","checkUserInfo","checkUserToken","Promise","resolve","setTimeout","updateProfile","_ref6","put","_error$response10","_error$response11","_error$response11$dat","_error$response12","_error$response12$dat","_x4","isLoggedIn","_ref7","parse","Provider","value"],"sources":["C:/Users/User/Downloads/mobile/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\n\n// Import apiClient pour utiliser la configuration centralisée\nimport apiClient from '../api/client';\n\n// Fonction pour obtenir l'URL de l'API\nconst getApiUrl = () => {\n  // Utiliser la baseURL de l'instance apiClient\n  const baseUrl = apiClient.defaults.baseURL;\n  \n  // Si baseURL se termine par /api, l'utiliser directement\n  if (baseUrl.endsWith('/api')) {\n    return baseUrl;\n  }\n  \n  // Sinon, ajouter /api si nécessaire\n  return baseUrl.endsWith('/') ? `${baseUrl}api` : `${baseUrl}/api`;\n};\n\n// Obtenir l'URL de l'API\nconst API_URL = getApiUrl();\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [userToken, setUserToken] = useState(null);\n  const [userInfo, setUserInfo] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Create a test user if none exists\n  const createTestUser = async () => {\n    try {\n      console.log('Creating test user account...');\n      await apiClient.post('/users/register', {\n        name: 'Test User',\n        email: 'test@example.com',\n        password: 'password123',\n        phone: '123-456-7890',\n        role: 'customer'\n      });\n      console.log('Test user created or already exists');\n    } catch (error) {\n      // If error code is 400 and message contains \"already exists\", the user already exists\n      if (error.response?.status === 400 && error.response?.data?.message?.includes('already exists')) {\n        console.log('Test user already exists');\n      } else {\n        console.error('Error creating test user:', error.response?.data || error.message);\n      }\n    }\n  };\n\n  // Login\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      console.log(`Attempting login with ${email}`);\n      const response = await apiClient.post('/users/login', {\n        email,\n        password\n      });\n\n      const data = response.data;\n      console.log('Login response:', JSON.stringify(data));\n\n      if (data.success) {\n        // Ensure user object has the token\n        const userWithToken = {\n          ...data.user,\n          token: data.token || data.user.token\n        };\n        \n        console.log('Setting user info with token:', userWithToken.token);\n        setUserInfo(userWithToken);\n        setUserToken(userWithToken.token);\n\n        // Save user info and token to AsyncStorage\n        await AsyncStorage.setItem('userInfo', JSON.stringify(userWithToken));\n        await AsyncStorage.setItem('userToken', userWithToken.token);\n        \n        // Verify data was saved\n        const savedUserInfo = await AsyncStorage.getItem('userInfo');\n        const savedToken = await AsyncStorage.getItem('userToken');\n        console.log('Saved user info:', savedUserInfo ? 'Yes' : 'No');\n        console.log('Saved token:', savedToken ? 'Yes' : 'No');\n      }\n\n      setIsLoading(false);\n      return data;\n    } catch (error) {\n      console.error('Login error:', error.response?.data || error.message);\n      setIsLoading(false);\n      setError(\n        error.response?.data?.message || 'An error occurred during login'\n      );\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Login failed'\n      };\n    }\n  };\n\n  // Register\n  const register = async (userData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      console.log(`Registering user: ${userData.email}`);\n      const response = await apiClient.post('/users/register', userData);\n\n      const data = response.data;\n      console.log('Register response:', data);\n\n      if (data.success) {\n        setUserInfo(data.user);\n        setUserToken(data.user.token);\n\n        // Save user info and token to AsyncStorage\n        await AsyncStorage.setItem('userInfo', JSON.stringify(data.user));\n        await AsyncStorage.setItem('userToken', data.user.token);\n      }\n\n      setIsLoading(false);\n      return data;\n    } catch (error) {\n      console.error('Registration error:', error.response?.data || error.message);\n      setIsLoading(false);\n      setError(\n        error.response?.data?.message || 'An error occurred during registration'\n      );\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Registration failed'\n      };\n    }\n  };\n\n  // Logout\n  const logout = async () => {\n    try {\n      console.log('=== LOGOUT STARTED ===');\n      setIsLoading(true);\n      \n      // First clear AsyncStorage completely\n      const keys = ['userInfo', 'userToken'];\n      console.log('Clearing AsyncStorage keys:', keys);\n      \n      // Clear AsyncStorage with multiple approaches for redundancy\n      for (const key of keys) {\n        await AsyncStorage.removeItem(key);\n        console.log(`Removed key: ${key}`);\n      }\n      \n      // Double-check the keys are gone\n      const checkUserInfo = await AsyncStorage.getItem('userInfo');\n      const checkUserToken = await AsyncStorage.getItem('userToken');\n      \n      console.log('After removal - userInfo exists:', !!checkUserInfo);\n      console.log('After removal - userToken exists:', !!checkUserToken);\n      \n      // Now clear the state\n      console.log('Clearing React state...');\n      setUserToken(null);\n      setUserInfo(null);\n      \n      // Small delay to ensure state updates\n      await new Promise(resolve => setTimeout(resolve, 800));\n      \n      console.log('=== LOGOUT COMPLETED ===');\n      setIsLoading(false);\n      \n      return { success: true, message: 'Logout successful' };\n    } catch (error) {\n      console.error('Logout error:', error);\n      setIsLoading(false);\n      \n      // Even if there's an error, still clear the state as a fallback\n      setUserToken(null);\n      setUserInfo(null);\n      \n      return { success: false, message: 'Error during logout, but state was cleared' };\n    }\n  };\n\n  // Update profile\n  const updateProfile = async (userData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await apiClient.put(\n        '/users/profile',\n        userData\n      );\n\n      const data = response.data;\n\n      if (data.success) {\n        setUserInfo(data.user);\n\n        // Update user info in AsyncStorage\n        await AsyncStorage.setItem('userInfo', JSON.stringify(data.user));\n      }\n\n      setIsLoading(false);\n      return data;\n    } catch (error) {\n      console.error('Profile update error:', error.response?.data || error.message);\n      setIsLoading(false);\n      setError(\n        error.response?.data?.message || 'An error occurred while updating profile'\n      );\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Profile update failed'\n      };\n    }\n  };\n\n  // Check if user is logged in on app load\n  const isLoggedIn = async () => {\n    try {\n      setIsLoading(true);\n      let userInfo = await AsyncStorage.getItem('userInfo');\n      let userToken = await AsyncStorage.getItem('userToken');\n      \n      userInfo = JSON.parse(userInfo);\n      \n      if (userInfo) {\n        console.log('User is logged in:', userInfo.name);\n        setUserToken(userToken);\n        setUserInfo(userInfo);\n      } else {\n        console.log('No user logged in');\n      }\n      \n      setIsLoading(false);\n    } catch (error) {\n      console.log('isLogged in error:', error);\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    isLoggedIn();\n    // Create test account for demo purposes\n    createTestUser();\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoading,\n        userToken,\n        userInfo,\n        error,\n        login,\n        register,\n        logout,\n        updateProfile,\n        createTestUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}