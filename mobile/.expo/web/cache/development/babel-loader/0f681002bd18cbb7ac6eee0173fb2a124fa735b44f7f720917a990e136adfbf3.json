{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport config from \"../config\";\nvar BASE_URLS = Array.isArray(config.API_URL) ? config.API_URL : [config.API_URL].concat(_toConsumableArray(config.API_URL_ALTERNATIVES || []));\nvar BASE_URL = BASE_URLS[0];\nvar apiClient = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: config.TIMEOUT || 10000,\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 500;\n  }\n});\nvar MAX_RETRIES = config.MAX_RETRIES || 3;\nvar RETRY_DELAY = 1000;\nvar retryRequest = function () {\n  var _ref = _asyncToGenerator(function* (error) {\n    var config = error.config;\n    config.retryCount = config.retryCount || 0;\n    if (config.retryCount >= MAX_RETRIES * BASE_URLS.length) {\n      return Promise.reject(error);\n    }\n    if (error.code === 'ECONNABORTED' || !error.response) {\n      var urlIndex = Math.floor(config.retryCount / MAX_RETRIES) % BASE_URLS.length;\n      config.baseURL = BASE_URLS[urlIndex];\n      console.log(\"Trying different base URL: \" + config.baseURL);\n    }\n    config.retryCount += 1;\n    yield new Promise(function (resolve) {\n      return setTimeout(resolve, RETRY_DELAY * (config.retryCount % MAX_RETRIES + 1));\n    });\n    return apiClient(config);\n  });\n  return function retryRequest(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\napiClient.interceptors.request.use(function () {\n  var _ref2 = _asyncToGenerator(function* (config) {\n    try {\n      var token = yield AsyncStorage.getItem('userToken');\n      if (!token) {\n        var userInfoString = yield AsyncStorage.getItem('userInfo');\n        if (userInfoString) {\n          var userInfo = JSON.parse(userInfoString);\n          token = userInfo.token;\n        }\n      }\n      if (token) {\n        config.headers.Authorization = \"Bearer \" + token;\n        console.log(\"Adding auth token to request: \" + token.substring(0, 15) + \"...\");\n      } else {\n        console.log('No auth token available for request');\n      }\n      console.log(\"API Request: \" + config.method.toUpperCase() + \" \" + config.baseURL + config.url);\n      return config;\n    } catch (error) {\n      console.error('Error in request interceptor:', error);\n      return config;\n    }\n  });\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}(), function (error) {\n  console.error('Request interceptor error:', error);\n  return Promise.reject(error);\n});\napiClient.interceptors.response.use(function (response) {\n  return response;\n}, function () {\n  var _ref3 = _asyncToGenerator(function* (error) {\n    var _error$response, _error$response2;\n    console.error('API Error:', ((_error$response = error.response) == null ? void 0 : _error$response.data) || error.message);\n    if (!error.response || error.code === 'ECONNABORTED') {\n      var _error$config;\n      console.log(\"Retrying request (\" + (((_error$config = error.config) == null ? void 0 : _error$config.retryCount) || 0 + 1) + \"/\" + MAX_RETRIES + \")\");\n      return retryRequest(error);\n    }\n    if (((_error$response2 = error.response) == null ? void 0 : _error$response2.status) === 401) {\n      console.log('Unauthorized - clearing token');\n      yield AsyncStorage.removeItem('userToken');\n      yield AsyncStorage.removeItem('userInfo');\n    }\n    return Promise.reject(error);\n  });\n  return function (_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nexport var servicesApi = {\n  getServices: function getServices() {\n    return apiClient.get('/services');\n  },\n  getService: function getService(id) {\n    return apiClient.get(\"/services/\" + id);\n  }\n};\nexport var appointmentsApi = {\n  getUserAppointments: function getUserAppointments() {\n    return apiClient.get('/appointments');\n  },\n  getAppointment: function getAppointment(id) {\n    return apiClient.get(\"/appointments/\" + id);\n  },\n  createAppointment: function createAppointment(data) {\n    return apiClient.post('/appointments', data);\n  },\n  updateAppointment: function updateAppointment(id, data) {\n    return apiClient.put(\"/appointments/\" + id, data);\n  },\n  cancelAppointment: function cancelAppointment(id) {\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    console.log(\"Making DELETE request to /appointments/\" + id + \" with data:\", data);\n    return apiClient.delete(\"/appointments/\" + id, {\n      data: data\n    });\n  },\n  deleteAppointment: function deleteAppointment(id) {\n    console.log(\"Deleting appointment permanently: /appointments/\" + id + \"/delete\");\n    return apiClient.delete(\"/appointments/\" + id + \"/delete\");\n  },\n  completeAppointment: function completeAppointment(id) {\n    return apiClient.put(\"/appointments/\" + id + \"/complete\");\n  },\n  getBarberAvailability: function getBarberAvailability(barberId, date, salonId) {\n    var encodedDate = encodeURIComponent(date);\n    var encodedSalonId = encodeURIComponent(salonId);\n    return apiClient.get(\"/appointments/availability/\" + barberId + \"?date=\" + encodedDate + \"&salonId=\" + encodedSalonId);\n  }\n};\nexport var barbersApi = {\n  getBarbers: function getBarbers() {\n    return apiClient.get('/users/barbers');\n  }\n};\nexport default apiClient;","map":{"version":3,"names":["axios","AsyncStorage","config","BASE_URLS","Array","isArray","API_URL","concat","_toConsumableArray","API_URL_ALTERNATIVES","BASE_URL","apiClient","create","baseURL","headers","timeout","TIMEOUT","validateStatus","status","MAX_RETRIES","RETRY_DELAY","retryRequest","_ref","_asyncToGenerator","error","retryCount","length","Promise","reject","code","response","urlIndex","Math","floor","console","log","resolve","setTimeout","_x","apply","arguments","interceptors","request","use","_ref2","token","getItem","userInfoString","userInfo","JSON","parse","Authorization","substring","method","toUpperCase","url","_x2","_ref3","_error$response","_error$response2","data","message","_error$config","removeItem","_x3","servicesApi","getServices","get","getService","id","appointmentsApi","getUserAppointments","getAppointment","createAppointment","post","updateAppointment","put","cancelAppointment","undefined","delete","deleteAppointment","completeAppointment","getBarberAvailability","barberId","date","salonId","encodedDate","encodeURIComponent","encodedSalonId","barbersApi","getBarbers"],"sources":["C:/Users/User/Downloads/mobile/api/client.js"],"sourcesContent":["import axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport config from '../config';\n\n// API base URL configuration\n// Utiliser la configuration centralisÃ©e\nconst BASE_URLS = Array.isArray(config.API_URL) \n  ? config.API_URL \n  : [config.API_URL, ...(config.API_URL_ALTERNATIVES || [])];\n\n// Default to first URL initially\nconst BASE_URL = BASE_URLS[0];\n\n// Create axios instance with timeout and retry configuration\nconst apiClient = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: config.TIMEOUT || 10000, // Utiliser le timeout de la configuration\n  validateStatus: function (status) {\n    return status >= 200 && status < 500; // Handle only 5xx errors as errors\n  },\n});\n\n// Retry configuration\nconst MAX_RETRIES = config.MAX_RETRIES || 3;\nconst RETRY_DELAY = 1000; // 1 second\n\n// Modified retry logic to try different base URLs\nconst retryRequest = async (error) => {\n  const config = error.config;\n  config.retryCount = config.retryCount || 0;\n  \n  if (config.retryCount >= MAX_RETRIES * BASE_URLS.length) {\n    return Promise.reject(error);\n  }\n  \n  // Try different base URLs if connection fails\n  if (error.code === 'ECONNABORTED' || !error.response) {\n    const urlIndex = Math.floor(config.retryCount / MAX_RETRIES) % BASE_URLS.length;\n    config.baseURL = BASE_URLS[urlIndex];\n    console.log(`Trying different base URL: ${config.baseURL}`);\n  }\n  \n  config.retryCount += 1;\n  await new Promise(resolve => setTimeout(resolve, RETRY_DELAY * (config.retryCount % MAX_RETRIES + 1)));\n  return apiClient(config);\n};\n\n// Request interceptor for adding the auth token\napiClient.interceptors.request.use(\n  async (config) => {\n    try {\n      // First try to get token from AsyncStorage\n      let token = await AsyncStorage.getItem('userToken');\n      \n      // If token doesn't exist in AsyncStorage, try to get userInfo\n      if (!token) {\n        const userInfoString = await AsyncStorage.getItem('userInfo');\n        if (userInfoString) {\n          const userInfo = JSON.parse(userInfoString);\n          token = userInfo.token;\n        }\n      }\n      \n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n        console.log(`Adding auth token to request: ${token.substring(0, 15)}...`);\n      } else {\n        console.log('No auth token available for request');\n      }\n      \n      console.log(`API Request: ${config.method.toUpperCase()} ${config.baseURL}${config.url}`);\n      return config;\n    } catch (error) {\n      console.error('Error in request interceptor:', error);\n      return config;\n    }\n  },\n  (error) => {\n    console.error('Request interceptor error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for global error handling\napiClient.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  async (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    \n    // Network errors or timeout - attempt retry\n    if (!error.response || error.code === 'ECONNABORTED') {\n      console.log(`Retrying request (${error.config?.retryCount || 0 + 1}/${MAX_RETRIES})`);\n      return retryRequest(error);\n    }\n\n    if (error.response?.status === 401) {\n      // Handle unauthorized errors (token expired, etc.)\n      console.log('Unauthorized - clearing token');\n      await AsyncStorage.removeItem('userToken');\n      await AsyncStorage.removeItem('userInfo');\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Services API\nexport const servicesApi = {\n  getServices: () => apiClient.get('/services'),\n  getService: (id) => apiClient.get(`/services/${id}`),\n};\n\n// Appointments API\nexport const appointmentsApi = {\n  getUserAppointments: () => apiClient.get('/appointments'),\n  getAppointment: (id) => apiClient.get(`/appointments/${id}`),\n  createAppointment: (data) => apiClient.post('/appointments', data),\n  updateAppointment: (id, data) => apiClient.put(`/appointments/${id}`, data),\n  cancelAppointment: (id, data = {}) => {\n    console.log(`Making DELETE request to /appointments/${id} with data:`, data);\n    return apiClient.delete(`/appointments/${id}`, { data });\n  },\n  deleteAppointment: (id) => {\n    console.log(`Deleting appointment permanently: /appointments/${id}/delete`);\n    return apiClient.delete(`/appointments/${id}/delete`);\n  },\n  completeAppointment: (id) => apiClient.put(`/appointments/${id}/complete`),\n  getBarberAvailability: (barberId, date, salonId) => {\n    const encodedDate = encodeURIComponent(date);\n    const encodedSalonId = encodeURIComponent(salonId);\n    return apiClient.get(`/appointments/availability/${barberId}?date=${encodedDate}&salonId=${encodedSalonId}`);\n  },\n};\n\n// Barbers API\nexport const barbersApi = {\n  // Get all barbers\n  getBarbers: () => apiClient.get('/users/barbers'),\n};\n\nexport default apiClient;\n\n "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,2CAA2C;AACpE,OAAOC,MAAM;AAIb,IAAMC,SAAS,GAAGC,KAAK,CAACC,OAAO,CAACH,MAAM,CAACI,OAAO,CAAC,GAC3CJ,MAAM,CAACI,OAAO,IACbJ,MAAM,CAACI,OAAO,EAAAC,MAAA,CAAAC,kBAAA,CAAMN,MAAM,CAACO,oBAAoB,IAAI,EAAE,EAAE;AAG5D,IAAMC,QAAQ,GAAGP,SAAS,CAAC,CAAC,CAAC;AAG7B,IAAMQ,SAAS,GAAGX,KAAK,CAACY,MAAM,CAAC;EAC7BC,OAAO,EAAEH,QAAQ;EACjBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,OAAO,EAAEb,MAAM,CAACc,OAAO,IAAI,KAAK;EAChCC,cAAc,EAAE,SAAhBA,cAAcA,CAAYC,MAAM,EAAE;IAChC,OAAOA,MAAM,IAAI,GAAG,IAAIA,MAAM,GAAG,GAAG;EACtC;AACF,CAAC,CAAC;AAGF,IAAMC,WAAW,GAAGjB,MAAM,CAACiB,WAAW,IAAI,CAAC;AAC3C,IAAMC,WAAW,GAAG,IAAI;AAGxB,IAAMC,YAAY;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,KAAK,EAAK;IACpC,IAAMtB,MAAM,GAAGsB,KAAK,CAACtB,MAAM;IAC3BA,MAAM,CAACuB,UAAU,GAAGvB,MAAM,CAACuB,UAAU,IAAI,CAAC;IAE1C,IAAIvB,MAAM,CAACuB,UAAU,IAAIN,WAAW,GAAGhB,SAAS,CAACuB,MAAM,EAAE;MACvD,OAAOC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;IAC9B;IAGA,IAAIA,KAAK,CAACK,IAAI,KAAK,cAAc,IAAI,CAACL,KAAK,CAACM,QAAQ,EAAE;MACpD,IAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAAC/B,MAAM,CAACuB,UAAU,GAAGN,WAAW,CAAC,GAAGhB,SAAS,CAACuB,MAAM;MAC/ExB,MAAM,CAACW,OAAO,GAAGV,SAAS,CAAC4B,QAAQ,CAAC;MACpCG,OAAO,CAACC,GAAG,iCAA+BjC,MAAM,CAACW,OAAS,CAAC;IAC7D;IAEAX,MAAM,CAACuB,UAAU,IAAI,CAAC;IACtB,MAAM,IAAIE,OAAO,CAAC,UAAAS,OAAO;MAAA,OAAIC,UAAU,CAACD,OAAO,EAAEhB,WAAW,IAAIlB,MAAM,CAACuB,UAAU,GAAGN,WAAW,GAAG,CAAC,CAAC,CAAC;IAAA,EAAC;IACtG,OAAOR,SAAS,CAACT,MAAM,CAAC;EAC1B,CAAC;EAAA,gBAlBKmB,YAAYA,CAAAiB,EAAA;IAAA,OAAAhB,IAAA,CAAAiB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAkBjB;AAGD7B,SAAS,CAAC8B,YAAY,CAACC,OAAO,CAACC,GAAG;EAAA,IAAAC,KAAA,GAAArB,iBAAA,CAChC,WAAOrB,MAAM,EAAK;IAChB,IAAI;MAEF,IAAI2C,KAAK,SAAS5C,YAAY,CAAC6C,OAAO,CAAC,WAAW,CAAC;MAGnD,IAAI,CAACD,KAAK,EAAE;QACV,IAAME,cAAc,SAAS9C,YAAY,CAAC6C,OAAO,CAAC,UAAU,CAAC;QAC7D,IAAIC,cAAc,EAAE;UAClB,IAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,cAAc,CAAC;UAC3CF,KAAK,GAAGG,QAAQ,CAACH,KAAK;QACxB;MACF;MAEA,IAAIA,KAAK,EAAE;QACT3C,MAAM,CAACY,OAAO,CAACqC,aAAa,eAAaN,KAAO;QAChDX,OAAO,CAACC,GAAG,oCAAkCU,KAAK,CAACO,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,QAAK,CAAC;MAC3E,CAAC,MAAM;QACLlB,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MACpD;MAEAD,OAAO,CAACC,GAAG,mBAAiBjC,MAAM,CAACmD,MAAM,CAACC,WAAW,CAAC,CAAC,SAAIpD,MAAM,CAACW,OAAO,GAAGX,MAAM,CAACqD,GAAK,CAAC;MACzF,OAAOrD,MAAM;IACf,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACdU,OAAO,CAACV,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,OAAOtB,MAAM;IACf;EACF,CAAC;EAAA,iBAAAsD,GAAA;IAAA,OAAAZ,KAAA,CAAAL,KAAA,OAAAC,SAAA;EAAA;AAAA,KACD,UAAChB,KAAK,EAAK;EACTU,OAAO,CAACV,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;EAClD,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;AAGDb,SAAS,CAAC8B,YAAY,CAACX,QAAQ,CAACa,GAAG,CACjC,UAACb,QAAQ,EAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC;EAAA,IAAA2B,KAAA,GAAAlC,iBAAA,CACD,WAAOC,KAAK,EAAK;IAAA,IAAAkC,eAAA,EAAAC,gBAAA;IACfzB,OAAO,CAACV,KAAK,CAAC,YAAY,EAAE,EAAAkC,eAAA,GAAAlC,KAAK,CAACM,QAAQ,qBAAd4B,eAAA,CAAgBE,IAAI,KAAIpC,KAAK,CAACqC,OAAO,CAAC;IAGlE,IAAI,CAACrC,KAAK,CAACM,QAAQ,IAAIN,KAAK,CAACK,IAAI,KAAK,cAAc,EAAE;MAAA,IAAAiC,aAAA;MACpD5B,OAAO,CAACC,GAAG,yBAAsB,EAAA2B,aAAA,GAAAtC,KAAK,CAACtB,MAAM,qBAAZ4D,aAAA,CAAcrC,UAAU,KAAI,CAAC,GAAG,CAAC,UAAIN,WAAW,MAAG,CAAC;MACrF,OAAOE,YAAY,CAACG,KAAK,CAAC;IAC5B;IAEA,IAAI,EAAAmC,gBAAA,GAAAnC,KAAK,CAACM,QAAQ,qBAAd6B,gBAAA,CAAgBzC,MAAM,MAAK,GAAG,EAAE;MAElCgB,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5C,MAAMlC,YAAY,CAAC8D,UAAU,CAAC,WAAW,CAAC;MAC1C,MAAM9D,YAAY,CAAC8D,UAAU,CAAC,UAAU,CAAC;IAC3C;IACA,OAAOpC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;EAC9B,CAAC;EAAA,iBAAAwC,GAAA;IAAA,OAAAP,KAAA,CAAAlB,KAAA,OAAAC,SAAA;EAAA;AAAA,GACH,CAAC;AAGD,OAAO,IAAMyB,WAAW,GAAG;EACzBC,WAAW,EAAE,SAAbA,WAAWA,CAAA;IAAA,OAAQvD,SAAS,CAACwD,GAAG,CAAC,WAAW,CAAC;EAAA;EAC7CC,UAAU,EAAE,SAAZA,UAAUA,CAAGC,EAAE;IAAA,OAAK1D,SAAS,CAACwD,GAAG,gBAAcE,EAAI,CAAC;EAAA;AACtD,CAAC;AAGD,OAAO,IAAMC,eAAe,GAAG;EAC7BC,mBAAmB,EAAE,SAArBA,mBAAmBA,CAAA;IAAA,OAAQ5D,SAAS,CAACwD,GAAG,CAAC,eAAe,CAAC;EAAA;EACzDK,cAAc,EAAE,SAAhBA,cAAcA,CAAGH,EAAE;IAAA,OAAK1D,SAAS,CAACwD,GAAG,oBAAkBE,EAAI,CAAC;EAAA;EAC5DI,iBAAiB,EAAE,SAAnBA,iBAAiBA,CAAGb,IAAI;IAAA,OAAKjD,SAAS,CAAC+D,IAAI,CAAC,eAAe,EAAEd,IAAI,CAAC;EAAA;EAClEe,iBAAiB,EAAE,SAAnBA,iBAAiBA,CAAGN,EAAE,EAAET,IAAI;IAAA,OAAKjD,SAAS,CAACiE,GAAG,oBAAkBP,EAAE,EAAIT,IAAI,CAAC;EAAA;EAC3EiB,iBAAiB,EAAE,SAAnBA,iBAAiBA,CAAGR,EAAE,EAAgB;IAAA,IAAdT,IAAI,GAAApB,SAAA,CAAAd,MAAA,QAAAc,SAAA,QAAAsC,SAAA,GAAAtC,SAAA,MAAG,CAAC,CAAC;IAC/BN,OAAO,CAACC,GAAG,6CAA2CkC,EAAE,kBAAeT,IAAI,CAAC;IAC5E,OAAOjD,SAAS,CAACoE,MAAM,oBAAkBV,EAAE,EAAI;MAAET,IAAI,EAAJA;IAAK,CAAC,CAAC;EAC1D,CAAC;EACDoB,iBAAiB,EAAE,SAAnBA,iBAAiBA,CAAGX,EAAE,EAAK;IACzBnC,OAAO,CAACC,GAAG,sDAAoDkC,EAAE,YAAS,CAAC;IAC3E,OAAO1D,SAAS,CAACoE,MAAM,oBAAkBV,EAAE,YAAS,CAAC;EACvD,CAAC;EACDY,mBAAmB,EAAE,SAArBA,mBAAmBA,CAAGZ,EAAE;IAAA,OAAK1D,SAAS,CAACiE,GAAG,oBAAkBP,EAAE,cAAW,CAAC;EAAA;EAC1Ea,qBAAqB,EAAE,SAAvBA,qBAAqBA,CAAGC,QAAQ,EAAEC,IAAI,EAAEC,OAAO,EAAK;IAClD,IAAMC,WAAW,GAAGC,kBAAkB,CAACH,IAAI,CAAC;IAC5C,IAAMI,cAAc,GAAGD,kBAAkB,CAACF,OAAO,CAAC;IAClD,OAAO1E,SAAS,CAACwD,GAAG,iCAA+BgB,QAAQ,cAASG,WAAW,iBAAYE,cAAgB,CAAC;EAC9G;AACF,CAAC;AAGD,OAAO,IAAMC,UAAU,GAAG;EAExBC,UAAU,EAAE,SAAZA,UAAUA,CAAA;IAAA,OAAQ/E,SAAS,CAACwD,GAAG,CAAC,gBAAgB,CAAC;EAAA;AACnD,CAAC;AAED,eAAexD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}