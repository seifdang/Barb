{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Text, Card, Title, Paragraph, Button, ActivityIndicator, Chip, Searchbar, ProgressBar, Avatar, DataTable } from 'react-native-paper';\nimport { Ionicons } from '@expo/vector-icons';\nimport { format } from 'date-fns';\nimport { AuthContext } from \"../../context/AuthContext\";\nimport apiClient from \"../../api/client\";\nimport { BarChart, LineChart } from 'react-native-chart-kit';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar screenWidth = Dimensions.get('window').width - 40;\nvar SalonDashboardScreen = function SalonDashboardScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _ref2 = route.params || {},\n    salonId = _ref2.salonId;\n  var _useContext = useContext(AuthContext),\n    userInfo = _useContext.userInfo;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    salon = _useState4[0],\n    setSalon = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    salonStats = _useState6[0],\n    setSalonStats = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    customers = _useState8[0],\n    setCustomers = _useState8[1];\n  var _useState9 = useState('week'),\n    _useState10 = _slicedToArray(_useState9, 2),\n    dateFilter = _useState10[0],\n    setDateFilter = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    searchQuery = _useState12[0],\n    setSearchQuery = _useState12[1];\n  var _useState13 = useState('stats'),\n    _useState14 = _slicedToArray(_useState13, 2),\n    activeTab = _useState14[0],\n    setActiveTab = _useState14[1];\n  useEffect(function () {\n    fetchSalon();\n  }, [salonId]);\n  useEffect(function () {\n    if (salon) {\n      fetchSalonStats();\n    }\n  }, [dateFilter, salon]);\n  var fetchSalon = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        if (!salonId) {\n          var salonsResponse = yield apiClient.get('/manager/salons', {\n            headers: {\n              Authorization: \"Bearer \" + userInfo.token\n            }\n          });\n          if (salonsResponse.data && salonsResponse.data.success && salonsResponse.data.salons.length > 0) {\n            setSalon(salonsResponse.data.salons[0]);\n            fetchSalonStats(salonsResponse.data.salons[0]._id);\n            fetchSalonCustomers(salonsResponse.data.salons[0]._id);\n          } else {\n            Alert.alert('Error', 'No salons found for this manager');\n            setLoading(false);\n            return;\n          }\n        } else {\n          var response = yield apiClient.get(\"/salons/\" + salonId, {\n            headers: {\n              Authorization: \"Bearer \" + userInfo.token\n            }\n          });\n          if (response.data && response.data.success) {\n            setSalon(response.data.salon);\n            fetchSalonStats(salonId);\n            fetchSalonCustomers(salonId);\n          } else {\n            Alert.alert('Error', 'Failed to load salon details');\n            setLoading(false);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching salon:', error);\n        setLoading(false);\n        Alert.alert('Error', 'Failed to load salon: ' + (error.message || 'Unknown error'));\n      }\n    });\n    return function fetchSalon() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var fetchSalonStats = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : salonId;\n      try {\n        setLoading(true);\n        var targetId = id || salon._id;\n        var response = yield apiClient.get(\"/manager/salon/\" + targetId + \"/stats?period=\" + dateFilter, {\n          headers: {\n            Authorization: \"Bearer \" + userInfo.token\n          }\n        });\n        if (response.data && response.data.success) {\n          setSalonStats(response.data.stats);\n        } else {\n          Alert.alert('Error', 'Failed to load salon statistics');\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching salon stats:', error);\n        setLoading(false);\n        Alert.alert('Error', 'Failed to load salon statistics: ' + (error.message || 'Unknown error'));\n      }\n    });\n    return function fetchSalonStats() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var fetchSalonCustomers = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : salonId;\n      try {\n        var targetId = id || salon._id;\n        var response = yield apiClient.get(\"/manager/salon/\" + targetId + \"/customers\", {\n          headers: {\n            Authorization: \"Bearer \" + userInfo.token\n          }\n        });\n        if (response.data && response.data.success) {\n          setCustomers(response.data.customers);\n        } else {\n          console.error('Failed to load customers:', response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching customers:', error);\n      }\n    });\n    return function fetchSalonCustomers() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var getChartData = function getChartData() {\n    if (!salonStats || !salonStats.dailyAppointments) {\n      return {\n        labels: ['No Data'],\n        datasets: [{\n          data: [0]\n        }]\n      };\n    }\n    var dates = Object.keys(salonStats.dailyAppointments).sort();\n    var recentDates = dates.slice(-7);\n    return {\n      labels: recentDates.map(function (date) {\n        var _date$split = date.split('-'),\n          _date$split2 = _slicedToArray(_date$split, 3),\n          year = _date$split2[0],\n          month = _date$split2[1],\n          day = _date$split2[2];\n        return month + \"/\" + day;\n      }),\n      datasets: [{\n        data: recentDates.map(function (date) {\n          return salonStats.dailyAppointments[date] || 0;\n        })\n      }]\n    };\n  };\n  var filteredCustomers = customers.filter(function (customer) {\n    return customer.name.toLowerCase().includes(searchQuery.toLowerCase()) || customer.email.toLowerCase().includes(searchQuery.toLowerCase()) || customer.phone && customer.phone.includes(searchQuery);\n  });\n  var renderCustomerItem = function renderCustomerItem(_ref6) {\n    var item = _ref6.item;\n    return _jsx(Card, {\n      style: styles.customerCard,\n      children: _jsx(Card.Content, {\n        style: styles.customerCardContent,\n        children: _jsxs(View, {\n          style: styles.customerInfo,\n          children: [_jsx(Title, {\n            style: styles.customerName,\n            children: item.name\n          }), _jsx(Paragraph, {\n            children: item.email\n          }), _jsx(Paragraph, {\n            children: item.phone || 'No phone'\n          }), _jsxs(View, {\n            style: styles.customerMetrics,\n            children: [_jsxs(Chip, {\n              style: styles.customerMetric,\n              children: [\"Visits: \", item.visits]\n            }), _jsxs(Chip, {\n              style: styles.customerMetric,\n              children: [\"Spent: $\", item.totalSpent]\n            })]\n          }), item.lastVisit && _jsxs(Paragraph, {\n            style: styles.lastVisit,\n            children: [\"Last visit: \", format(new Date(item.lastVisit), 'MMM dd, yyyy')]\n          })]\n        })\n      })\n    });\n  };\n  var history = appointments.map(function (app) {\n    var _app$customer, _app$barber, _app$service, _app$service2, _app$service3;\n    return {\n      id: app._id,\n      date: new Date(app.date),\n      formattedDate: format(new Date(app.date), 'MMM dd, yyyy HH:mm'),\n      client: ((_app$customer = app.customer) == null ? void 0 : _app$customer.name) || 'Unknown Client',\n      barber: ((_app$barber = app.barber) == null ? void 0 : _app$barber.name) || 'Unknown Barber',\n      service: ((_app$service = app.service) == null ? void 0 : _app$service.name) || 'Unknown Service',\n      serviceType: ((_app$service2 = app.service) == null ? void 0 : _app$service2.category) || 'Unknown Type',\n      price: ((_app$service3 = app.service) == null ? void 0 : _app$service3.price) || 0,\n      status: app.status\n    };\n  });\n  if (loading && !salon) {\n    return _jsxs(View, {\n      style: styles.centeredContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#0F4C75\"\n      }), _jsx(Text, {\n        style: {\n          marginTop: 20\n        },\n        children: \"Loading salon dashboard...\"\n      })]\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.headerTitle,\n        children: \"Salon Dashboard\"\n      }), salon && _jsx(Text, {\n        style: styles.headerSubtitle,\n        children: salon.name\n      })]\n    }), _jsxs(View, {\n      style: styles.tabContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: [styles.tab, activeTab === 'stats' && styles.activeTab],\n        onPress: function onPress() {\n          return setActiveTab('stats');\n        },\n        children: _jsx(Text, {\n          style: [styles.tabText, activeTab === 'stats' && styles.activeTabText],\n          children: \"Stats\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.tab, activeTab === 'customers' && styles.activeTab],\n        onPress: function onPress() {\n          return setActiveTab('customers');\n        },\n        children: _jsx(Text, {\n          style: [styles.tabText, activeTab === 'customers' && styles.activeTabText],\n          children: \"Customers\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.tab, activeTab === 'appointments' && styles.activeTab],\n        onPress: function onPress() {\n          return setActiveTab('appointments');\n        },\n        children: _jsx(Text, {\n          style: [styles.tabText, activeTab === 'appointments' && styles.activeTabText],\n          children: \"Staff\"\n        })\n      })]\n    }), _jsxs(ScrollView, {\n      style: styles.content,\n      children: [activeTab === 'stats' && _jsxs(_Fragment, {\n        children: [_jsxs(View, {\n          style: styles.dateFilterContainer,\n          children: [_jsx(Text, {\n            style: styles.sectionTitle,\n            children: \"Statistics Period:\"\n          }), _jsxs(View, {\n            style: styles.dateFilterButtons,\n            children: [_jsx(Button, {\n              mode: dateFilter === 'day' ? 'contained' : 'outlined',\n              onPress: function onPress() {\n                return setDateFilter('day');\n              },\n              style: styles.dateFilterButton,\n              children: \"Day\"\n            }), _jsx(Button, {\n              mode: dateFilter === 'week' ? 'contained' : 'outlined',\n              onPress: function onPress() {\n                return setDateFilter('week');\n              },\n              style: styles.dateFilterButton,\n              children: \"Week\"\n            }), _jsx(Button, {\n              mode: dateFilter === 'month' ? 'contained' : 'outlined',\n              onPress: function onPress() {\n                return setDateFilter('month');\n              },\n              style: styles.dateFilterButton,\n              children: \"Month\"\n            })]\n          })]\n        }), salonStats && _jsxs(View, {\n          style: styles.statsContainer,\n          children: [_jsxs(View, {\n            style: styles.statsCards,\n            children: [_jsx(Card, {\n              style: [styles.statsCard, {\n                backgroundColor: '#E3F2FD'\n              }],\n              children: _jsxs(Card.Content, {\n                children: [_jsx(Paragraph, {\n                  children: \"Appointments\"\n                }), _jsx(Title, {\n                  style: styles.statsValue,\n                  children: salonStats.appointmentsCount\n                })]\n              })\n            }), _jsx(Card, {\n              style: [styles.statsCard, {\n                backgroundColor: '#E8F5E9'\n              }],\n              children: _jsxs(Card.Content, {\n                children: [_jsx(Paragraph, {\n                  children: \"Customers\"\n                }), _jsx(Title, {\n                  style: styles.statsValue,\n                  children: salonStats.clientsCount\n                })]\n              })\n            }), _jsx(Card, {\n              style: [styles.statsCard, {\n                backgroundColor: '#FFF8E1'\n              }],\n              children: _jsxs(Card.Content, {\n                children: [_jsx(Paragraph, {\n                  children: \"Revenue\"\n                }), _jsxs(Title, {\n                  style: styles.statsValue,\n                  children: [\"$\", salonStats.revenue]\n                })]\n              })\n            })]\n          }), _jsx(Card, {\n            style: styles.chartCard,\n            children: _jsxs(Card.Content, {\n              children: [_jsx(Title, {\n                style: styles.chartTitle,\n                children: \"Daily Appointments\"\n              }), _jsx(BarChart, {\n                data: getChartData(),\n                width: screenWidth,\n                height: 220,\n                yAxisLabel: \"\",\n                chartConfig: {\n                  backgroundColor: '#ffffff',\n                  backgroundGradientFrom: '#ffffff',\n                  backgroundGradientTo: '#ffffff',\n                  decimalPlaces: 0,\n                  color: function color() {\n                    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                    return \"rgba(15, 76, 117, \" + opacity + \")\";\n                  },\n                  labelColor: function labelColor() {\n                    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                    return \"rgba(0, 0, 0, \" + opacity + \")\";\n                  },\n                  style: {\n                    borderRadius: 16\n                  }\n                },\n                style: styles.chart\n              })]\n            })\n          }), _jsx(Card, {\n            style: styles.statusCard,\n            children: _jsxs(Card.Content, {\n              children: [_jsx(Title, {\n                style: styles.statusTitle,\n                children: \"Appointment Status\"\n              }), _jsxs(View, {\n                style: styles.statusRow,\n                children: [_jsx(Text, {\n                  style: styles.statusLabel,\n                  children: \"Pending\"\n                }), _jsx(Text, {\n                  style: styles.statusValue,\n                  children: salonStats.statusCounts.pending\n                })]\n              }), _jsx(ProgressBar, {\n                progress: salonStats.appointmentsCount > 0 ? salonStats.statusCounts.pending / salonStats.appointmentsCount : 0,\n                color: \"#FFC107\",\n                style: styles.progressBar\n              }), _jsxs(View, {\n                style: styles.statusRow,\n                children: [_jsx(Text, {\n                  style: styles.statusLabel,\n                  children: \"Confirmed\"\n                }), _jsx(Text, {\n                  style: styles.statusValue,\n                  children: salonStats.statusCounts.confirmed\n                })]\n              }), _jsx(ProgressBar, {\n                progress: salonStats.appointmentsCount > 0 ? salonStats.statusCounts.confirmed / salonStats.appointmentsCount : 0,\n                color: \"#2196F3\",\n                style: styles.progressBar\n              }), _jsxs(View, {\n                style: styles.statusRow,\n                children: [_jsx(Text, {\n                  style: styles.statusLabel,\n                  children: \"Completed\"\n                }), _jsx(Text, {\n                  style: styles.statusValue,\n                  children: salonStats.statusCounts.completed\n                })]\n              }), _jsx(ProgressBar, {\n                progress: salonStats.appointmentsCount > 0 ? salonStats.statusCounts.completed / salonStats.appointmentsCount : 0,\n                color: \"#4CAF50\",\n                style: styles.progressBar\n              }), _jsxs(View, {\n                style: styles.statusRow,\n                children: [_jsx(Text, {\n                  style: styles.statusLabel,\n                  children: \"Cancelled\"\n                }), _jsx(Text, {\n                  style: styles.statusValue,\n                  children: salonStats.statusCounts.cancelled\n                })]\n              }), _jsx(ProgressBar, {\n                progress: salonStats.appointmentsCount > 0 ? salonStats.statusCounts.cancelled / salonStats.appointmentsCount : 0,\n                color: \"#F44336\",\n                style: styles.progressBar\n              })]\n            })\n          })]\n        })]\n      }), activeTab === 'customers' && _jsxs(_Fragment, {\n        children: [_jsx(Searchbar, {\n          placeholder: \"Search customers...\",\n          onChangeText: function onChangeText(query) {\n            return setSearchQuery(query);\n          },\n          value: searchQuery,\n          style: styles.searchBar\n        }), _jsxs(Text, {\n          style: styles.customerCount,\n          children: [filteredCustomers.length, \" \", filteredCustomers.length === 1 ? 'Customer' : 'Customers']\n        }), filteredCustomers.length === 0 ? _jsx(View, {\n          style: styles.emptyContainer,\n          children: _jsx(Text, {\n            style: styles.emptyText,\n            children: \"No customers found\"\n          })\n        }) : filteredCustomers.map(function (customer) {\n          return renderCustomerItem({\n            item: customer\n          });\n        })]\n      }), activeTab === 'appointments' && salon && _jsxs(_Fragment, {\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Staff Members\"\n        }), salon.staff && salon.staff.length > 0 ? _jsx(View, {\n          style: styles.staffContainer,\n          children: salon.staff.map(function (staff) {\n            var _staff$specialties;\n            return _jsxs(Card, {\n              style: styles.staffCard,\n              children: [_jsxs(Card.Content, {\n                style: styles.staffCardContent,\n                children: [_jsx(Avatar.Image, {\n                  size: 50,\n                  source: {\n                    uri: staff.profileImage || 'https://randomuser.me/api/portraits/men/32.jpg'\n                  }\n                }), _jsxs(View, {\n                  style: styles.staffInfo,\n                  children: [_jsx(Title, {\n                    style: styles.staffName,\n                    children: staff.name\n                  }), _jsx(Paragraph, {\n                    children: staff.role\n                  }), _jsx(View, {\n                    style: styles.specialtiesContainer,\n                    children: (_staff$specialties = staff.specialties) == null ? void 0 : _staff$specialties.map(function (specialty, idx) {\n                      return _jsx(Chip, {\n                        style: styles.specialtyChip,\n                        children: specialty\n                      }, idx);\n                    })\n                  })]\n                })]\n              }), _jsx(Card.Actions, {\n                children: _jsx(Button, {\n                  onPress: function onPress() {\n                    return navigation.navigate('ManagerDashboard', {\n                      barber: staff\n                    });\n                  },\n                  children: \"View Performance\"\n                })\n              })]\n            }, staff._id);\n          })\n        }) : _jsx(View, {\n          style: styles.emptyContainer,\n          children: _jsx(Text, {\n            style: styles.emptyText,\n            children: \"No staff members found for this salon\"\n          })\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  centeredContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  header: {\n    backgroundColor: '#0F4C75',\n    padding: 20,\n    paddingTop: 50,\n    paddingBottom: 20\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  headerSubtitle: {\n    fontSize: 18,\n    color: '#BBE1FA',\n    marginTop: 5\n  },\n  content: {\n    flex: 1,\n    padding: 15\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    backgroundColor: '#fff',\n    elevation: 2\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: 15,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n    borderBottomColor: '#0F4C75'\n  },\n  tabText: {\n    fontSize: 16,\n    color: '#555'\n  },\n  activeTabText: {\n    color: '#0F4C75',\n    fontWeight: 'bold'\n  },\n  dateFilterContainer: {\n    marginBottom: 15\n  },\n  dateFilterButtons: {\n    flexDirection: 'row',\n    marginTop: 10\n  },\n  dateFilterButton: {\n    marginRight: 10\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#1B262C',\n    marginBottom: 10\n  },\n  statsContainer: {\n    marginBottom: 20\n  },\n  statsCards: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 15\n  },\n  statsCard: {\n    flex: 1,\n    marginRight: 10\n  },\n  statsValue: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  chartCard: {\n    marginBottom: 15\n  },\n  chartTitle: {\n    fontSize: 18,\n    marginBottom: 10\n  },\n  chart: {\n    marginVertical: 8,\n    borderRadius: 16\n  },\n  statusCard: {\n    marginBottom: 15\n  },\n  statusTitle: {\n    fontSize: 18,\n    marginBottom: 15\n  },\n  statusRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 5\n  },\n  statusLabel: {\n    fontSize: 14\n  },\n  statusValue: {\n    fontSize: 14,\n    fontWeight: 'bold'\n  },\n  progressBar: {\n    height: 8,\n    borderRadius: 4,\n    marginBottom: 15\n  },\n  searchBar: {\n    marginBottom: 15,\n    elevation: 1\n  },\n  customerCount: {\n    fontSize: 16,\n    marginBottom: 10,\n    color: '#555'\n  },\n  customerCard: {\n    marginBottom: 10\n  },\n  customerCardContent: {\n    flexDirection: 'row'\n  },\n  customerInfo: {\n    flex: 1\n  },\n  customerName: {\n    fontSize: 18\n  },\n  customerMetrics: {\n    flexDirection: 'row',\n    marginTop: 10\n  },\n  customerMetric: {\n    marginRight: 8\n  },\n  lastVisit: {\n    marginTop: 8,\n    fontStyle: 'italic'\n  },\n  emptyContainer: {\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#555'\n  },\n  staffContainer: {\n    marginBottom: 20\n  },\n  staffCard: {\n    marginBottom: 10\n  },\n  staffCardContent: {\n    flexDirection: 'row'\n  },\n  staffInfo: {\n    marginLeft: 15,\n    flex: 1\n  },\n  staffName: {\n    fontSize: 16\n  },\n  specialtiesContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 5\n  },\n  specialtyChip: {\n    marginRight: 5,\n    marginBottom: 5,\n    backgroundColor: '#E1F5FE'\n  },\n  appointmentInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  appointmentClient: {\n    flex: 1,\n    fontSize: 16\n  },\n  serviceRow: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  appointmentService: {\n    fontSize: 16\n  },\n  appointmentServiceType: {\n    fontSize: 14,\n    fontStyle: 'italic'\n  },\n  appointmentDate: {\n    fontSize: 14,\n    color: '#555'\n  },\n  appointmentBarber: {\n    fontSize: 14,\n    color: '#555'\n  },\n  serviceTypeText: {\n    fontSize: 14,\n    fontStyle: 'italic'\n  }\n});\nexport default SalonDashboardScreen;","map":{"version":3,"names":["React","useState","useEffect","useContext","View","StyleSheet","ScrollView","TouchableOpacity","Alert","FlatList","Text","Card","Title","Paragraph","Button","ActivityIndicator","Chip","Searchbar","ProgressBar","Avatar","DataTable","Ionicons","format","AuthContext","apiClient","BarChart","LineChart","Dimensions","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","screenWidth","get","width","SalonDashboardScreen","_ref","route","navigation","_ref2","params","salonId","_useContext","userInfo","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","salon","setSalon","_useState5","_useState6","salonStats","setSalonStats","_useState7","_useState8","customers","setCustomers","_useState9","_useState10","dateFilter","setDateFilter","_useState11","_useState12","searchQuery","setSearchQuery","_useState13","_useState14","activeTab","setActiveTab","fetchSalon","fetchSalonStats","_ref3","_asyncToGenerator","salonsResponse","headers","Authorization","token","data","success","salons","length","_id","fetchSalonCustomers","alert","response","error","console","message","apply","arguments","_ref4","id","undefined","targetId","stats","_ref5","getChartData","dailyAppointments","labels","datasets","dates","Object","keys","sort","recentDates","slice","map","date","_date$split","split","_date$split2","year","month","day","filteredCustomers","filter","customer","name","toLowerCase","includes","email","phone","renderCustomerItem","_ref6","item","style","styles","customerCard","children","Content","customerCardContent","customerInfo","customerName","customerMetrics","customerMetric","visits","totalSpent","lastVisit","Date","history","appointments","app","_app$customer","_app$barber","_app$service","_app$service2","_app$service3","formattedDate","client","barber","service","serviceType","category","price","status","centeredContainer","size","color","marginTop","container","header","headerTitle","headerSubtitle","tabContainer","tab","onPress","tabText","activeTabText","content","dateFilterContainer","sectionTitle","dateFilterButtons","mode","dateFilterButton","statsContainer","statsCards","statsCard","backgroundColor","statsValue","appointmentsCount","clientsCount","revenue","chartCard","chartTitle","height","yAxisLabel","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","opacity","labelColor","borderRadius","chart","statusCard","statusTitle","statusRow","statusLabel","statusValue","statusCounts","pending","progress","progressBar","confirmed","completed","cancelled","placeholder","onChangeText","query","value","searchBar","customerCount","emptyContainer","emptyText","staff","staffContainer","_staff$specialties","staffCard","staffCardContent","Image","source","uri","profileImage","staffInfo","staffName","role","specialtiesContainer","specialties","specialty","idx","specialtyChip","Actions","navigate","create","flex","justifyContent","alignItems","padding","paddingTop","paddingBottom","fontSize","fontWeight","flexDirection","elevation","paddingVertical","borderBottomWidth","borderBottomColor","marginBottom","marginRight","marginVertical","fontStyle","marginLeft","flexWrap","appointmentInfo","appointmentClient","serviceRow","appointmentService","appointmentServiceType","appointmentDate","appointmentBarber","serviceTypeText"],"sources":["C:/Users/User/Downloads/mobile/screens/manager/SalonDashboardScreen.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, StyleSheet, ScrollView, TouchableOpacity, Alert, FlatList } from 'react-native';\r\nimport { Text, Card, Title, Paragraph, Button, ActivityIndicator, Chip, Searchbar, ProgressBar, Avatar, DataTable } from 'react-native-paper';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { format } from 'date-fns';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport apiClient from '../../api/client';\r\nimport { BarChart, LineChart } from 'react-native-chart-kit';\r\nimport { Dimensions } from 'react-native';\r\n\r\nconst screenWidth = Dimensions.get('window').width - 40;\r\n\r\nconst SalonDashboardScreen = ({ route, navigation }) => {\r\n  const { salonId } = route.params || {};\r\n  const { userInfo } = useContext(AuthContext);\r\n  \r\n  const [loading, setLoading] = useState(true);\r\n  const [salon, setSalon] = useState(null);\r\n  const [salonStats, setSalonStats] = useState(null);\r\n  const [customers, setCustomers] = useState([]);\r\n  const [dateFilter, setDateFilter] = useState('week'); // 'day', 'week', 'month'\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [activeTab, setActiveTab] = useState('stats'); // 'stats', 'customers', 'appointments'\r\n  \r\n  // Fetch salon data on component mount\r\n  useEffect(() => {\r\n    fetchSalon();\r\n  }, [salonId]);\r\n  \r\n  // Fetch stats when date filter changes\r\n  useEffect(() => {\r\n    if (salon) {\r\n      fetchSalonStats();\r\n    }\r\n  }, [dateFilter, salon]);\r\n  \r\n  // Fetch salon details\r\n  const fetchSalon = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // If no salonId passed, fetch the manager's salons and use the first one\r\n      if (!salonId) {\r\n        const salonsResponse = await apiClient.get('/manager/salons', {\r\n          headers: {\r\n            Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n        });\r\n        \r\n        if (salonsResponse.data && salonsResponse.data.success && salonsResponse.data.salons.length > 0) {\r\n          setSalon(salonsResponse.data.salons[0]);\r\n          fetchSalonStats(salonsResponse.data.salons[0]._id);\r\n          fetchSalonCustomers(salonsResponse.data.salons[0]._id);\r\n        } else {\r\n          Alert.alert('Error', 'No salons found for this manager');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n      } else {\r\n        // Fetch specific salon\r\n        const response = await apiClient.get(`/salons/${salonId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${userInfo.token}`\r\n          }\r\n        });\r\n        \r\n        if (response.data && response.data.success) {\r\n          setSalon(response.data.salon);\r\n          fetchSalonStats(salonId);\r\n          fetchSalonCustomers(salonId);\r\n        } else {\r\n          Alert.alert('Error', 'Failed to load salon details');\r\n          setLoading(false);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching salon:', error);\r\n      setLoading(false);\r\n      Alert.alert('Error', 'Failed to load salon: ' + (error.message || 'Unknown error'));\r\n    }\r\n  };\r\n  \r\n  // Fetch salon statistics\r\n  const fetchSalonStats = async (id = salonId) => {\r\n    try {\r\n      setLoading(true);\r\n      const targetId = id || salon._id;\r\n      \r\n      const response = await apiClient.get(`/manager/salon/${targetId}/stats?period=${dateFilter}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        setSalonStats(response.data.stats);\r\n      } else {\r\n        Alert.alert('Error', 'Failed to load salon statistics');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching salon stats:', error);\r\n      setLoading(false);\r\n      Alert.alert('Error', 'Failed to load salon statistics: ' + (error.message || 'Unknown error'));\r\n    }\r\n  };\r\n  \r\n  // Fetch salon customers\r\n  const fetchSalonCustomers = async (id = salonId) => {\r\n    try {\r\n      const targetId = id || salon._id;\r\n      \r\n      const response = await apiClient.get(`/manager/salon/${targetId}/customers`, {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        setCustomers(response.data.customers);\r\n      } else {\r\n        console.error('Failed to load customers:', response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching customers:', error);\r\n    }\r\n  };\r\n  \r\n  // Format data for charts\r\n  const getChartData = () => {\r\n    if (!salonStats || !salonStats.dailyAppointments) {\r\n      return {\r\n        labels: ['No Data'],\r\n        datasets: [{ data: [0] }]\r\n      };\r\n    }\r\n    \r\n    // Sort dates\r\n    const dates = Object.keys(salonStats.dailyAppointments).sort();\r\n    \r\n    // Get last 7 dates for display\r\n    const recentDates = dates.slice(-7);\r\n    \r\n    return {\r\n      labels: recentDates.map(date => {\r\n        const [year, month, day] = date.split('-');\r\n        return `${month}/${day}`;\r\n      }),\r\n      datasets: [{\r\n        data: recentDates.map(date => salonStats.dailyAppointments[date] || 0)\r\n      }]\r\n    };\r\n  };\r\n  \r\n  // Filter customers based on search\r\n  const filteredCustomers = customers.filter(customer => \r\n    customer.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n    customer.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n    (customer.phone && customer.phone.includes(searchQuery))\r\n  );\r\n  \r\n  // Render customer item\r\n  const renderCustomerItem = ({ item }) => (\r\n    <Card style={styles.customerCard}>\r\n      <Card.Content style={styles.customerCardContent}>\r\n        <View style={styles.customerInfo}>\r\n          <Title style={styles.customerName}>{item.name}</Title>\r\n          <Paragraph>{item.email}</Paragraph>\r\n          <Paragraph>{item.phone || 'No phone'}</Paragraph>\r\n          \r\n          <View style={styles.customerMetrics}>\r\n            <Chip style={styles.customerMetric}>Visits: {item.visits}</Chip>\r\n            <Chip style={styles.customerMetric}>Spent: ${item.totalSpent}</Chip>\r\n          </View>\r\n          \r\n          {item.lastVisit && (\r\n            <Paragraph style={styles.lastVisit}>\r\n              Last visit: {format(new Date(item.lastVisit), 'MMM dd, yyyy')}\r\n            </Paragraph>\r\n          )}\r\n        </View>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n  \r\n  // Format appointment history from real data\r\n  const history = appointments.map(app => ({\r\n    id: app._id,\r\n    date: new Date(app.date),\r\n    formattedDate: format(new Date(app.date), 'MMM dd, yyyy HH:mm'),\r\n    client: app.customer?.name || 'Unknown Client',\r\n    barber: app.barber?.name || 'Unknown Barber',\r\n    service: app.service?.name || 'Unknown Service',\r\n    serviceType: app.service?.category || 'Unknown Type',\r\n    price: app.service?.price || 0,\r\n    status: app.status\r\n  }));\r\n  \r\n  if (loading && !salon) {\r\n    return (\r\n      <View style={styles.centeredContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n        <Text style={{ marginTop: 20 }}>Loading salon dashboard...</Text>\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Salon Dashboard</Text>\r\n        {salon && <Text style={styles.headerSubtitle}>{salon.name}</Text>}\r\n      </View>\r\n      \r\n      {/* Tab Navigation */}\r\n      <View style={styles.tabContainer}>\r\n        <TouchableOpacity \r\n          style={[styles.tab, activeTab === 'stats' && styles.activeTab]} \r\n          onPress={() => setActiveTab('stats')}\r\n        >\r\n          <Text style={[styles.tabText, activeTab === 'stats' && styles.activeTabText]}>\r\n            Stats\r\n          </Text>\r\n        </TouchableOpacity>\r\n        \r\n        <TouchableOpacity \r\n          style={[styles.tab, activeTab === 'customers' && styles.activeTab]} \r\n          onPress={() => setActiveTab('customers')}\r\n        >\r\n          <Text style={[styles.tabText, activeTab === 'customers' && styles.activeTabText]}>\r\n            Customers\r\n          </Text>\r\n        </TouchableOpacity>\r\n        \r\n        <TouchableOpacity \r\n          style={[styles.tab, activeTab === 'appointments' && styles.activeTab]} \r\n          onPress={() => setActiveTab('appointments')}\r\n        >\r\n          <Text style={[styles.tabText, activeTab === 'appointments' && styles.activeTabText]}>\r\n            Staff\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      \r\n      <ScrollView style={styles.content}>\r\n        {/* Stats Tab Content */}\r\n        {activeTab === 'stats' && (\r\n          <>\r\n            {/* Date Filter */}\r\n            <View style={styles.dateFilterContainer}>\r\n              <Text style={styles.sectionTitle}>Statistics Period:</Text>\r\n              <View style={styles.dateFilterButtons}>\r\n                <Button \r\n                  mode={dateFilter === 'day' ? 'contained' : 'outlined'} \r\n                  onPress={() => setDateFilter('day')}\r\n                  style={styles.dateFilterButton}\r\n                >\r\n                  Day\r\n                </Button>\r\n                <Button \r\n                  mode={dateFilter === 'week' ? 'contained' : 'outlined'} \r\n                  onPress={() => setDateFilter('week')}\r\n                  style={styles.dateFilterButton}\r\n                >\r\n                  Week\r\n                </Button>\r\n                <Button \r\n                  mode={dateFilter === 'month' ? 'contained' : 'outlined'} \r\n                  onPress={() => setDateFilter('month')}\r\n                  style={styles.dateFilterButton}\r\n                >\r\n                  Month\r\n                </Button>\r\n              </View>\r\n            </View>\r\n            \r\n            {/* Main Stats Cards */}\r\n            {salonStats && (\r\n              <View style={styles.statsContainer}>\r\n                <View style={styles.statsCards}>\r\n                  <Card style={[styles.statsCard, { backgroundColor: '#E3F2FD' }]}>\r\n                    <Card.Content>\r\n                      <Paragraph>Appointments</Paragraph>\r\n                      <Title style={styles.statsValue}>{salonStats.appointmentsCount}</Title>\r\n                    </Card.Content>\r\n                  </Card>\r\n                  \r\n                  <Card style={[styles.statsCard, { backgroundColor: '#E8F5E9' }]}>\r\n                    <Card.Content>\r\n                      <Paragraph>Customers</Paragraph>\r\n                      <Title style={styles.statsValue}>{salonStats.clientsCount}</Title>\r\n                    </Card.Content>\r\n                  </Card>\r\n                  \r\n                  <Card style={[styles.statsCard, { backgroundColor: '#FFF8E1' }]}>\r\n                    <Card.Content>\r\n                      <Paragraph>Revenue</Paragraph>\r\n                      <Title style={styles.statsValue}>${salonStats.revenue}</Title>\r\n                    </Card.Content>\r\n                  </Card>\r\n                </View>\r\n                \r\n                {/* Appointments Chart */}\r\n                <Card style={styles.chartCard}>\r\n                  <Card.Content>\r\n                    <Title style={styles.chartTitle}>Daily Appointments</Title>\r\n                    <BarChart\r\n                      data={getChartData()}\r\n                      width={screenWidth}\r\n                      height={220}\r\n                      yAxisLabel=\"\"\r\n                      chartConfig={{\r\n                        backgroundColor: '#ffffff',\r\n                        backgroundGradientFrom: '#ffffff',\r\n                        backgroundGradientTo: '#ffffff',\r\n                        decimalPlaces: 0,\r\n                        color: (opacity = 1) => `rgba(15, 76, 117, ${opacity})`,\r\n                        labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n                        style: {\r\n                          borderRadius: 16\r\n                        }\r\n                      }}\r\n                      style={styles.chart}\r\n                    />\r\n                  </Card.Content>\r\n                </Card>\r\n                \r\n                {/* Status Breakdown */}\r\n                <Card style={styles.statusCard}>\r\n                  <Card.Content>\r\n                    <Title style={styles.statusTitle}>Appointment Status</Title>\r\n                    \r\n                    <View style={styles.statusRow}>\r\n                      <Text style={styles.statusLabel}>Pending</Text>\r\n                      <Text style={styles.statusValue}>{salonStats.statusCounts.pending}</Text>\r\n                    </View>\r\n                    <ProgressBar \r\n                      progress={salonStats.appointmentsCount > 0 ? salonStats.statusCounts.pending / salonStats.appointmentsCount : 0} \r\n                      color=\"#FFC107\" \r\n                      style={styles.progressBar} \r\n                    />\r\n                    \r\n                    <View style={styles.statusRow}>\r\n                      <Text style={styles.statusLabel}>Confirmed</Text>\r\n                      <Text style={styles.statusValue}>{salonStats.statusCounts.confirmed}</Text>\r\n                    </View>\r\n                    <ProgressBar \r\n                      progress={salonStats.appointmentsCount > 0 ? salonStats.statusCounts.confirmed / salonStats.appointmentsCount : 0} \r\n                      color=\"#2196F3\" \r\n                      style={styles.progressBar} \r\n                    />\r\n                    \r\n                    <View style={styles.statusRow}>\r\n                      <Text style={styles.statusLabel}>Completed</Text>\r\n                      <Text style={styles.statusValue}>{salonStats.statusCounts.completed}</Text>\r\n                    </View>\r\n                    <ProgressBar \r\n                      progress={salonStats.appointmentsCount > 0 ? salonStats.statusCounts.completed / salonStats.appointmentsCount : 0} \r\n                      color=\"#4CAF50\" \r\n                      style={styles.progressBar} \r\n                    />\r\n                    \r\n                    <View style={styles.statusRow}>\r\n                      <Text style={styles.statusLabel}>Cancelled</Text>\r\n                      <Text style={styles.statusValue}>{salonStats.statusCounts.cancelled}</Text>\r\n                    </View>\r\n                    <ProgressBar \r\n                      progress={salonStats.appointmentsCount > 0 ? salonStats.statusCounts.cancelled / salonStats.appointmentsCount : 0} \r\n                      color=\"#F44336\" \r\n                      style={styles.progressBar} \r\n                    />\r\n                  </Card.Content>\r\n                </Card>\r\n              </View>\r\n            )}\r\n          </>\r\n        )}\r\n        \r\n        {/* Customers Tab Content */}\r\n        {activeTab === 'customers' && (\r\n          <>\r\n            <Searchbar\r\n              placeholder=\"Search customers...\"\r\n              onChangeText={query => setSearchQuery(query)}\r\n              value={searchQuery}\r\n              style={styles.searchBar}\r\n            />\r\n            \r\n            <Text style={styles.customerCount}>\r\n              {filteredCustomers.length} {filteredCustomers.length === 1 ? 'Customer' : 'Customers'}\r\n            </Text>\r\n            \r\n            {filteredCustomers.length === 0 ? (\r\n              <View style={styles.emptyContainer}>\r\n                <Text style={styles.emptyText}>No customers found</Text>\r\n              </View>\r\n            ) : (\r\n              filteredCustomers.map(customer => renderCustomerItem({ item: customer }))\r\n            )}\r\n          </>\r\n        )}\r\n        \r\n        {/* Staff Tab Content */}\r\n        {activeTab === 'appointments' && salon && (\r\n          <>\r\n            <Text style={styles.sectionTitle}>Staff Members</Text>\r\n            \r\n            {salon.staff && salon.staff.length > 0 ? (\r\n              <View style={styles.staffContainer}>\r\n                {salon.staff.map(staff => (\r\n                  <Card key={staff._id} style={styles.staffCard}>\r\n                    <Card.Content style={styles.staffCardContent}>\r\n                      <Avatar.Image \r\n                        size={50} \r\n                        source={{ uri: staff.profileImage || 'https://randomuser.me/api/portraits/men/32.jpg' }} \r\n                      />\r\n                      <View style={styles.staffInfo}>\r\n                        <Title style={styles.staffName}>{staff.name}</Title>\r\n                        <Paragraph>{staff.role}</Paragraph>\r\n                        <View style={styles.specialtiesContainer}>\r\n                          {staff.specialties?.map((specialty, idx) => (\r\n                            <Chip key={idx} style={styles.specialtyChip}>{specialty}</Chip>\r\n                          ))}\r\n                        </View>\r\n                      </View>\r\n                    </Card.Content>\r\n                    <Card.Actions>\r\n                      <Button onPress={() => navigation.navigate('ManagerDashboard', { barber: staff })}>\r\n                        View Performance\r\n                      </Button>\r\n                    </Card.Actions>\r\n                  </Card>\r\n                ))}\r\n              </View>\r\n            ) : (\r\n              <View style={styles.emptyContainer}>\r\n                <Text style={styles.emptyText}>No staff members found for this salon</Text>\r\n              </View>\r\n            )}\r\n          </>\r\n        )}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  centeredContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  header: {\r\n    backgroundColor: '#0F4C75',\r\n    padding: 20,\r\n    paddingTop: 50,\r\n    paddingBottom: 20,\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  headerSubtitle: {\r\n    fontSize: 18,\r\n    color: '#BBE1FA',\r\n    marginTop: 5,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: 15,\r\n  },\r\n  tabContainer: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#fff',\r\n    elevation: 2,\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingVertical: 15,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 2,\r\n    borderBottomColor: '#0F4C75',\r\n  },\r\n  tabText: {\r\n    fontSize: 16,\r\n    color: '#555',\r\n  },\r\n  activeTabText: {\r\n    color: '#0F4C75',\r\n    fontWeight: 'bold',\r\n  },\r\n  dateFilterContainer: {\r\n    marginBottom: 15,\r\n  },\r\n  dateFilterButtons: {\r\n    flexDirection: 'row',\r\n    marginTop: 10,\r\n  },\r\n  dateFilterButton: {\r\n    marginRight: 10,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#1B262C',\r\n    marginBottom: 10,\r\n  },\r\n  statsContainer: {\r\n    marginBottom: 20,\r\n  },\r\n  statsCards: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 15,\r\n  },\r\n  statsCard: {\r\n    flex: 1,\r\n    marginRight: 10,\r\n  },\r\n  statsValue: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  chartCard: {\r\n    marginBottom: 15,\r\n  },\r\n  chartTitle: {\r\n    fontSize: 18,\r\n    marginBottom: 10,\r\n  },\r\n  chart: {\r\n    marginVertical: 8,\r\n    borderRadius: 16,\r\n  },\r\n  statusCard: {\r\n    marginBottom: 15,\r\n  },\r\n  statusTitle: {\r\n    fontSize: 18,\r\n    marginBottom: 15,\r\n  },\r\n  statusRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 5,\r\n  },\r\n  statusLabel: {\r\n    fontSize: 14,\r\n  },\r\n  statusValue: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n  },\r\n  progressBar: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n    marginBottom: 15,\r\n  },\r\n  searchBar: {\r\n    marginBottom: 15,\r\n    elevation: 1,\r\n  },\r\n  customerCount: {\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n    color: '#555',\r\n  },\r\n  customerCard: {\r\n    marginBottom: 10,\r\n  },\r\n  customerCardContent: {\r\n    flexDirection: 'row',\r\n  },\r\n  customerInfo: {\r\n    flex: 1,\r\n  },\r\n  customerName: {\r\n    fontSize: 18,\r\n  },\r\n  customerMetrics: {\r\n    flexDirection: 'row',\r\n    marginTop: 10,\r\n  },\r\n  customerMetric: {\r\n    marginRight: 8,\r\n  },\r\n  lastVisit: {\r\n    marginTop: 8,\r\n    fontStyle: 'italic',\r\n  },\r\n  emptyContainer: {\r\n    padding: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  emptyText: {\r\n    fontSize: 16,\r\n    color: '#555',\r\n  },\r\n  staffContainer: {\r\n    marginBottom: 20,\r\n  },\r\n  staffCard: {\r\n    marginBottom: 10,\r\n  },\r\n  staffCardContent: {\r\n    flexDirection: 'row',\r\n  },\r\n  staffInfo: {\r\n    marginLeft: 15,\r\n    flex: 1,\r\n  },\r\n  staffName: {\r\n    fontSize: 16,\r\n  },\r\n  specialtiesContainer: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    marginTop: 5,\r\n  },\r\n  specialtyChip: {\r\n    marginRight: 5,\r\n    marginBottom: 5,\r\n    backgroundColor: '#E1F5FE',\r\n  },\r\n  appointmentInfo: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  appointmentClient: {\r\n    flex: 1,\r\n    fontSize: 16,\r\n  },\r\n  serviceRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  appointmentService: {\r\n    fontSize: 16,\r\n  },\r\n  appointmentServiceType: {\r\n    fontSize: 14,\r\n    fontStyle: 'italic',\r\n  },\r\n  appointmentDate: {\r\n    fontSize: 14,\r\n    color: '#555',\r\n  },\r\n  appointmentBarber: {\r\n    fontSize: 14,\r\n    color: '#555',\r\n  },\r\n  serviceTypeText: {\r\n    fontSize: 14,\r\n    fontStyle: 'italic',\r\n  },\r\n});\r\n\r\nexport default SalonDashboardScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}