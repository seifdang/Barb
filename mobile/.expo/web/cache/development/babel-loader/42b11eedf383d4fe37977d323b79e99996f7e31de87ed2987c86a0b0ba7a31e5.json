{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useContext, createRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { StatusBar } from 'expo-status-bar';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { Provider as PaperProvider, DefaultTheme } from 'react-native-paper';\nimport LoginScreen from \"./screens/auth/LoginScreen\";\nimport RegisterScreen from \"./screens/auth/RegisterScreen\";\nimport HomeScreen from \"./screens/customer/HomeScreen\";\nimport ServicesScreen from \"./screens/customer/ServicesScreen\";\nimport BookingScreen from \"./screens/customer/BookingScreen\";\nimport AppointmentsScreen from \"./screens/customer/AppointmentsScreen\";\nimport ProfileScreen from \"./screens/customer/ProfileScreen\";\nimport BarberAppointmentsScreen from \"./screens/barber/BarberAppointmentsScreen\";\nimport BarberDashboardScreen from \"./screens/barber/BarberDashboardScreen\";\nimport AdminDashboardScreen from \"./screens/admin/DashboardScreen\";\nimport SalonDetailsScreen from \"./screens/admin/SalonDetailsScreen\";\nimport SalonStaffScreen from \"./screens/admin/SalonStaffScreen\";\nimport ManagerDashboardScreen from \"./screens/manager/DashboardScreen\";\nimport SalonDashboardScreen from \"./screens/manager/SalonDashboardScreen\";\nimport { AuthProvider, AuthContext } from \"./context/AuthContext\";\nimport { ThemeProvider, ThemeContext } from \"./context/ThemeContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar baseTheme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    primary: '#0F4C75',\n    accent: '#3282B8',\n    background: '#F5F5F5',\n    text: '#1B262C'\n  })\n});\nvar CustomerTabs = function CustomerTabs() {\n  var _useContext = useContext(ThemeContext),\n    theme = _useContext.theme;\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') iconName = focused ? 'home' : 'home-outline';else if (route.name === 'Services') iconName = focused ? 'list' : 'list-outline';else if (route.name === 'Appointments') iconName = focused ? 'calendar' : 'calendar-outline';else if (route.name === 'Profile') iconName = focused ? 'person' : 'person-outline';\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Services\",\n      component: ServicesScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Appointments\",\n      component: AppointmentsScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen\n    })]\n  });\n};\nvar _AuthNavigator = function AuthNavigator() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  var _useContext2 = useContext(AuthContext),\n    userToken = _useContext2.userToken,\n    userInfo = _useContext2.userInfo;\n  var _useState5 = useState('customer'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userRole = _useState6[0],\n    setUserRole = _useState6[1];\n  var _useContext3 = useContext(ThemeContext),\n    theme = _useContext3.theme;\n  useEffect(function () {\n    var checkLogin = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        try {\n          var token = yield AsyncStorage.getItem('userToken');\n          var info = yield AsyncStorage.getItem('userInfo');\n          var loggedIn = !!(token && info);\n          setIsLoggedIn(loggedIn);\n          if (loggedIn) {\n            setUserRole(JSON.parse(info).role || 'customer');\n          }\n        } catch (e) {\n          console.error('Auth check error', e);\n        } finally {\n          setIsLoading(false);\n        }\n      });\n      return function checkLogin() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    checkLogin();\n  }, [userToken, userInfo]);\n  if (isLoading) {\n    return _jsxs(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: theme.colors.primary\n      }), _jsx(Text, {\n        style: {\n          marginTop: 10\n        },\n        children: \"Loading...\"\n      })]\n    });\n  }\n  var MainComponent = function MainComponent() {\n    switch (userRole) {\n      case 'admin':\n        return AdminTabs;\n      case 'manager':\n        return ManagerTabs;\n      case 'barber':\n        return BarberTabs;\n      default:\n        return CustomerTabs;\n    }\n  };\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [!isLoggedIn ? _jsx(Stack.Screen, {\n      name: \"Auth\",\n      component: _AuthNavigator\n    }) : _jsx(Stack.Screen, {\n      name: \"Main\",\n      component: MainComponent()\n    }), _jsx(Stack.Screen, {\n      name: \"Booking\",\n      component: BookingScreen,\n      options: {\n        headerShown: true,\n        title: 'Book Appointment'\n      }\n    })]\n  });\n};\nexport var navigationRef = createRef();\nexport default function App() {\n  return _jsx(ThemeProvider, {\n    children: _jsx(ThemeContext.Consumer, {\n      children: function children(_ref4) {\n        var theme = _ref4.theme,\n          isDarkMode = _ref4.isDarkMode;\n        return _jsx(AuthProvider, {\n          children: _jsx(PaperProvider, {\n            theme: theme || baseTheme,\n            children: _jsxs(NavigationContainer, {\n              ref: navigationRef,\n              theme: theme || baseTheme,\n              children: [_jsx(StatusBar, {\n                style: isDarkMode ? 'light' : 'dark'\n              }), _jsx(_AuthNavigator, {})]\n            })\n          })\n        });\n      }\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","useContext","createRef","View","ActivityIndicator","Text","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","AsyncStorage","StatusBar","Ionicons","Provider","PaperProvider","DefaultTheme","LoginScreen","RegisterScreen","HomeScreen","ServicesScreen","BookingScreen","AppointmentsScreen","ProfileScreen","BarberAppointmentsScreen","BarberDashboardScreen","AdminDashboardScreen","SalonDetailsScreen","SalonStaffScreen","ManagerDashboardScreen","SalonDashboardScreen","AuthProvider","AuthContext","ThemeProvider","ThemeContext","jsx","_jsx","jsxs","_jsxs","Stack","Tab","baseTheme","_objectSpread","colors","primary","accent","background","text","CustomerTabs","_useContext","theme","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","children","Screen","component","AuthNavigator","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","_useState3","_useState4","isLoading","setIsLoading","_useContext2","userToken","userInfo","_useState5","_useState6","userRole","setUserRole","_useContext3","checkLogin","_ref3","_asyncToGenerator","token","getItem","info","loggedIn","JSON","parse","role","e","console","error","apply","arguments","style","flex","justifyContent","alignItems","marginTop","MainComponent","AdminTabs","ManagerTabs","BarberTabs","options","title","navigationRef","App","Consumer","_ref4","isDarkMode","ref","_AuthNavigator"],"sources":["C:/Users/User/Downloads/mobile/App.js"],"sourcesContent":["import React, { useState, useEffect, useContext, createRef } from 'react';\nimport { View, ActivityIndicator, Text } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { StatusBar } from 'expo-status-bar';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { Provider as PaperProvider, DefaultTheme } from 'react-native-paper'; // <-- Added DefaultTheme import\n\n// Auth Screens\nimport LoginScreen from './screens/auth/LoginScreen';\nimport RegisterScreen from './screens/auth/RegisterScreen';\n\n// Customer Screens\nimport HomeScreen from './screens/customer/HomeScreen';\nimport ServicesScreen from './screens/customer/ServicesScreen';\nimport BookingScreen from './screens/customer/BookingScreen';\nimport AppointmentsScreen from './screens/customer/AppointmentsScreen';\nimport ProfileScreen from './screens/customer/ProfileScreen';\n\n// Barber Screens\nimport BarberAppointmentsScreen from './screens/barber/BarberAppointmentsScreen';\nimport BarberDashboardScreen from './screens/barber/BarberDashboardScreen';\n\n// Admin Screens\nimport AdminDashboardScreen from './screens/admin/DashboardScreen';\nimport SalonDetailsScreen from './screens/admin/SalonDetailsScreen';\nimport SalonStaffScreen from './screens/admin/SalonStaffScreen';\n\n// Manager Screens\nimport ManagerDashboardScreen from './screens/manager/DashboardScreen';\nimport SalonDashboardScreen from './screens/manager/SalonDashboardScreen';\n\n// Context\nimport { AuthProvider, AuthContext } from './context/AuthContext';\nimport { ThemeProvider, ThemeContext } from './context/ThemeContext';\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\n// Custom fallback theme (if needed before context loads)\nconst baseTheme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: '#0F4C75',\n    accent: '#3282B8',\n    background: '#F5F5F5',\n    text: '#1B262C',\n  },\n};\n\n// Navigator for Customer\nconst CustomerTabs = () => {\n  const { theme } = useContext(ThemeContext);\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n          if (route.name === 'Home') iconName = focused ? 'home' : 'home-outline';\n          else if (route.name === 'Services') iconName = focused ? 'list' : 'list-outline';\n          else if (route.name === 'Appointments') iconName = focused ? 'calendar' : 'calendar-outline';\n          else if (route.name === 'Profile') iconName = focused ? 'person' : 'person-outline';\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false,\n      })}\n    >\n      <Tab.Screen name=\"Home\" component={HomeScreen} />\n      <Tab.Screen name=\"Services\" component={ServicesScreen} />\n      <Tab.Screen name=\"Appointments\" component={AppointmentsScreen} />\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n    </Tab.Navigator>\n  );\n};\n\n// (Repeat similar pattern for AdminTabs, BarberTabs, ManagerTabs using useContext(ThemeContext))\n\n// Auth Navigator\nconst AuthNavigator = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const { userToken, userInfo } = useContext(AuthContext);\n  const [userRole, setUserRole] = useState('customer');\n  const { theme } = useContext(ThemeContext);\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      try {\n        const token = await AsyncStorage.getItem('userToken');\n        const info = await AsyncStorage.getItem('userInfo');\n        const loggedIn = !!(token && info);\n        setIsLoggedIn(loggedIn);\n        if (loggedIn) {\n          setUserRole(JSON.parse(info).role || 'customer');\n        }\n      } catch (e) {\n        console.error('Auth check error', e);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkLogin();\n  }, [userToken, userInfo]);\n\n  if (isLoading) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n        <Text style={{ marginTop: 10 }}>Loading...</Text>\n      </View>\n    );\n  }\n\n  const MainComponent = () => {\n    switch (userRole) {\n      case 'admin': return AdminTabs;\n      case 'manager': return ManagerTabs;\n      case 'barber': return BarberTabs;\n      default: return CustomerTabs;\n    }\n  };\n\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      {!isLoggedIn ? (\n        <Stack.Screen name=\"Auth\" component={AuthNavigator} />\n      ) : (\n        <Stack.Screen name=\"Main\" component={MainComponent()} />\n      )}\n      <Stack.Screen name=\"Booking\" component={BookingScreen} options={{ headerShown: true, title: 'Book Appointment' }} />\n      {/* ...other screens... */}\n    </Stack.Navigator>\n  );\n};\n\n// Main App\nexport const navigationRef = createRef();\nexport default function App() {\n  return (\n    <ThemeProvider>\n      <ThemeContext.Consumer>\n        {({ theme, isDarkMode }) => (\n          <AuthProvider>\n            <PaperProvider theme={theme || baseTheme}>\n              <NavigationContainer ref={navigationRef} theme={theme || baseTheme}>\n                <StatusBar style={isDarkMode ? 'light' : 'dark'} />\n                <AuthNavigator />\n              </NavigationContainer>\n            </PaperProvider>\n          </AuthProvider>\n        )}\n      </ThemeContext.Consumer>\n    </ThemeProvider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}