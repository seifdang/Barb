{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Text, Card, Button, Title, Paragraph, ActivityIndicator, Divider, Avatar, Chip } from 'react-native-paper';\nimport { Calendar } from 'react-native-calendars';\nimport { format } from 'date-fns';\nimport { barbersApi, appointmentsApi, servicesApi } from \"../../api/client\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport apiClient from \"../../api/client\";\nimport { CommonActions } from '@react-navigation/native';\nimport { navigationRef, navigateToTab } from \"../../App\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BookingScreen = function BookingScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var service = route.params.service;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    salons = _useState2[0],\n    setSalons = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedSalon = _useState4[0],\n    setSelectedSalon = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    barbers = _useState6[0],\n    setBarbers = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedBarber = _useState8[0],\n    setSelectedBarber = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedDate = _useState10[0],\n    setSelectedDate = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    selectedTime = _useState12[0],\n    setSelectedTime = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    availableTimes = _useState14[0],\n    setAvailableTimes = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    allTimeSlots = _useState16[0],\n    setAllTimeSlots = _useState16[1];\n  var _useState17 = useState(true),\n    _useState18 = _slicedToArray(_useState17, 2),\n    loading = _useState18[0],\n    setLoading = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    submitting = _useState20[0],\n    setSubmitting = _useState20[1];\n  var _useState21 = useState(null),\n    _useState22 = _slicedToArray(_useState21, 2),\n    error = _useState22[0],\n    setError = _useState22[1];\n  var _useState23 = useState(1),\n    _useState24 = _slicedToArray(_useState23, 2),\n    step = _useState24[0],\n    setStep = _useState24[1];\n  var _useContext = useContext(AuthContext),\n    userInfo = _useContext.userInfo;\n  var defaultTimeSlots = ['09:00', '09:30', '10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '17:00', '17:30'];\n  var today = new Date();\n  var formattedToday = format(today, 'yyyy-MM-dd');\n  useEffect(function () {\n    fetchSalons();\n  }, []);\n  useEffect(function () {\n    if (selectedSalon) {\n      fetchBarbersBySalon(selectedSalon._id);\n    }\n  }, [selectedSalon]);\n  useEffect(function () {\n    if (selectedBarber && selectedDate) {\n      fetchAvailableTimes();\n    } else {\n      var timeSlots = [].concat(defaultTimeSlots);\n      setAllTimeSlots(timeSlots);\n      setAvailableTimes([]);\n    }\n  }, [selectedBarber, selectedDate]);\n  var fetchSalons = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        setError(null);\n        var response = yield apiClient.get('/salons', {\n          headers: {\n            Authorization: \"Bearer \" + (userInfo == null ? void 0 : userInfo.token)\n          }\n        });\n        if (response.data && response.data.success) {\n          setSalons(response.data.salons);\n          console.log(\"Loaded \" + response.data.salons.length + \" salons\");\n        } else {\n          throw new Error('Failed to fetch salons');\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching salons:', error);\n        setError('Failed to load salons. Please try again.');\n        setLoading(false);\n        Alert.alert('Error', 'Failed to load salons. Please try again later.');\n      }\n    });\n    return function fetchSalons() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchBarbersBySalon = function () {\n    var _ref3 = _asyncToGenerator(function* (salonId) {\n      try {\n        setLoading(true);\n        setError(null);\n        console.log(\"Fetching barbers for salon ID: \" + salonId);\n        var salonResponse = yield apiClient.get(\"/salons/\" + salonId, {\n          headers: {\n            Authorization: \"Bearer \" + (userInfo == null ? void 0 : userInfo.token)\n          }\n        });\n        if (!salonResponse.data || !salonResponse.data.success) {\n          throw new Error('Failed to fetch salon details');\n        }\n        var salonData = salonResponse.data.salon;\n        console.log(\"Loaded salon: \" + salonData.name);\n        if (!salonData.staff || !Array.isArray(salonData.staff) || salonData.staff.length === 0) {\n          console.log('No staff array found in salon data or it is empty');\n          setBarbers([]);\n          setError('No barbers available for this salon. Staff not assigned.');\n          setLoading(false);\n          setStep(2);\n          return;\n        }\n        var staffIds = salonData.staff.map(function (staff) {\n          return typeof staff === 'object' ? staff._id : staff;\n        });\n        console.log(\"Found \" + salonData.staff.length + \" staff IDs\");\n        var barberStaff = [];\n        if (salonData.staff.every(function (staff) {\n          return typeof staff === 'object' && staff.role;\n        })) {\n          console.log('Staff objects are populated with role data, using directly');\n          barberStaff = salonData.staff.filter(function (staff) {\n            var roleToCheck = (staff.role || '').toLowerCase();\n            var isBarberRole = roleToCheck === 'barber' || roleToCheck.includes('barber') || roleToCheck === 'stylist';\n            console.log(\"Direct staff member check - \" + staff.name + \": role=\" + staff.role + \", isBarber=\" + isBarberRole);\n            return isBarberRole;\n          });\n        } else {\n          try {\n            console.log('Using admin endpoint to fetch users');\n            var usersResponse = yield apiClient.get('/admin/users', {\n              headers: {\n                Authorization: \"Bearer \" + (userInfo == null ? void 0 : userInfo.token)\n              }\n            });\n            if (!usersResponse.data || !usersResponse.data.success) {\n              throw new Error('Failed to fetch users');\n            }\n            var allUsers = usersResponse.data.users || [];\n            console.log(\"Fetched \" + allUsers.length + \" total users from admin endpoint\");\n            barberStaff = allUsers.filter(function (user) {\n              var isStaffMember = staffIds.includes(user._id);\n              if (!isStaffMember) return false;\n              var roleToCheck = (user.role || '').toLowerCase();\n              var isBarberRole = roleToCheck === 'barber' || roleToCheck.includes('barber') || roleToCheck === 'stylist';\n              console.log(\"Admin staff check - \" + user.name + \": role=\" + user.role + \", isBarber=\" + isBarberRole);\n              return isBarberRole;\n            });\n          } catch (error) {\n            console.error('Error fetching from admin endpoint:', error);\n            try {\n              console.log('Trying direct staff ID lookup');\n              barberStaff = [];\n              for (var staffId of staffIds) {\n                try {\n                  var userResponse = yield apiClient.get(\"/admin/users/\" + staffId, {\n                    headers: {\n                      Authorization: \"Bearer \" + (userInfo == null ? void 0 : userInfo.token)\n                    }\n                  });\n                  if (userResponse.data && userResponse.data.success) {\n                    var user = userResponse.data.user;\n                    var roleToCheck = (user.role || '').toLowerCase();\n                    var isBarberRole = roleToCheck === 'barber' || roleToCheck.includes('barber') || roleToCheck === 'stylist';\n                    if (isBarberRole) {\n                      barberStaff.push(user);\n                      console.log(\"Added staff member by ID: \" + user.name + \", role=\" + user.role);\n                    }\n                  }\n                } catch (err) {\n                  console.log(\"Error fetching staff ID \" + staffId + \":\", err);\n                }\n              }\n            } catch (fallbackError) {\n              console.error('Error with fallback approach:', fallbackError);\n            }\n          }\n        }\n        console.log(\"Found \" + barberStaff.length + \" barbers for this salon\");\n        if (barberStaff.length > 0) {\n          setBarbers(barberStaff);\n          console.log(\"Loaded \" + barberStaff.length + \" barbers for salon \" + salonData.name);\n        } else {\n          setBarbers([]);\n          setError('No barbers available for this salon. Staff exists but no barber roles found.');\n          Alert.alert('No Barbers', 'This salon does not have any barbers assigned. Please select another salon or use the debug button to check staff roles.');\n        }\n        setLoading(false);\n        setStep(2);\n      } catch (error) {\n        console.error('Error fetching barbers by salon:', error);\n        setError('Failed to load barbers. Please try again.');\n        Alert.alert('Error', 'Failed to load barbers: ' + (error.message || 'Unknown error'));\n        setLoading(false);\n        setStep(2);\n      }\n    });\n    return function fetchBarbersBySalon(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var fetchAvailableTimes = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (!selectedBarber || !selectedDate) {\n        return;\n      }\n      try {\n        setLoading(true);\n        var timeSlots = [];\n        var now = new Date();\n        var selectedDateObj = new Date(selectedDate);\n        var isToday = selectedDateObj.getDate() === now.getDate() && selectedDateObj.getMonth() === now.getMonth() && selectedDateObj.getFullYear() === now.getFullYear();\n        var currentHour = now.getHours();\n        var currentMinute = now.getMinutes();\n        for (var hour = 9; hour <= 17; hour++) {\n          for (var minute of [0, 30]) {\n            if (isToday && (hour < currentHour || hour === currentHour && minute <= currentMinute)) {\n              continue;\n            }\n            var formattedHour = hour.toString().padStart(2, '0');\n            var formattedMinute = minute.toString().padStart(2, '0');\n            timeSlots.push(formattedHour + \":\" + formattedMinute);\n          }\n        }\n        setAllTimeSlots(timeSlots);\n        try {\n          console.log('Fetching availability for:', {\n            barberId: selectedBarber._id,\n            date: selectedDate,\n            salonId: selectedSalon._id\n          });\n          var response = yield appointmentsApi.getBarberAvailability(selectedBarber._id, selectedDate, selectedSalon._id);\n          console.log('Availability response:', response == null ? void 0 : response.data);\n          if (response != null && response.data && response.data.success) {\n            setAllTimeSlots(timeSlots);\n            var _availableTimes = response.data.availableTimes || [];\n            console.log('Available times from API:', _availableTimes);\n            var filteredTimes = _availableTimes.filter(function (time) {\n              return timeSlots.includes(time);\n            });\n            console.log('Filtered times:', filteredTimes);\n            setAvailableTimes(filteredTimes);\n            if (step === 4 && filteredTimes.length === 0) {\n              setSelectedTime(null);\n            } else if (selectedTime && !filteredTimes.includes(selectedTime)) {\n              setSelectedTime(null);\n            }\n          } else {\n            console.error('API error response or no response data:', response == null ? void 0 : response.data);\n            console.log('Using fallback time slots due to API error');\n            setAllTimeSlots(timeSlots);\n            setAvailableTimes(timeSlots);\n          }\n        } catch (error) {\n          console.error('Error fetching barber availability:', error);\n          console.log('Using fallback time slots due to error');\n          setAllTimeSlots(timeSlots);\n          setAvailableTimes(timeSlots);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error in fetchAvailableTimes:', error);\n        setLoading(false);\n        var fallbackTimeSlots = [];\n        for (var _hour = 9; _hour <= 17; _hour++) {\n          fallbackTimeSlots.push(_hour + \":00\");\n          fallbackTimeSlots.push(_hour + \":30\");\n        }\n        setAllTimeSlots(fallbackTimeSlots);\n        setAvailableTimes(fallbackTimeSlots);\n      }\n    });\n    return function fetchAvailableTimes() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var formatTimeFromHours = function formatTimeFromHours(decimalHours) {\n    var hours = Math.floor(decimalHours);\n    var minutes = Math.round((decimalHours - hours) * 60);\n    return String(hours).padStart(2, '0') + \":\" + String(minutes).padStart(2, '0');\n  };\n  var getDecimalHours = function getDecimalHours(time) {\n    var _time$split$map = time.split(':').map(Number),\n      _time$split$map2 = _slicedToArray(_time$split$map, 2),\n      hours = _time$split$map2[0],\n      minutes = _time$split$map2[1];\n    return hours + minutes / 60;\n  };\n  var getEndTime = function getEndTime(startTime) {\n    var _startTime$split$map = startTime.split(':').map(Number),\n      _startTime$split$map2 = _slicedToArray(_startTime$split$map, 2),\n      hours = _startTime$split$map2[0],\n      minutes = _startTime$split$map2[1];\n    var startHours = hours + minutes / 60;\n    var endHours = startHours + service.duration / 60;\n    return formatTimeFromHours(endHours);\n  };\n  var handleSalonSelect = function handleSalonSelect(salon) {\n    setSelectedSalon(salon);\n    setSelectedBarber(null);\n    setSelectedDate('');\n    setSelectedTime('');\n  };\n  var handleBarberSelect = function handleBarberSelect(barber) {\n    setSelectedBarber(barber);\n    setStep(3);\n  };\n  var handleDateSelect = function handleDateSelect(date) {\n    var selectedDateObj = new Date(date.dateString);\n    var today = new Date();\n    today.setHours(0, 0, 0, 0);\n    if (selectedDateObj < today) {\n      Alert.alert(\"Invalid Date\", \"You cannot book appointments in the past. Please select today or a future date.\");\n      return;\n    }\n    setSelectedDate(date.dateString);\n    setStep(4);\n  };\n  var handleTimeSelect = function handleTimeSelect(time) {\n    setSelectedTime(time);\n  };\n  var handleBooking = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      if (!selectedBarber || !selectedDate || !selectedTime || !selectedSalon) {\n        Alert.alert('Error', 'Please complete all booking details');\n        return;\n      }\n      try {\n        var _response$data;\n        setSubmitting(true);\n        console.log(\"Starting booking process...\");\n        var serviceDuration = service.duration || 30;\n        var _selectedTime$split$m = selectedTime.split(':').map(Number),\n          _selectedTime$split$m2 = _slicedToArray(_selectedTime$split$m, 2),\n          hour = _selectedTime$split$m2[0],\n          minute = _selectedTime$split$m2[1];\n        var endHour = hour;\n        var endMinute = minute + serviceDuration;\n        if (endMinute >= 60) {\n          endHour += Math.floor(endMinute / 60);\n          endMinute = endMinute % 60;\n        }\n        var endTime = endHour.toString().padStart(2, '0') + \":\" + endMinute.toString().padStart(2, '0');\n        var bookingData = {\n          barberId: selectedBarber._id,\n          serviceId: service._id,\n          salonId: selectedSalon._id,\n          date: selectedDate,\n          startTime: selectedTime,\n          endTime: endTime\n        };\n        console.log('Booking data:', bookingData);\n        var response = yield apiClient.post('/appointments', bookingData, {\n          headers: {\n            Authorization: \"Bearer \" + (userInfo == null ? void 0 : userInfo.token)\n          }\n        });\n        setSubmitting(false);\n        console.log('BOOKING SUCCESS! Response:', response == null ? void 0 : response.data);\n        if (response != null && (_response$data = response.data) != null && _response$data.success) {\n          console.log('BOOKING SUCCESS! Response:', response == null ? void 0 : response.data);\n          var bookingSuccess = true;\n          setTimeout(function () {\n            try {\n              console.log('Navigating back to previous screen');\n              navigation.goBack();\n              setTimeout(function () {\n                Alert.alert('Booking Confirmed!', \"Your appointment with \" + selectedBarber.name + \" on \" + format(new Date(selectedDate), 'MMMM d') + \" at \" + selectedTime + \" has been booked successfully.\", [{\n                  text: 'OK'\n                }]);\n              }, 100);\n            } catch (navError) {\n              console.error('Navigation error:', navError);\n              Alert.alert('Booking Confirmed!', \"Your appointment with \" + selectedBarber.name + \" on \" + format(new Date(selectedDate), 'MMMM d') + \" at \" + selectedTime + \" has been booked successfully.\", [{\n                text: 'OK'\n              }]);\n            }\n          }, 100);\n        } else {\n          var _response$data2;\n          throw new Error((response == null ? void 0 : (_response$data2 = response.data) == null ? void 0 : _response$data2.message) || 'Unknown booking error');\n        }\n      } catch (error) {\n        console.error('Booking error:', error);\n        setSubmitting(false);\n        Alert.alert('Error', error.message || 'Failed to book appointment. Please try again.');\n      }\n    });\n    return function handleBooking() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var debugSalonAndStaff = function () {\n    var _ref6 = _asyncToGenerator(function* (salonId) {\n      try {\n        console.log(\"Debug: Fetching detailed data for salon \" + salonId);\n        var salonResponse = yield apiClient.get(\"/salons/\" + salonId, {\n          headers: {\n            Authorization: \"Bearer \" + (userInfo == null ? void 0 : userInfo.token)\n          }\n        });\n        var salonData = salonResponse.data;\n        console.log('Raw salon data:', JSON.stringify(salonData));\n        var staffIds = [];\n        var staffDetails = '';\n        if (salonData.salon && salonData.salon.staff) {\n          console.log('Staff array length:', salonData.salon.staff.length);\n          console.log('Staff array type:', typeof salonData.salon.staff);\n          console.log('Staff array:', JSON.stringify(salonData.salon.staff));\n          staffIds = salonData.salon.staff.map(function (staff) {\n            return typeof staff === 'object' ? staff._id : staff;\n          });\n          salonData.salon.staff.forEach(function (staffMember, idx) {\n            console.log(\"Staff #\" + idx + \":\", JSON.stringify(staffMember));\n            if (typeof staffMember === 'object') {\n              var role = staffMember.role || 'unknown';\n              staffDetails += idx + 1 + \". \" + staffMember.name + \": role=\" + role + \"\\n\";\n            } else {\n              staffDetails += idx + 1 + \". ID only: \" + staffMember + \"\\n\";\n            }\n          });\n        }\n        try {\n          var usersResponse = yield apiClient.get('/users', {\n            headers: {\n              Authorization: \"Bearer \" + (userInfo == null ? void 0 : userInfo.token)\n            }\n          });\n          var usersData = usersResponse.data;\n          if (usersData.success && usersData.users) {\n            var salonStaff = usersData.users.filter(function (user) {\n              return staffIds.includes(user._id);\n            });\n            console.log(\"Found \" + salonStaff.length + \" staff members through user lookup\");\n            var potentialBarbers = salonStaff.filter(function (user) {\n              var roleCheck = (user.role || '').toLowerCase();\n              var isBarber = roleCheck === 'barber' || roleCheck.includes('barber') || roleCheck === 'stylist';\n              console.log(\"User \" + user.name + \", role=\" + user.role + \", isBarber=\" + isBarber);\n              return isBarber;\n            });\n            console.log(\"Found \" + potentialBarbers.length + \" potential barbers\");\n            salonStaff.forEach(function (staff, idx) {\n              var role = staff.role || 'unknown';\n              var isValidBarber = role.toLowerCase() === 'barber' || role.toLowerCase().includes('barber') || role.toLowerCase() === 'stylist';\n              staffDetails += idx + 1 + \". \" + staff.name + \": role=\" + role + \" (\" + (isValidBarber ? 'Valid Barber' : 'Not a Barber') + \")\\n\";\n            });\n          }\n        } catch (userError) {\n          console.error('Error fetching users for debug:', userError);\n          staffDetails += '(Error fetching user details)\\n';\n        }\n        Alert.alert('Debug Info', \"Salon: \" + salonData.salon.name + \"\\n\" + (\"Staff count: \" + (salonData.salon.staff ? salonData.salon.staff.length : 0) + \"\\n\\n\") + (\"Staff:\\n\" + (staffDetails || 'No staff details available')));\n      } catch (err) {\n        console.error('Debug fetch error:', err);\n        Alert.alert('Debug Error', err.toString());\n      }\n    });\n    return function debugSalonAndStaff(_x2) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var testNavigation = function testNavigation() {\n    console.log('Testing navigation to Appointments screen');\n    try {\n      navigation.navigate('Appointments');\n      console.log('Navigation successful');\n    } catch (error) {\n      console.error('Navigation error:', error);\n      try {\n        console.log('Trying alternative navigation');\n        navigation.reset({\n          index: 0,\n          routes: [{\n            name: 'Appointments'\n          }]\n        });\n        console.log('Alternative navigation successful');\n      } catch (resetError) {\n        console.error('Alternative navigation error:', resetError);\n        Alert.alert('Navigation Failed', 'Could not navigate to Appointments screen');\n      }\n    }\n  };\n  var renderSalonSelection = function renderSalonSelection() {\n    return _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Select Salon\"\n      }), salons.length === 0 && !loading ? _jsx(View, {\n        style: styles.emptyContainer,\n        children: _jsx(Text, {\n          style: styles.emptyText,\n          children: \"No salons available.\"\n        })\n      }) : _jsx(View, {\n        style: styles.salonList,\n        children: salons.map(function (salon) {\n          return _jsxs(TouchableOpacity, {\n            style: [styles.salonCard, selectedSalon && selectedSalon._id === salon._id ? styles.selectedSalonCard : null],\n            onPress: function onPress() {\n              return handleSalonSelect(salon);\n            },\n            children: [_jsx(Avatar.Icon, {\n              size: 60,\n              icon: \"store\",\n              backgroundColor: \"#0F4C75\",\n              style: styles.salonIcon\n            }), _jsxs(View, {\n              style: styles.salonInfo,\n              children: [_jsx(Title, {\n                style: styles.salonName,\n                children: salon.name\n              }), _jsx(Paragraph, {\n                style: styles.salonAddress,\n                children: salon.address && salon.address.street ? _jsxs(Text, {\n                  children: [salon.address.street, \", \", salon.address.city]\n                }) : _jsx(Text, {\n                  children: \"Address not available\"\n                })\n              }), _jsx(Paragraph, {\n                style: styles.salonPhone,\n                children: _jsx(Text, {\n                  children: salon.phone || 'Phone not available'\n                })\n              })]\n            }), selectedSalon && selectedSalon._id === salon._id && _jsx(View, {\n              style: styles.selectedIndicator,\n              children: _jsx(Chip, {\n                mode: \"flat\",\n                style: styles.selectedChip,\n                children: \"Selected\"\n              })\n            })]\n          }, salon._id);\n        })\n      }), _jsx(View, {\n        style: styles.debugContainer,\n        children: _jsx(Button, {\n          mode: \"outlined\",\n          style: styles.debugButton,\n          onPress: function onPress() {\n            if (salons && salons.length > 0) {\n              var salonId = salons[0]._id;\n              debugSalonAndStaff(salonId);\n            } else {\n              Alert.alert('Debug Info', 'No salons to debug');\n            }\n          },\n          children: \"Debug Salon Data\"\n        })\n      })]\n    });\n  };\n  var renderBarberSelection = function renderBarberSelection() {\n    return _jsxs(View, {\n      style: styles.section,\n      children: [_jsxs(View, {\n        style: styles.sectionHeader,\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Select Barber\"\n        }), _jsx(Button, {\n          mode: \"outlined\",\n          onPress: function onPress() {\n            return setStep(1);\n          },\n          compact: true,\n          children: \"Change Salon\"\n        })]\n      }), error ? _jsx(View, {\n        style: styles.errorContainer,\n        children: _jsx(Text, {\n          style: styles.errorText,\n          children: error\n        })\n      }) : loading ? _jsxs(View, {\n        style: styles.centeredContent,\n        children: [_jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"#0F4C75\"\n        }), _jsx(Text, {\n          style: styles.loadingText,\n          children: \"Loading barbers...\"\n        })]\n      }) : barbers.length === 0 ? _jsxs(View, {\n        style: styles.emptyContainer,\n        children: [_jsx(Text, {\n          style: styles.emptyText,\n          children: \"No barbers available for this salon.\"\n        }), _jsx(Button, {\n          mode: \"contained\",\n          onPress: function onPress() {\n            return setStep(1);\n          },\n          style: styles.changeButton,\n          children: \"Select Different Salon\"\n        })]\n      }) : _jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        style: styles.barberScroll,\n        children: barbers.map(function (barber) {\n          var hasWorkSchedule = barber.workSchedule && barber.workSchedule.length > 0;\n          var today = new Date().getDay();\n          var isWorkingToday = hasWorkSchedule && barber.workSchedule.some(function (schedule) {\n            return schedule.day === today && schedule.isWorking;\n          });\n          var weeklySchedule = [];\n          var weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n          var _loop = function _loop(i) {\n            var isWorking = hasWorkSchedule && barber.workSchedule.some(function (schedule) {\n              return schedule.day === i && schedule.isWorking;\n            });\n            weeklySchedule.push({\n              day: weekDays[i],\n              isWorking: isWorking\n            });\n          };\n          for (var i = 0; i < 7; i++) {\n            _loop(i);\n          }\n          return _jsxs(TouchableOpacity, {\n            style: [styles.barberCard, selectedBarber && selectedBarber._id === barber._id ? styles.selectedBarberCard : null],\n            onPress: function onPress() {\n              return handleBarberSelect(barber);\n            },\n            children: [_jsx(Avatar.Image, {\n              size: 70,\n              source: {\n                uri: barber.profileImage || 'https://via.placeholder.com/70'\n              },\n              style: styles.barberImage\n            }), _jsx(Text, {\n              style: styles.barberName,\n              children: barber.name\n            }), _jsxs(View, {\n              style: styles.availabilityContainer,\n              children: [_jsx(View, {\n                style: [styles.availabilityDot, {\n                  backgroundColor: isWorkingToday ? '#4CAF50' : '#F44336'\n                }]\n              }), _jsx(Text, {\n                style: styles.availabilityText,\n                children: isWorkingToday ? 'Available Today' : 'Unavailable Today'\n              })]\n            }), _jsx(View, {\n              style: styles.weeklySchedule,\n              children: weeklySchedule.map(function (day, index) {\n                return _jsxs(View, {\n                  style: styles.dayIndicator,\n                  children: [_jsx(Text, {\n                    style: styles.dayText,\n                    children: day.day\n                  }), _jsx(View, {\n                    style: [styles.dayDot, {\n                      backgroundColor: day.isWorking ? '#4CAF50' : '#F44336'\n                    }]\n                  })]\n                }, index);\n              })\n            }), barber.specialties && barber.specialties.length > 0 && _jsx(Text, {\n              style: styles.specialties,\n              numberOfLines: 1,\n              children: barber.specialties.slice(0, 2).join(', ')\n            })]\n          }, barber._id);\n        })\n      })]\n    });\n  };\n  var renderDateSelection = function renderDateSelection() {\n    var today = new Date();\n    var currentDateString = today.toISOString().split('T')[0];\n    var markedDates = {};\n    if (selectedDate) {\n      markedDates[selectedDate] = {\n        selected: true,\n        selectedColor: '#0F4C75'\n      };\n    }\n    return _jsxs(View, {\n      style: styles.section,\n      children: [_jsxs(View, {\n        style: styles.sectionHeader,\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Select Date\"\n        }), _jsx(Button, {\n          mode: \"outlined\",\n          onPress: function onPress() {\n            return setStep(2);\n          },\n          compact: true,\n          children: \"Change Barber\"\n        })]\n      }), _jsx(Calendar, {\n        current: currentDateString,\n        minDate: currentDateString,\n        onDayPress: handleDateSelect,\n        markedDates: markedDates,\n        theme: {\n          selectedDayBackgroundColor: '#0F4C75',\n          todayTextColor: '#0F4C75',\n          arrowColor: '#0F4C75'\n        }\n      })]\n    });\n  };\n  var renderTimeSelection = function renderTimeSelection() {\n    return _jsxs(View, {\n      style: styles.section,\n      children: [_jsxs(View, {\n        style: styles.sectionHeader,\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Select Time\"\n        }), _jsx(Button, {\n          mode: \"outlined\",\n          onPress: function onPress() {\n            return setStep(3);\n          },\n          compact: true,\n          children: \"Change Date\"\n        })]\n      }), loading ? _jsxs(View, {\n        style: styles.centeredContent,\n        children: [_jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"#0F4C75\"\n        }), _jsx(Text, {\n          style: styles.loadingText,\n          children: \"Loading available times...\"\n        })]\n      }) : availableTimes.length === 0 ? _jsxs(View, {\n        style: styles.emptyContainer,\n        children: [_jsx(Text, {\n          style: styles.emptyText,\n          children: \"No available time slots for this date.\"\n        }), _jsx(Text, {\n          style: styles.emptySubText,\n          children: \"Try selecting a different date or barber.\"\n        }), _jsx(Button, {\n          mode: \"contained\",\n          onPress: function onPress() {\n            var timeSlots = [].concat(defaultTimeSlots);\n            setAllTimeSlots(timeSlots);\n            setAvailableTimes(timeSlots);\n          },\n          style: styles.changeButton,\n          children: \"Force Show All Time Slots\"\n        }), _jsx(Button, {\n          mode: \"contained\",\n          onPress: function onPress() {\n            return setStep(3);\n          },\n          style: [styles.changeButton, {\n            marginTop: 10\n          }],\n          children: \"Select Different Date\"\n        })]\n      }) : _jsx(View, {\n        style: styles.timeGrid,\n        children: allTimeSlots.map(function (time) {\n          var isAvailable = availableTimes.includes(time);\n          return _jsxs(TouchableOpacity, {\n            style: [styles.timeCard, isAvailable ? styles.availableTimeCard : styles.unavailableTimeCard, selectedTime === time ? styles.selectedTimeCard : null],\n            onPress: function onPress() {\n              return isAvailable && handleTimeSelect(time);\n            },\n            disabled: !isAvailable,\n            children: [_jsx(Text, {\n              style: [styles.timeText, isAvailable ? styles.availableTimeText : styles.unavailableTimeText, selectedTime === time ? styles.selectedTimeText : null],\n              children: time\n            }), _jsx(Text, {\n              style: styles.endTimeText,\n              children: isAvailable ? \"- \" + getEndTime(time) : '(Booked)'\n            })]\n          }, time);\n        })\n      })]\n    });\n  };\n  var renderBookingSummary = function renderBookingSummary() {\n    return _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Booking Summary\"\n      }), _jsx(Card, {\n        style: styles.summaryCard,\n        children: _jsxs(Card.Content, {\n          children: [_jsxs(View, {\n            style: styles.summaryRow,\n            children: [_jsx(Text, {\n              style: styles.summaryLabel,\n              children: \"Salon:\"\n            }), _jsx(Text, {\n              style: styles.summaryValue,\n              children: selectedSalon.name\n            })]\n          }), _jsx(Divider, {\n            style: styles.divider\n          }), _jsxs(View, {\n            style: styles.summaryRow,\n            children: [_jsx(Text, {\n              style: styles.summaryLabel,\n              children: \"Service:\"\n            }), _jsx(Text, {\n              style: styles.summaryValue,\n              children: service.name\n            })]\n          }), _jsx(Divider, {\n            style: styles.divider\n          }), _jsxs(View, {\n            style: styles.summaryRow,\n            children: [_jsx(Text, {\n              style: styles.summaryLabel,\n              children: \"Barber:\"\n            }), _jsx(Text, {\n              style: styles.summaryValue,\n              children: selectedBarber.name\n            })]\n          }), _jsx(Divider, {\n            style: styles.divider\n          }), _jsxs(View, {\n            style: styles.summaryRow,\n            children: [_jsx(Text, {\n              style: styles.summaryLabel,\n              children: \"Date:\"\n            }), _jsx(Text, {\n              style: styles.summaryValue,\n              children: format(new Date(selectedDate), 'MMMM d, yyyy')\n            })]\n          }), _jsx(Divider, {\n            style: styles.divider\n          }), _jsxs(View, {\n            style: styles.summaryRow,\n            children: [_jsx(Text, {\n              style: styles.summaryLabel,\n              children: \"Time:\"\n            }), _jsxs(Text, {\n              style: styles.summaryValue,\n              children: [selectedTime, \" - \", getEndTime(selectedTime)]\n            })]\n          }), _jsx(Divider, {\n            style: styles.divider\n          }), _jsxs(View, {\n            style: styles.summaryRow,\n            children: [_jsx(Text, {\n              style: styles.summaryLabel,\n              children: \"Price:\"\n            }), _jsxs(Text, {\n              style: styles.summaryValue,\n              children: [\"$\", service.price]\n            })]\n          })]\n        })\n      }), _jsx(Button, {\n        mode: \"contained\",\n        style: [styles.bookButton, {\n          backgroundColor: '#3F51B5',\n          height: 65,\n          margin: 20,\n          borderRadius: 10,\n          elevation: 10\n        }],\n        contentStyle: {\n          height: 65\n        },\n        loading: submitting,\n        disabled: submitting,\n        labelStyle: {\n          fontSize: 18,\n          fontWeight: 'bold',\n          color: 'white'\n        },\n        onPress: handleBooking,\n        children: \"CONFIRM APPOINTMENT\"\n      })]\n    });\n  };\n  if (loading && salons.length === 0) {\n    return _jsxs(View, {\n      style: styles.centered,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#0F4C75\"\n      }), _jsx(Text, {\n        style: {\n          marginTop: 10\n        },\n        children: \"Loading salons...\"\n      })]\n    });\n  }\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsx(Text, {\n        style: styles.headerTitle,\n        children: \"Book Appointment\"\n      })\n    }), _jsx(Card, {\n      style: styles.serviceCard,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Title, {\n          children: service.name\n        }), _jsxs(View, {\n          style: styles.serviceDetails,\n          children: [_jsxs(Paragraph, {\n            style: styles.price,\n            children: [\"$\", service.price]\n          }), _jsxs(Paragraph, {\n            style: styles.duration,\n            children: [service.duration, \" min\"]\n          })]\n        }), _jsx(Paragraph, {\n          children: service.description\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.progressContainer,\n      children: [_jsxs(View, {\n        style: styles.progressItem,\n        children: [_jsx(View, {\n          style: [styles.progressDot, step >= 1 ? styles.progressActive : null],\n          children: _jsx(Text, {\n            style: styles.progressNumber,\n            children: \"1\"\n          })\n        }), _jsx(Text, {\n          style: styles.progressText,\n          children: \"Salon\"\n        })]\n      }), _jsx(View, {\n        style: styles.progressLine\n      }), _jsxs(View, {\n        style: styles.progressItem,\n        children: [_jsx(View, {\n          style: [styles.progressDot, step >= 2 ? styles.progressActive : null],\n          children: _jsx(Text, {\n            style: styles.progressNumber,\n            children: \"2\"\n          })\n        }), _jsx(Text, {\n          style: styles.progressText,\n          children: \"Barber\"\n        })]\n      }), _jsx(View, {\n        style: styles.progressLine\n      }), _jsxs(View, {\n        style: styles.progressItem,\n        children: [_jsx(View, {\n          style: [styles.progressDot, step >= 3 ? styles.progressActive : null],\n          children: _jsx(Text, {\n            style: styles.progressNumber,\n            children: \"3\"\n          })\n        }), _jsx(Text, {\n          style: styles.progressText,\n          children: \"Date\"\n        })]\n      }), _jsx(View, {\n        style: styles.progressLine\n      }), _jsxs(View, {\n        style: styles.progressItem,\n        children: [_jsx(View, {\n          style: [styles.progressDot, step >= 4 ? styles.progressActive : null],\n          children: _jsx(Text, {\n            style: styles.progressNumber,\n            children: \"4\"\n          })\n        }), _jsx(Text, {\n          style: styles.progressText,\n          children: \"Time\"\n        })]\n      })]\n    }), step === 1 && renderSalonSelection(), step === 2 && renderBarberSelection(), step === 3 && renderDateSelection(), step === 4 && renderTimeSelection(), selectedSalon && selectedBarber && selectedDate && selectedTime && renderBookingSummary()]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  header: {\n    backgroundColor: '#0F4C75',\n    padding: 20,\n    paddingTop: 50,\n    paddingBottom: 20\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  serviceCard: {\n    margin: 15,\n    elevation: 2\n  },\n  serviceDetails: {\n    flexDirection: 'row',\n    marginVertical: 10\n  },\n  price: {\n    fontWeight: 'bold',\n    marginRight: 15\n  },\n  duration: {\n    color: '#666'\n  },\n  progressContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    marginVertical: 15\n  },\n  progressItem: {\n    alignItems: 'center'\n  },\n  progressDot: {\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    backgroundColor: '#E0E0E0',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 5\n  },\n  progressActive: {\n    backgroundColor: '#0F4C75'\n  },\n  progressNumber: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  progressLine: {\n    flex: 1,\n    height: 2,\n    backgroundColor: '#E0E0E0',\n    marginHorizontal: 5\n  },\n  progressText: {\n    fontSize: 12,\n    color: '#666'\n  },\n  section: {\n    padding: 15,\n    marginBottom: 10\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 15\n  },\n  salonList: {\n    marginTop: 10\n  },\n  salonCard: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    padding: 15,\n    borderRadius: 10,\n    marginBottom: 10,\n    elevation: 2,\n    alignItems: 'center'\n  },\n  selectedSalonCard: {\n    backgroundColor: '#E1F5FE',\n    borderWidth: 1,\n    borderColor: '#0F4C75'\n  },\n  salonIcon: {\n    marginRight: 10\n  },\n  salonInfo: {\n    flex: 1\n  },\n  salonName: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  salonAddress: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 3\n  },\n  salonPhone: {\n    fontSize: 12,\n    color: '#666'\n  },\n  selectedIndicator: {\n    marginLeft: 10\n  },\n  selectedChip: {\n    backgroundColor: '#0F4C75'\n  },\n  barberScroll: {\n    marginTop: 10,\n    paddingBottom: 5\n  },\n  barberCard: {\n    width: 160,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 15,\n    marginRight: 10,\n    alignItems: 'center',\n    elevation: 2\n  },\n  selectedBarberCard: {\n    backgroundColor: '#E1F5FE',\n    borderWidth: 1,\n    borderColor: '#0F4C75'\n  },\n  barberImage: {\n    marginBottom: 10\n  },\n  barberName: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 5\n  },\n  availabilityContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  availabilityDot: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    marginRight: 5\n  },\n  availabilityText: {\n    fontSize: 10,\n    color: '#666'\n  },\n  specialties: {\n    fontSize: 10,\n    color: '#666',\n    textAlign: 'center'\n  },\n  timeGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    marginTop: 10\n  },\n  timeCard: {\n    width: '30%',\n    backgroundColor: 'white',\n    padding: 15,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginBottom: 10,\n    elevation: 1\n  },\n  selectedTimeCard: {\n    backgroundColor: '#0F4C75'\n  },\n  timeText: {\n    color: '#333'\n  },\n  endTimeText: {\n    color: '#666'\n  },\n  availableTimeCard: {\n    backgroundColor: '#4CAF50'\n  },\n  unavailableTimeCard: {\n    backgroundColor: '#F44336'\n  },\n  availableTimeText: {\n    color: 'white'\n  },\n  unavailableTimeText: {\n    color: 'white'\n  },\n  selectedTimeText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  noTimesText: {\n    textAlign: 'center',\n    color: '#666',\n    marginTop: 20\n  },\n  summaryCard: {\n    marginBottom: 20\n  },\n  summaryRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: 10\n  },\n  summaryLabel: {\n    fontWeight: 'bold'\n  },\n  summaryValue: {\n    textAlign: 'right'\n  },\n  divider: {\n    backgroundColor: '#e0e0e0'\n  },\n  bookButton: {\n    padding: 10,\n    marginTop: 20,\n    borderRadius: 8,\n    elevation: 8,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4.65\n  },\n  errorContainer: {\n    padding: 10,\n    backgroundColor: '#FFCCCC',\n    borderWidth: 1,\n    borderColor: '#FF0000',\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  errorText: {\n    color: '#FF0000',\n    fontWeight: 'bold'\n  },\n  centeredContent: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loadingText: {\n    marginTop: 10,\n    color: '#666'\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  emptyText: {\n    color: '#666',\n    marginBottom: 10\n  },\n  changeButton: {\n    padding: 10\n  },\n  debugContainer: {\n    marginTop: 10,\n    padding: 10,\n    backgroundColor: '#E1F5FE',\n    borderRadius: 5\n  },\n  debugButton: {\n    padding: 10\n  },\n  weeklySchedule: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '90%',\n    backgroundColor: '#f5f5f5',\n    borderRadius: 5,\n    padding: 5,\n    marginTop: 10\n  },\n  dayIndicator: {\n    alignItems: 'center',\n    padding: 2\n  },\n  dayText: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    color: '#666',\n    marginBottom: 3\n  },\n  dayDot: {\n    width: 10,\n    height: 10,\n    borderRadius: 5\n  },\n  emptySubText: {\n    fontSize: 14,\n    color: '#888',\n    textAlign: 'center',\n    marginTop: 5,\n    marginBottom: 15\n  },\n  buttonContent: {\n    height: 60,\n    paddingVertical: 10\n  }\n});\nexport default BookingScreen;","map":{"version":3,"names":["React","useState","useEffect","useContext","View","StyleSheet","ScrollView","TouchableOpacity","Alert","Text","Card","Button","Title","Paragraph","ActivityIndicator","Divider","Avatar","Chip","Calendar","format","barbersApi","appointmentsApi","servicesApi","AuthContext","apiClient","CommonActions","navigationRef","navigateToTab","jsx","_jsx","jsxs","_jsxs","BookingScreen","_ref","route","navigation","service","params","_useState","_useState2","_slicedToArray","salons","setSalons","_useState3","_useState4","selectedSalon","setSelectedSalon","_useState5","_useState6","barbers","setBarbers","_useState7","_useState8","selectedBarber","setSelectedBarber","_useState9","_useState10","selectedDate","setSelectedDate","_useState11","_useState12","selectedTime","setSelectedTime","_useState13","_useState14","availableTimes","setAvailableTimes","_useState15","_useState16","allTimeSlots","setAllTimeSlots","_useState17","_useState18","loading","setLoading","_useState19","_useState20","submitting","setSubmitting","_useState21","_useState22","error","setError","_useState23","_useState24","step","setStep","_useContext","userInfo","defaultTimeSlots","today","Date","formattedToday","fetchSalons","fetchBarbersBySalon","_id","fetchAvailableTimes","timeSlots","concat","_ref2","_asyncToGenerator","response","get","headers","Authorization","token","data","success","console","log","length","Error","alert","apply","arguments","_ref3","salonId","salonResponse","salonData","salon","name","staff","Array","isArray","staffIds","map","barberStaff","every","role","filter","roleToCheck","toLowerCase","isBarberRole","includes","usersResponse","allUsers","users","user","isStaffMember","staffId","userResponse","push","err","fallbackError","message","_x","_ref4","now","selectedDateObj","isToday","getDate","getMonth","getFullYear","currentHour","getHours","currentMinute","getMinutes","hour","minute","formattedHour","toString","padStart","formattedMinute","barberId","date","getBarberAvailability","filteredTimes","time","fallbackTimeSlots","formatTimeFromHours","decimalHours","hours","Math","floor","minutes","round","String","getDecimalHours","_time$split$map","split","Number","_time$split$map2","getEndTime","startTime","_startTime$split$map","_startTime$split$map2","startHours","endHours","duration","handleSalonSelect","handleBarberSelect","barber","handleDateSelect","dateString","setHours","handleTimeSelect","handleBooking","_ref5","_response$data","serviceDuration","_selectedTime$split$m","_selectedTime$split$m2","endHour","endMinute","endTime","bookingData","serviceId","post","bookingSuccess","setTimeout","goBack","text","navError","_response$data2","debugSalonAndStaff","_ref6","JSON","stringify","staffDetails","forEach","staffMember","idx","usersData","salonStaff","potentialBarbers","roleCheck","isBarber","isValidBarber","userError","_x2","testNavigation","navigate","reset","index","routes","resetError","renderSalonSelection","style","styles","section","children","sectionTitle","emptyContainer","emptyText","salonList","salonCard","selectedSalonCard","onPress","Icon","size","icon","backgroundColor","salonIcon","salonInfo","salonName","salonAddress","address","street","city","salonPhone","phone","selectedIndicator","mode","selectedChip","debugContainer","debugButton","renderBarberSelection","sectionHeader","compact","errorContainer","errorText","centeredContent","color","loadingText","changeButton","horizontal","showsHorizontalScrollIndicator","barberScroll","hasWorkSchedule","workSchedule","getDay","isWorkingToday","some","schedule","day","isWorking","weeklySchedule","weekDays","_loop","i","barberCard","selectedBarberCard","Image","source","uri","profileImage","barberImage","barberName","availabilityContainer","availabilityDot","availabilityText","dayIndicator","dayText","dayDot","specialties","numberOfLines","slice","join","renderDateSelection","currentDateString","toISOString","markedDates","selected","selectedColor","current","minDate","onDayPress","theme","selectedDayBackgroundColor","todayTextColor","arrowColor","renderTimeSelection","emptySubText","marginTop","timeGrid","isAvailable","timeCard","availableTimeCard","unavailableTimeCard","selectedTimeCard","disabled","timeText","availableTimeText","unavailableTimeText","selectedTimeText","endTimeText","renderBookingSummary","summaryCard","Content","summaryRow","summaryLabel","summaryValue","divider","price","bookButton","height","margin","borderRadius","elevation","contentStyle","labelStyle","fontSize","fontWeight","centered","container","header","headerTitle","serviceCard","serviceDetails","description","progressContainer","progressItem","progressDot","progressActive","progressNumber","progressText","progressLine","create","flex","justifyContent","alignItems","padding","paddingTop","paddingBottom","flexDirection","marginVertical","marginRight","paddingHorizontal","width","marginBottom","marginHorizontal","borderWidth","borderColor","marginLeft","textAlign","flexWrap","noTimesText","paddingVertical","shadowColor","shadowOffset","shadowOpacity","shadowRadius","buttonContent"],"sources":["C:/Users/User/Downloads/mobile/screens/customer/BookingScreen.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, StyleSheet, ScrollView, TouchableOpacity, Alert } from 'react-native';\r\nimport { Text, Card, Button, Title, Paragraph, ActivityIndicator, Divider, Avatar, Chip } from 'react-native-paper';\r\nimport { Calendar } from 'react-native-calendars';\r\nimport { format } from 'date-fns';\r\nimport { barbersApi, appointmentsApi, servicesApi } from '../../api/client';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport apiClient from '../../api/client';\r\nimport { CommonActions } from '@react-navigation/native';\r\nimport { navigationRef, navigateToTab } from '../../App';\r\n\r\nconst BookingScreen = ({ route, navigation }) => {\r\n  const { service } = route.params;\r\n  \r\n  const [salons, setSalons] = useState([]);\r\n  const [selectedSalon, setSelectedSalon] = useState(null);\r\n  const [barbers, setBarbers] = useState([]);\r\n  const [selectedBarber, setSelectedBarber] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedTime, setSelectedTime] = useState('');\r\n  const [availableTimes, setAvailableTimes] = useState([]);\r\n  const [allTimeSlots, setAllTimeSlots] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [step, setStep] = useState(1); // 1 = select salon, 2 = select barber, 3 = select date, 4 = select time\r\n  \r\n  const { userInfo } = useContext(AuthContext);\r\n  \r\n  // Time slots from 9 AM to 6 PM\r\n  const defaultTimeSlots = [\r\n    '09:00', '09:30', '10:00', '10:30', '11:00', '11:30',\r\n    '12:00', '12:30', '13:00', '13:30', '14:00', '14:30',\r\n    '15:00', '15:30', '16:00', '16:30', '17:00', '17:30'\r\n  ];\r\n  \r\n  // Get today's date in YYYY-MM-DD format\r\n  const today = new Date();\r\n  const formattedToday = format(today, 'yyyy-MM-dd');\r\n  \r\n  // Fetch salons on component mount\r\n  useEffect(() => {\r\n    fetchSalons();\r\n  }, []);\r\n  \r\n  // Fetch barbers when salon is selected\r\n  useEffect(() => {\r\n    if (selectedSalon) {\r\n      fetchBarbersBySalon(selectedSalon._id);\r\n    }\r\n  }, [selectedSalon]);\r\n  \r\n  // Fetch available time slots when barber or date changes\r\n  useEffect(() => {\r\n    if (selectedBarber && selectedDate) {\r\n      fetchAvailableTimes();\r\n    } else {\r\n      // Reset time slots when barber or date is not selected\r\n      const timeSlots = [...defaultTimeSlots];\r\n      setAllTimeSlots(timeSlots);\r\n      setAvailableTimes([]);\r\n    }\r\n  }, [selectedBarber, selectedDate]);\r\n  \r\n  const fetchSalons = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await apiClient.get('/salons', {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo?.token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        setSalons(response.data.salons);\r\n        console.log(`Loaded ${response.data.salons.length} salons`);\r\n      } else {\r\n        throw new Error('Failed to fetch salons');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching salons:', error);\r\n      setError('Failed to load salons. Please try again.');\r\n      setLoading(false);\r\n      Alert.alert('Error', 'Failed to load salons. Please try again later.');\r\n    }\r\n  };\r\n  \r\n  const fetchBarbersBySalon = async (salonId) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      console.log(`Fetching barbers for salon ID: ${salonId}`);\r\n      \r\n      // APPROACH: Fetch the full user list first, then filter by the salon's staff IDs\r\n      // This is more reliable than expecting populated staff objects\r\n      \r\n      // Step 1: Get salon details to get staff IDs\r\n      const salonResponse = await apiClient.get(`/salons/${salonId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo?.token}`\r\n        }\r\n      });\r\n      \r\n      if (!salonResponse.data || !salonResponse.data.success) {\r\n        throw new Error('Failed to fetch salon details');\r\n      }\r\n      \r\n      const salonData = salonResponse.data.salon;\r\n      console.log(`Loaded salon: ${salonData.name}`);\r\n      \r\n      // Check if staff property exists\r\n      if (!salonData.staff || !Array.isArray(salonData.staff) || salonData.staff.length === 0) {\r\n        console.log('No staff array found in salon data or it is empty');\r\n        setBarbers([]);\r\n        setError('No barbers available for this salon. Staff not assigned.');\r\n        setLoading(false);\r\n        setStep(2); // Still move to next step to show empty state\r\n        return;\r\n      }\r\n      \r\n      // Step 2: Extract all staff IDs (whether objects or plain IDs)\r\n      const staffIds = salonData.staff.map(staff => \r\n        typeof staff === 'object' ? staff._id : staff\r\n      );\r\n      \r\n      console.log(`Found ${salonData.staff.length} staff IDs`);\r\n      \r\n      // Step 3: Get all users and filter by staff IDs + barber role\r\n      // Use the salon's staff directly if they are populated with user data\r\n      let barberStaff = [];\r\n      \r\n      if (salonData.staff.every(staff => typeof staff === 'object' && staff.role)) {\r\n        console.log('Staff objects are populated with role data, using directly');\r\n        \r\n        // Use the populated staff data directly\r\n        barberStaff = salonData.staff.filter(staff => {\r\n          const roleToCheck = (staff.role || '').toLowerCase();\r\n          const isBarberRole = roleToCheck === 'barber' || \r\n                              roleToCheck.includes('barber') || \r\n                              roleToCheck === 'stylist';\r\n          \r\n          console.log(`Direct staff member check - ${staff.name}: role=${staff.role}, isBarber=${isBarberRole}`);\r\n          return isBarberRole;\r\n        });\r\n      } else {\r\n        // Need to fetch users from the admin endpoint\r\n        try {\r\n          console.log('Using admin endpoint to fetch users');\r\n          const usersResponse = await apiClient.get('/admin/users', {\r\n            headers: {\r\n              Authorization: `Bearer ${userInfo?.token}`\r\n            }\r\n          });\r\n          \r\n          if (!usersResponse.data || !usersResponse.data.success) {\r\n            throw new Error('Failed to fetch users');\r\n          }\r\n          \r\n          const allUsers = usersResponse.data.users || [];\r\n          console.log(`Fetched ${allUsers.length} total users from admin endpoint`);\r\n          \r\n          // Find users who are both in the salon's staff list AND have a barber/stylist role\r\n          barberStaff = allUsers.filter(user => {\r\n            // First check if this user is in the salon's staff list\r\n            const isStaffMember = staffIds.includes(user._id);\r\n            if (!isStaffMember) return false;\r\n            \r\n            // Then check role (with flexible matching)\r\n            const roleToCheck = (user.role || '').toLowerCase();\r\n            const isBarberRole = roleToCheck === 'barber' || \r\n                                roleToCheck.includes('barber') || \r\n                                roleToCheck === 'stylist';\r\n            \r\n            console.log(`Admin staff check - ${user.name}: role=${user.role}, isBarber=${isBarberRole}`);\r\n            return isBarberRole;\r\n          });\r\n        } catch (error) {\r\n          console.error('Error fetching from admin endpoint:', error);\r\n          // Try a direct approach as fallback\r\n          try {\r\n            console.log('Trying direct staff ID lookup');\r\n            // Fetch each staff member directly by ID\r\n            barberStaff = [];\r\n            for (const staffId of staffIds) {\r\n              try {\r\n                const userResponse = await apiClient.get(`/admin/users/${staffId}`, {\r\n                  headers: {\r\n                    Authorization: `Bearer ${userInfo?.token}`\r\n                  }\r\n                });\r\n                \r\n                if (userResponse.data && userResponse.data.success) {\r\n                  const user = userResponse.data.user;\r\n                  const roleToCheck = (user.role || '').toLowerCase();\r\n                  const isBarberRole = roleToCheck === 'barber' || \r\n                                     roleToCheck.includes('barber') || \r\n                                     roleToCheck === 'stylist';\r\n                                      \r\n                  if (isBarberRole) {\r\n                    barberStaff.push(user);\r\n                    console.log(`Added staff member by ID: ${user.name}, role=${user.role}`);\r\n                  }\r\n                }\r\n              } catch (err) {\r\n                console.log(`Error fetching staff ID ${staffId}:`, err);\r\n              }\r\n            }\r\n          } catch (fallbackError) {\r\n            console.error('Error with fallback approach:', fallbackError);\r\n          }\r\n        }\r\n      }\r\n      \r\n      console.log(`Found ${barberStaff.length} barbers for this salon`);\r\n      \r\n      if (barberStaff.length > 0) {\r\n        setBarbers(barberStaff);\r\n        console.log(`Loaded ${barberStaff.length} barbers for salon ${salonData.name}`);\r\n      } else {\r\n        setBarbers([]);\r\n        setError('No barbers available for this salon. Staff exists but no barber roles found.');\r\n        Alert.alert(\r\n          'No Barbers', \r\n          'This salon does not have any barbers assigned. Please select another salon or use the debug button to check staff roles.'\r\n        );\r\n      }\r\n      \r\n      setLoading(false);\r\n      setStep(2); // Move to next step\r\n    } catch (error) {\r\n      console.error('Error fetching barbers by salon:', error);\r\n      setError('Failed to load barbers. Please try again.');\r\n      Alert.alert('Error', 'Failed to load barbers: ' + (error.message || 'Unknown error'));\r\n      setLoading(false);\r\n      setStep(2); // Still move to next step to show error state\r\n    }\r\n  };\r\n  \r\n  const fetchAvailableTimes = async () => {\r\n    if (!selectedBarber || !selectedDate) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Generate time slots from 9 AM to 5 PM\r\n      const timeSlots = [];\r\n      \r\n      // Get current date and selected date for comparison\r\n      const now = new Date();\r\n      const selectedDateObj = new Date(selectedDate);\r\n      const isToday = selectedDateObj.getDate() === now.getDate() && \r\n                      selectedDateObj.getMonth() === now.getMonth() && \r\n                      selectedDateObj.getFullYear() === now.getFullYear();\r\n      \r\n      const currentHour = now.getHours();\r\n      const currentMinute = now.getMinutes();\r\n      \r\n      // Generate times from 9am to 5pm\r\n      for (let hour = 9; hour <= 17; hour++) {\r\n        for (let minute of [0, 30]) {\r\n          // Skip times in the past if it's today\r\n          if (isToday && (hour < currentHour || (hour === currentHour && minute <= currentMinute))) {\r\n            continue;\r\n          }\r\n          \r\n          const formattedHour = hour.toString().padStart(2, '0');\r\n          const formattedMinute = minute.toString().padStart(2, '0');\r\n          timeSlots.push(`${formattedHour}:${formattedMinute}`);\r\n        }\r\n      }\r\n      \r\n      // Set default time slots\r\n      setAllTimeSlots(timeSlots);\r\n      \r\n      // If we have a barber, check their availability\r\n      try {\r\n        console.log('Fetching availability for:', {\r\n          barberId: selectedBarber._id,\r\n          date: selectedDate,\r\n          salonId: selectedSalon._id\r\n        });\r\n        \r\n        // Fetch existing appointments for the barber and date\r\n        const response = await appointmentsApi.getBarberAvailability(\r\n          selectedBarber._id, \r\n          selectedDate,\r\n          selectedSalon._id\r\n        );\r\n        \r\n        console.log('Availability response:', response?.data);\r\n        \r\n        if (response?.data && response.data.success) {\r\n          // Set all time slots for display\r\n          setAllTimeSlots(timeSlots);\r\n          \r\n          // Set available times from API\r\n          const availableTimes = response.data.availableTimes || [];\r\n          \r\n          console.log('Available times from API:', availableTimes);\r\n          \r\n          // Filter availableTimes to ensure they're also in our valid timeSlots\r\n          // (this ensures we don't show past times even if the API returns them)\r\n          const filteredTimes = availableTimes.filter(time => \r\n            timeSlots.includes(time)\r\n          );\r\n          \r\n          console.log('Filtered times:', filteredTimes);\r\n          \r\n          setAvailableTimes(filteredTimes);\r\n          \r\n          // If we were in step 4 (time selection) but no times are available,\r\n          // automatically go back to date selection\r\n          if (step === 4 && filteredTimes.length === 0) {\r\n            setSelectedTime(null);\r\n          }\r\n          // If we had a selected time but it's no longer available, clear it\r\n          else if (selectedTime && !filteredTimes.includes(selectedTime)) {\r\n            setSelectedTime(null);\r\n          }\r\n        } else {\r\n          console.error('API error response or no response data:', response?.data);\r\n          // FALLBACK: Use all time slots if API fails to return available times\r\n          console.log('Using fallback time slots due to API error');\r\n          setAllTimeSlots(timeSlots);\r\n          setAvailableTimes(timeSlots);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching barber availability:', error);\r\n        console.log('Using fallback time slots due to error');\r\n        // FALLBACK: Use all time slots if API call fails\r\n        setAllTimeSlots(timeSlots);\r\n        setAvailableTimes(timeSlots);\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error in fetchAvailableTimes:', error);\r\n      setLoading(false);\r\n      \r\n      // FALLBACK: Generate time slots locally as a last resort\r\n      const fallbackTimeSlots = [];\r\n      for (let hour = 9; hour <= 17; hour++) {\r\n        fallbackTimeSlots.push(`${hour}:00`);\r\n        fallbackTimeSlots.push(`${hour}:30`);\r\n      }\r\n      setAllTimeSlots(fallbackTimeSlots);\r\n      setAvailableTimes(fallbackTimeSlots);\r\n    }\r\n  };\r\n  \r\n  // Helper function to convert decimal hours to HH:MM format\r\n  const formatTimeFromHours = (decimalHours) => {\r\n    const hours = Math.floor(decimalHours);\r\n    const minutes = Math.round((decimalHours - hours) * 60);\r\n    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\r\n  };\r\n  \r\n  // Helper function to convert HH:MM to decimal hours\r\n  const getDecimalHours = (time) => {\r\n    const [hours, minutes] = time.split(':').map(Number);\r\n    return hours + (minutes / 60);\r\n  };\r\n  \r\n  // Calculate end time based on selected time and service duration\r\n  const getEndTime = (startTime) => {\r\n    const [hours, minutes] = startTime.split(':').map(Number);\r\n    const startHours = hours + (minutes / 60);\r\n    const endHours = startHours + (service.duration / 60);\r\n    return formatTimeFromHours(endHours);\r\n  };\r\n  \r\n  const handleSalonSelect = (salon) => {\r\n    setSelectedSalon(salon);\r\n    setSelectedBarber(null);\r\n    setSelectedDate('');\r\n    setSelectedTime('');\r\n    // Next step will be triggered by useEffect when barbers are loaded\r\n  };\r\n  \r\n  const handleBarberSelect = (barber) => {\r\n    setSelectedBarber(barber);\r\n    setStep(3); // Move to date selection\r\n  };\r\n  \r\n  const handleDateSelect = (date) => {\r\n    // Check if the selected date is not in the past\r\n    const selectedDateObj = new Date(date.dateString);\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0); // Set to start of day for accurate comparison\r\n    \r\n    if (selectedDateObj < today) {\r\n      Alert.alert(\r\n        \"Invalid Date\", \r\n        \"You cannot book appointments in the past. Please select today or a future date.\"\r\n      );\r\n      return;\r\n    }\r\n    \r\n    setSelectedDate(date.dateString);\r\n    setStep(4); // Move to time selection\r\n  };\r\n  \r\n  const handleTimeSelect = (time) => {\r\n    setSelectedTime(time);\r\n  };\r\n  \r\n  const handleBooking = async () => {\r\n    // Basic validation\r\n    if (!selectedBarber || !selectedDate || !selectedTime || !selectedSalon) {\r\n      Alert.alert('Error', 'Please complete all booking details');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSubmitting(true);\r\n      console.log(\"Starting booking process...\");\r\n      \r\n      // Calculate end time\r\n      const serviceDuration = service.duration || 30;\r\n      const [hour, minute] = selectedTime.split(':').map(Number);\r\n      let endHour = hour;\r\n      let endMinute = minute + serviceDuration;\r\n      \r\n      // Adjust hour if minutes overflow\r\n      if (endMinute >= 60) {\r\n        endHour += Math.floor(endMinute / 60);\r\n        endMinute = endMinute % 60;\r\n      }\r\n      \r\n      const endTime = `${endHour.toString().padStart(2, '0')}:${endMinute.toString().padStart(2, '0')}`;\r\n      \r\n      // Format booking data\r\n      const bookingData = {\r\n        barberId: selectedBarber._id,\r\n        serviceId: service._id,\r\n        salonId: selectedSalon._id,\r\n        date: selectedDate,\r\n        startTime: selectedTime,\r\n        endTime: endTime\r\n      };\r\n      \r\n      console.log('Booking data:', bookingData);\r\n      \r\n      // Simple direct API call\r\n      const response = await apiClient.post('/appointments', bookingData, {\r\n        headers: { Authorization: `Bearer ${userInfo?.token}` }\r\n      });\r\n      \r\n      setSubmitting(false);\r\n      \r\n      console.log('BOOKING SUCCESS! Response:', response?.data);\r\n      \r\n      if (response?.data?.success) {\r\n        console.log('BOOKING SUCCESS! Response:', response?.data);\r\n        \r\n        // Set a flag for successful booking\r\n        const bookingSuccess = true;\r\n        \r\n        // First just go back - this is the most reliable approach\r\n        setTimeout(() => {\r\n          try {\r\n            console.log('Navigating back to previous screen');\r\n            navigation.goBack();\r\n            \r\n            // Then show success alert\r\n            setTimeout(() => {\r\n              Alert.alert(\r\n                'Booking Confirmed!',\r\n                `Your appointment with ${selectedBarber.name} on ${format(new Date(selectedDate), 'MMMM d')} at ${selectedTime} has been booked successfully.`,\r\n                [{ text: 'OK' }]\r\n              );\r\n            }, 100);\r\n          } catch (navError) {\r\n            console.error('Navigation error:', navError);\r\n            // If navigation fails, at least show the success message\r\n            Alert.alert(\r\n              'Booking Confirmed!',\r\n              `Your appointment with ${selectedBarber.name} on ${format(new Date(selectedDate), 'MMMM d')} at ${selectedTime} has been booked successfully.`,\r\n              [{ text: 'OK' }]\r\n            );\r\n          }\r\n        }, 100);\r\n      } else {\r\n        throw new Error(response?.data?.message || 'Unknown booking error');\r\n      }\r\n    } catch (error) {\r\n      console.error('Booking error:', error);\r\n      setSubmitting(false);\r\n      Alert.alert('Error', error.message || 'Failed to book appointment. Please try again.');\r\n    }\r\n  };\r\n  \r\n  // Debug button\r\n  const debugSalonAndStaff = async (salonId) => {\r\n    try {\r\n      console.log(`Debug: Fetching detailed data for salon ${salonId}`);\r\n      \r\n      // Fetch salon details\r\n      const salonResponse = await apiClient.get(`/salons/${salonId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo?.token}`\r\n        }\r\n      });\r\n      \r\n      const salonData = salonResponse.data;\r\n      console.log('Raw salon data:', JSON.stringify(salonData));\r\n      \r\n      // Get staff IDs\r\n      let staffIds = [];\r\n      let staffDetails = '';\r\n      \r\n      if (salonData.salon && salonData.salon.staff) {\r\n        console.log('Staff array length:', salonData.salon.staff.length);\r\n        console.log('Staff array type:', typeof salonData.salon.staff);\r\n        console.log('Staff array:', JSON.stringify(salonData.salon.staff));\r\n        \r\n        // Extract staff IDs\r\n        staffIds = salonData.salon.staff.map(staff => \r\n          typeof staff === 'object' ? staff._id : staff\r\n        );\r\n        \r\n        // Log staff members\r\n        salonData.salon.staff.forEach((staffMember, idx) => {\r\n          console.log(`Staff #${idx}:`, JSON.stringify(staffMember));\r\n          if (typeof staffMember === 'object') {\r\n            const role = staffMember.role || 'unknown';\r\n            staffDetails += `${idx+1}. ${staffMember.name}: role=${role}\\n`;\r\n          } else {\r\n            staffDetails += `${idx+1}. ID only: ${staffMember}\\n`;\r\n          }\r\n        });\r\n      }\r\n      \r\n      // Always fetch all users to compare\r\n      try {\r\n        const usersResponse = await apiClient.get('/users', {\r\n          headers: {\r\n            Authorization: `Bearer ${userInfo?.token}`\r\n          }\r\n        });\r\n        \r\n        const usersData = usersResponse.data;\r\n        \r\n        if (usersData.success && usersData.users) {\r\n          // Find users who are in this salon's staff\r\n          const salonStaff = usersData.users.filter(user => \r\n            staffIds.includes(user._id)\r\n          );\r\n          \r\n          console.log(`Found ${salonStaff.length} staff members through user lookup`);\r\n          \r\n          // Count barbers specifically\r\n          const potentialBarbers = salonStaff.filter(user => {\r\n            const roleCheck = (user.role || '').toLowerCase();\r\n            const isBarber = roleCheck === 'barber' || \r\n                           roleCheck.includes('barber') || \r\n                           roleCheck === 'stylist';\r\n            console.log(`User ${user.name}, role=${user.role}, isBarber=${isBarber}`);\r\n            return isBarber;\r\n          });\r\n          \r\n          console.log(`Found ${potentialBarbers.length} potential barbers`);\r\n          \r\n          salonStaff.forEach((staff, idx) => {\r\n            const role = staff.role || 'unknown';\r\n            const isValidBarber = (role.toLowerCase() === 'barber' || \r\n                                 role.toLowerCase().includes('barber') || \r\n                                 role.toLowerCase() === 'stylist');\r\n            staffDetails += `${idx+1}. ${staff.name}: role=${role} (${isValidBarber ? 'Valid Barber' : 'Not a Barber'})\\n`;\r\n          });\r\n        }\r\n      } catch (userError) {\r\n        console.error('Error fetching users for debug:', userError);\r\n        staffDetails += '(Error fetching user details)\\n';\r\n      }\r\n      \r\n      // Show alert with details\r\n      Alert.alert(\r\n        'Debug Info', \r\n        `Salon: ${salonData.salon.name}\\n` +\r\n        `Staff count: ${salonData.salon.staff ? salonData.salon.staff.length : 0}\\n\\n` +\r\n        `Staff:\\n${staffDetails || 'No staff details available'}`\r\n      );\r\n    } catch (err) {\r\n      console.error('Debug fetch error:', err);\r\n      Alert.alert('Debug Error', err.toString());\r\n    }\r\n  };\r\n  \r\n  // Test navigation function\r\n  const testNavigation = () => {\r\n    console.log('Testing navigation to Appointments screen');\r\n    try {\r\n      navigation.navigate('Appointments');\r\n      console.log('Navigation successful');\r\n    } catch (error) {\r\n      console.error('Navigation error:', error);\r\n      \r\n      // Try alternative navigation\r\n      try {\r\n        console.log('Trying alternative navigation');\r\n        navigation.reset({\r\n          index: 0,\r\n          routes: [{ name: 'Appointments' }],\r\n        });\r\n        console.log('Alternative navigation successful');\r\n      } catch (resetError) {\r\n        console.error('Alternative navigation error:', resetError);\r\n        Alert.alert('Navigation Failed', 'Could not navigate to Appointments screen');\r\n      }\r\n    }\r\n  };\r\n  \r\n  const renderSalonSelection = () => (\r\n    <View style={styles.section}>\r\n      <Text style={styles.sectionTitle}>Select Salon</Text>\r\n      {salons.length === 0 && !loading ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyText}>No salons available.</Text>\r\n        </View>\r\n      ) : (\r\n        <View style={styles.salonList}>\r\n          {salons.map(salon => (\r\n            <TouchableOpacity\r\n              key={salon._id}\r\n              style={[\r\n                styles.salonCard,\r\n                selectedSalon && selectedSalon._id === salon._id ? styles.selectedSalonCard : null\r\n              ]}\r\n              onPress={() => handleSalonSelect(salon)}\r\n            >\r\n              <Avatar.Icon \r\n                size={60} \r\n                icon=\"store\" \r\n                backgroundColor=\"#0F4C75\" \r\n                style={styles.salonIcon}\r\n              />\r\n              <View style={styles.salonInfo}>\r\n                <Title style={styles.salonName}>{salon.name}</Title>\r\n                <Paragraph style={styles.salonAddress}>\r\n                  {salon.address && salon.address.street ? (\r\n                    <Text>{salon.address.street}, {salon.address.city}</Text>\r\n                  ) : (\r\n                    <Text>Address not available</Text>\r\n                  )}\r\n                </Paragraph>\r\n                <Paragraph style={styles.salonPhone}>\r\n                  <Text>{salon.phone || 'Phone not available'}</Text>\r\n                </Paragraph>\r\n              </View>\r\n              {selectedSalon && selectedSalon._id === salon._id && (\r\n                <View style={styles.selectedIndicator}>\r\n                  <Chip mode=\"flat\" style={styles.selectedChip}>Selected</Chip>\r\n                </View>\r\n              )}\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n      )}\r\n      \r\n      {/* Debug button */}\r\n      <View style={styles.debugContainer}>\r\n        <Button\r\n          mode=\"outlined\"\r\n          style={styles.debugButton}\r\n          onPress={() => {\r\n            if (salons && salons.length > 0) {\r\n              const salonId = salons[0]._id;\r\n              debugSalonAndStaff(salonId);\r\n            } else {\r\n              Alert.alert('Debug Info', 'No salons to debug');\r\n            }\r\n          }}\r\n        >\r\n          Debug Salon Data\r\n        </Button>\r\n      </View>\r\n    </View>\r\n  );\r\n  \r\n  const renderBarberSelection = () => (\r\n    <View style={styles.section}>\r\n      <View style={styles.sectionHeader}>\r\n        <Text style={styles.sectionTitle}>Select Barber</Text>\r\n        <Button \r\n          mode=\"outlined\" \r\n          onPress={() => setStep(1)}\r\n          compact\r\n        >\r\n          Change Salon\r\n        </Button>\r\n      </View>\r\n      \r\n      {error ? (\r\n        <View style={styles.errorContainer}>\r\n          <Text style={styles.errorText}>{error}</Text>\r\n        </View>\r\n      ) : loading ? (\r\n        <View style={styles.centeredContent}>\r\n          <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n          <Text style={styles.loadingText}>Loading barbers...</Text>\r\n        </View>\r\n      ) : barbers.length === 0 ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyText}>No barbers available for this salon.</Text>\r\n          <Button \r\n            mode=\"contained\" \r\n            onPress={() => setStep(1)}\r\n            style={styles.changeButton}\r\n          >\r\n            Select Different Salon\r\n          </Button>\r\n        </View>\r\n      ) : (\r\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.barberScroll}>\r\n          {barbers.map(barber => {\r\n            // Calculate barber availability status\r\n            const hasWorkSchedule = barber.workSchedule && barber.workSchedule.length > 0;\r\n            const today = new Date().getDay(); // 0 = Sunday, 1 = Monday, etc.\r\n            const isWorkingToday = hasWorkSchedule && \r\n              barber.workSchedule.some(schedule => \r\n                schedule.day === today && schedule.isWorking\r\n              );\r\n            \r\n            // Calculate barber's weekly schedule\r\n            const weeklySchedule = [];\r\n            const weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n            \r\n            for (let i = 0; i < 7; i++) {\r\n              const isWorking = hasWorkSchedule && \r\n                barber.workSchedule.some(schedule => \r\n                  schedule.day === i && schedule.isWorking\r\n                );\r\n              \r\n              weeklySchedule.push({\r\n                day: weekDays[i],\r\n                isWorking\r\n              });\r\n            }\r\n            \r\n            return (\r\n              <TouchableOpacity\r\n                key={barber._id}\r\n                style={[\r\n                  styles.barberCard,\r\n                  selectedBarber && selectedBarber._id === barber._id ? styles.selectedBarberCard : null\r\n                ]}\r\n                onPress={() => handleBarberSelect(barber)}\r\n              >\r\n                <Avatar.Image \r\n                  size={70} \r\n                  source={{ uri: barber.profileImage || 'https://via.placeholder.com/70' }} \r\n                  style={styles.barberImage}\r\n                />\r\n                <Text style={styles.barberName}>{barber.name}</Text>\r\n                \r\n                {/* Availability indicator */}\r\n                <View style={styles.availabilityContainer}>\r\n                  <View \r\n                    style={[\r\n                      styles.availabilityDot, \r\n                      { backgroundColor: isWorkingToday ? '#4CAF50' : '#F44336' }\r\n                    ]} \r\n                  />\r\n                  <Text style={styles.availabilityText}>\r\n                    {isWorkingToday ? 'Available Today' : 'Unavailable Today'}\r\n                  </Text>\r\n                </View>\r\n                \r\n                {/* Weekly availability */}\r\n                <View style={styles.weeklySchedule}>\r\n                  {weeklySchedule.map((day, index) => (\r\n                    <View key={index} style={styles.dayIndicator}>\r\n                      <Text style={styles.dayText}>{day.day}</Text>\r\n                      <View \r\n                        style={[\r\n                          styles.dayDot, \r\n                          { backgroundColor: day.isWorking ? '#4CAF50' : '#F44336' }\r\n                        ]} \r\n                      />\r\n                    </View>\r\n                  ))}\r\n                </View>\r\n                \r\n                {/* Specialties */}\r\n                {barber.specialties && barber.specialties.length > 0 && (\r\n                  <Text style={styles.specialties} numberOfLines={1}>\r\n                    {barber.specialties.slice(0, 2).join(', ')}\r\n                  </Text>\r\n                )}\r\n              </TouchableOpacity>\r\n            );\r\n          })}\r\n        </ScrollView>\r\n      )}\r\n    </View>\r\n  );\r\n  \r\n  const renderDateSelection = () => {\r\n    // Get current date to disable past dates\r\n    const today = new Date();\r\n    const currentDateString = today.toISOString().split('T')[0];\r\n    \r\n    // Generate marked dates object - disable past dates\r\n    const markedDates = {};\r\n    \r\n    // Mark selected date if there is one\r\n    if (selectedDate) {\r\n      markedDates[selectedDate] = { selected: true, selectedColor: '#0F4C75' };\r\n    }\r\n    \r\n    return (\r\n      <View style={styles.section}>\r\n        <View style={styles.sectionHeader}>\r\n          <Text style={styles.sectionTitle}>Select Date</Text>\r\n          <Button \r\n            mode=\"outlined\" \r\n            onPress={() => setStep(2)}\r\n            compact\r\n          >\r\n            Change Barber\r\n          </Button>\r\n        </View>\r\n        \r\n        <Calendar\r\n          current={currentDateString}\r\n          minDate={currentDateString}\r\n          onDayPress={handleDateSelect}\r\n          markedDates={markedDates}\r\n          theme={{\r\n            selectedDayBackgroundColor: '#0F4C75',\r\n            todayTextColor: '#0F4C75',\r\n            arrowColor: '#0F4C75',\r\n          }}\r\n        />\r\n      </View>\r\n    );\r\n  };\r\n  \r\n  const renderTimeSelection = () => (\r\n    <View style={styles.section}>\r\n      <View style={styles.sectionHeader}>\r\n        <Text style={styles.sectionTitle}>Select Time</Text>\r\n        <Button \r\n          mode=\"outlined\" \r\n          onPress={() => setStep(3)}\r\n          compact\r\n        >\r\n          Change Date\r\n        </Button>\r\n      </View>\r\n      \r\n      {loading ? (\r\n        <View style={styles.centeredContent}>\r\n          <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n          <Text style={styles.loadingText}>Loading available times...</Text>\r\n        </View>\r\n      ) : availableTimes.length === 0 ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyText}>No available time slots for this date.</Text>\r\n          <Text style={styles.emptySubText}>Try selecting a different date or barber.</Text>\r\n          <Button \r\n            mode=\"contained\" \r\n            onPress={() => {\r\n              // Force refresh time slots with fallback\r\n              const timeSlots = [...defaultTimeSlots];\r\n              setAllTimeSlots(timeSlots);\r\n              setAvailableTimes(timeSlots);\r\n            }}\r\n            style={styles.changeButton}\r\n          >\r\n            Force Show All Time Slots\r\n          </Button>\r\n          <Button \r\n            mode=\"contained\" \r\n            onPress={() => setStep(3)}\r\n            style={[styles.changeButton, { marginTop: 10 }]}\r\n          >\r\n            Select Different Date\r\n          </Button>\r\n        </View>\r\n      ) : (\r\n        <View style={styles.timeGrid}>\r\n          {allTimeSlots.map(time => {\r\n            const isAvailable = availableTimes.includes(time);\r\n            \r\n            return (\r\n              <TouchableOpacity\r\n                key={time}\r\n                style={[\r\n                  styles.timeCard,\r\n                  isAvailable ? styles.availableTimeCard : styles.unavailableTimeCard,\r\n                  selectedTime === time ? styles.selectedTimeCard : null\r\n                ]}\r\n                onPress={() => isAvailable && handleTimeSelect(time)}\r\n                disabled={!isAvailable}\r\n              >\r\n                <Text \r\n                  style={[\r\n                    styles.timeText,\r\n                    isAvailable ? styles.availableTimeText : styles.unavailableTimeText,\r\n                    selectedTime === time ? styles.selectedTimeText : null\r\n                  ]}\r\n                >\r\n                  {time}\r\n                </Text>\r\n                <Text style={styles.endTimeText}>\r\n                  {isAvailable ? `- ${getEndTime(time)}` : '(Booked)'}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            );\r\n          })}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n  \r\n  const renderBookingSummary = () => (\r\n    <View style={styles.section}>\r\n      <Text style={styles.sectionTitle}>Booking Summary</Text>\r\n      <Card style={styles.summaryCard}>\r\n        <Card.Content>\r\n          <View style={styles.summaryRow}>\r\n            <Text style={styles.summaryLabel}>Salon:</Text>\r\n            <Text style={styles.summaryValue}>{selectedSalon.name}</Text>\r\n          </View>\r\n          <Divider style={styles.divider} />\r\n          <View style={styles.summaryRow}>\r\n            <Text style={styles.summaryLabel}>Service:</Text>\r\n            <Text style={styles.summaryValue}>{service.name}</Text>\r\n          </View>\r\n          <Divider style={styles.divider} />\r\n          <View style={styles.summaryRow}>\r\n            <Text style={styles.summaryLabel}>Barber:</Text>\r\n            <Text style={styles.summaryValue}>{selectedBarber.name}</Text>\r\n          </View>\r\n          <Divider style={styles.divider} />\r\n          <View style={styles.summaryRow}>\r\n            <Text style={styles.summaryLabel}>Date:</Text>\r\n            <Text style={styles.summaryValue}>{format(new Date(selectedDate), 'MMMM d, yyyy')}</Text>\r\n          </View>\r\n          <Divider style={styles.divider} />\r\n          <View style={styles.summaryRow}>\r\n            <Text style={styles.summaryLabel}>Time:</Text>\r\n            <Text style={styles.summaryValue}>{selectedTime} - {getEndTime(selectedTime)}</Text>\r\n          </View>\r\n          <Divider style={styles.divider} />\r\n          <View style={styles.summaryRow}>\r\n            <Text style={styles.summaryLabel}>Price:</Text>\r\n            <Text style={styles.summaryValue}>${service.price}</Text>\r\n          </View>\r\n        </Card.Content>\r\n      </Card>\r\n      \r\n      <Button \r\n        mode=\"contained\" \r\n        style={[\r\n          styles.bookButton, \r\n          { \r\n            backgroundColor: '#3F51B5', \r\n            height: 65, \r\n            margin: 20,\r\n            borderRadius: 10,\r\n            elevation: 10\r\n          }\r\n        ]}\r\n        contentStyle={{ height: 65 }}\r\n        loading={submitting}\r\n        disabled={submitting}\r\n        labelStyle={{ fontSize: 18, fontWeight: 'bold', color: 'white' }}\r\n        onPress={handleBooking}\r\n      >\r\n        CONFIRM APPOINTMENT\r\n      </Button>\r\n    </View>\r\n  );\r\n  \r\n  if (loading && salons.length === 0) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n        <Text style={{ marginTop: 10 }}>Loading salons...</Text>\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Book Appointment</Text>\r\n      </View>\r\n      \r\n      {/* Service Details */}\r\n      <Card style={styles.serviceCard}>\r\n        <Card.Content>\r\n          <Title>{service.name}</Title>\r\n          <View style={styles.serviceDetails}>\r\n            <Paragraph style={styles.price}>${service.price}</Paragraph>\r\n            <Paragraph style={styles.duration}>{service.duration} min</Paragraph>\r\n          </View>\r\n          <Paragraph>{service.description}</Paragraph>\r\n        </Card.Content>\r\n      </Card>\r\n      \r\n      {/* Booking progress indicator */}\r\n      <View style={styles.progressContainer}>\r\n        <View style={styles.progressItem}>\r\n          <View style={[styles.progressDot, step >= 1 ? styles.progressActive : null]}>\r\n            <Text style={styles.progressNumber}>1</Text>\r\n          </View>\r\n          <Text style={styles.progressText}>Salon</Text>\r\n        </View>\r\n        <View style={styles.progressLine} />\r\n        <View style={styles.progressItem}>\r\n          <View style={[styles.progressDot, step >= 2 ? styles.progressActive : null]}>\r\n            <Text style={styles.progressNumber}>2</Text>\r\n          </View>\r\n          <Text style={styles.progressText}>Barber</Text>\r\n        </View>\r\n        <View style={styles.progressLine} />\r\n        <View style={styles.progressItem}>\r\n          <View style={[styles.progressDot, step >= 3 ? styles.progressActive : null]}>\r\n            <Text style={styles.progressNumber}>3</Text>\r\n          </View>\r\n          <Text style={styles.progressText}>Date</Text>\r\n        </View>\r\n        <View style={styles.progressLine} />\r\n        <View style={styles.progressItem}>\r\n          <View style={[styles.progressDot, step >= 4 ? styles.progressActive : null]}>\r\n            <Text style={styles.progressNumber}>4</Text>\r\n          </View>\r\n          <Text style={styles.progressText}>Time</Text>\r\n        </View>\r\n      </View>\r\n      \r\n      {/* Current step content */}\r\n      {step === 1 && renderSalonSelection()}\r\n      {step === 2 && renderBarberSelection()}\r\n      {step === 3 && renderDateSelection()}\r\n      {step === 4 && renderTimeSelection()}\r\n      \r\n      {/* Booking Summary & Confirmation */}\r\n      {selectedSalon && selectedBarber && selectedDate && selectedTime && renderBookingSummary()}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  header: {\r\n    backgroundColor: '#0F4C75',\r\n    padding: 20,\r\n    paddingTop: 50,\r\n    paddingBottom: 20,\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  serviceCard: {\r\n    margin: 15,\r\n    elevation: 2,\r\n  },\r\n  serviceDetails: {\r\n    flexDirection: 'row',\r\n    marginVertical: 10,\r\n  },\r\n  price: {\r\n    fontWeight: 'bold',\r\n    marginRight: 15,\r\n  },\r\n  duration: {\r\n    color: '#666',\r\n  },\r\n  // Progress indicator styles\r\n  progressContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n    marginVertical: 15,\r\n  },\r\n  progressItem: {\r\n    alignItems: 'center',\r\n  },\r\n  progressDot: {\r\n    width: 30,\r\n    height: 30,\r\n    borderRadius: 15,\r\n    backgroundColor: '#E0E0E0',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: 5,\r\n  },\r\n  progressActive: {\r\n    backgroundColor: '#0F4C75',\r\n  },\r\n  progressNumber: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n  progressLine: {\r\n    flex: 1,\r\n    height: 2,\r\n    backgroundColor: '#E0E0E0',\r\n    marginHorizontal: 5,\r\n  },\r\n  progressText: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  },\r\n  section: {\r\n    padding: 15,\r\n    marginBottom: 10,\r\n  },\r\n  sectionHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 15,\r\n  },\r\n  // Salon selection styles\r\n  salonList: {\r\n    marginTop: 10,\r\n  },\r\n  salonCard: {\r\n    flexDirection: 'row',\r\n    backgroundColor: 'white',\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n    elevation: 2,\r\n    alignItems: 'center',\r\n  },\r\n  selectedSalonCard: {\r\n    backgroundColor: '#E1F5FE',\r\n    borderWidth: 1,\r\n    borderColor: '#0F4C75',\r\n  },\r\n  salonIcon: {\r\n    marginRight: 10,\r\n  },\r\n  salonInfo: {\r\n    flex: 1,\r\n  },\r\n  salonName: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  salonAddress: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n    marginBottom: 3,\r\n  },\r\n  salonPhone: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  },\r\n  selectedIndicator: {\r\n    marginLeft: 10,\r\n  },\r\n  selectedChip: {\r\n    backgroundColor: '#0F4C75',\r\n  },\r\n  // Barber selection styles\r\n  barberScroll: {\r\n    marginTop: 10,\r\n    paddingBottom: 5,\r\n  },\r\n  barberCard: {\r\n    width: 160,\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginRight: 10,\r\n    alignItems: 'center',\r\n    elevation: 2,\r\n  },\r\n  selectedBarberCard: {\r\n    backgroundColor: '#E1F5FE',\r\n    borderWidth: 1,\r\n    borderColor: '#0F4C75',\r\n  },\r\n  barberImage: {\r\n    marginBottom: 10,\r\n  },\r\n  barberName: {\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    marginBottom: 5,\r\n  },\r\n  availabilityContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginVertical: 5,\r\n  },\r\n  availabilityDot: {\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: 4,\r\n    marginRight: 5,\r\n  },\r\n  availabilityText: {\r\n    fontSize: 10,\r\n    color: '#666',\r\n  },\r\n  specialties: {\r\n    fontSize: 10,\r\n    color: '#666',\r\n    textAlign: 'center',\r\n  },\r\n  // Time selection styles\r\n  timeGrid: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n    marginTop: 10,\r\n  },\r\n  timeCard: {\r\n    width: '30%',\r\n    backgroundColor: 'white',\r\n    padding: 15,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n    elevation: 1,\r\n  },\r\n  selectedTimeCard: {\r\n    backgroundColor: '#0F4C75',\r\n  },\r\n  timeText: {\r\n    color: '#333',\r\n  },\r\n  endTimeText: {\r\n    color: '#666',\r\n  },\r\n  availableTimeCard: {\r\n    backgroundColor: '#4CAF50',\r\n  },\r\n  unavailableTimeCard: {\r\n    backgroundColor: '#F44336',\r\n  },\r\n  availableTimeText: {\r\n    color: 'white',\r\n  },\r\n  unavailableTimeText: {\r\n    color: 'white',\r\n  },\r\n  selectedTimeText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n  noTimesText: {\r\n    textAlign: 'center',\r\n    color: '#666',\r\n    marginTop: 20,\r\n  },\r\n  // Summary styles\r\n  summaryCard: {\r\n    marginBottom: 20,\r\n  },\r\n  summaryRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    paddingVertical: 10,\r\n  },\r\n  summaryLabel: {\r\n    fontWeight: 'bold',\r\n  },\r\n  summaryValue: {\r\n    textAlign: 'right',\r\n  },\r\n  divider: {\r\n    backgroundColor: '#e0e0e0',\r\n  },\r\n  bookButton: {\r\n    padding: 10,\r\n    marginTop: 20,\r\n    borderRadius: 8,\r\n    elevation: 8,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 4,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 4.65,\r\n  },\r\n  errorContainer: {\r\n    padding: 10,\r\n    backgroundColor: '#FFCCCC',\r\n    borderWidth: 1,\r\n    borderColor: '#FF0000',\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n  },\r\n  errorText: {\r\n    color: '#FF0000',\r\n    fontWeight: 'bold',\r\n  },\r\n  centeredContent: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    color: '#666',\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  emptyText: {\r\n    color: '#666',\r\n    marginBottom: 10,\r\n  },\r\n  changeButton: {\r\n    padding: 10,\r\n  },\r\n  debugContainer: {\r\n    marginTop: 10,\r\n    padding: 10,\r\n    backgroundColor: '#E1F5FE',\r\n    borderRadius: 5,\r\n  },\r\n  debugButton: {\r\n    padding: 10,\r\n  },\r\n  weeklySchedule: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    width: '90%',\r\n    backgroundColor: '#f5f5f5',\r\n    borderRadius: 5,\r\n    padding: 5,\r\n    marginTop: 10,\r\n  },\r\n  dayIndicator: {\r\n    alignItems: 'center',\r\n    padding: 2,\r\n  },\r\n  dayText: {\r\n    fontSize: 10,\r\n    fontWeight: 'bold',\r\n    color: '#666',\r\n    marginBottom: 3,\r\n  },\r\n  dayDot: {\r\n    width: 10,\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  emptySubText: {\r\n    fontSize: 14,\r\n    color: '#888',\r\n    textAlign: 'center',\r\n    marginTop: 5,\r\n    marginBottom: 15,\r\n  },\r\n  buttonContent: {\r\n    height: 60,\r\n    paddingVertical: 10,\r\n  },\r\n});\r\n\r\nexport default BookingScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}