{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, createContext } from 'react';\nimport { LightTheme, DarkTheme } from \"../theme\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var ThemeContext = createContext();\nexport var ThemeProvider = function ThemeProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDarkMode = _useState2[0],\n    setIsDarkMode = _useState2[1];\n  var _useState3 = useState(LightTheme),\n    _useState4 = _slicedToArray(_useState3, 2),\n    theme = _useState4[0],\n    setTheme = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  useEffect(function () {\n    var loadThemePreference = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          setIsLoading(true);\n          var themePreference = yield AsyncStorage.getItem('themePreference');\n          if (themePreference === 'dark') {\n            setIsDarkMode(true);\n            setTheme(DarkTheme);\n          } else {\n            setIsDarkMode(false);\n            setTheme(LightTheme);\n          }\n        } catch (error) {\n          console.error('Erreur lors du chargement des préférences de thème:', error);\n          setIsDarkMode(false);\n          setTheme(LightTheme);\n        } finally {\n          setIsLoading(false);\n        }\n      });\n      return function loadThemePreference() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadThemePreference();\n  }, []);\n  var toggleTheme = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var newIsDarkMode = !isDarkMode;\n        setIsDarkMode(newIsDarkMode);\n        setTheme(newIsDarkMode ? DarkTheme : LightTheme);\n        yield AsyncStorage.setItem('themePreference', newIsDarkMode ? 'dark' : 'light');\n      } catch (error) {\n        console.error('Erreur lors de la sauvegarde des préférences de thème:', error);\n      }\n    });\n    return function toggleTheme() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var setThemeMode = function () {\n    var _ref4 = _asyncToGenerator(function* (mode) {\n      try {\n        var isDark = mode === 'dark';\n        setIsDarkMode(isDark);\n        setTheme(isDark ? DarkTheme : LightTheme);\n        yield AsyncStorage.setItem('themePreference', mode);\n      } catch (error) {\n        console.error('Erreur lors de la sauvegarde des préférences de thème:', error);\n      }\n    });\n    return function setThemeMode(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsx(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      isDarkMode: isDarkMode,\n      toggleTheme: toggleTheme,\n      setThemeMode: setThemeMode,\n      isLoading: isLoading\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["React","useState","useEffect","createContext","LightTheme","DarkTheme","AsyncStorage","jsx","_jsx","ThemeContext","ThemeProvider","_ref","children","_useState","_useState2","_slicedToArray","isDarkMode","setIsDarkMode","_useState3","_useState4","theme","setTheme","_useState5","_useState6","isLoading","setIsLoading","loadThemePreference","_ref2","_asyncToGenerator","themePreference","getItem","error","console","apply","arguments","toggleTheme","_ref3","newIsDarkMode","setItem","setThemeMode","_ref4","mode","isDark","_x","Provider","value"],"sources":["C:/Users/User/Downloads/mobile/context/ThemeContext.js"],"sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\nimport { LightTheme, DarkTheme } from '../theme';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n// Création du contexte de thème\nexport const ThemeContext = createContext();\n\n// Provider du thème\nexport const ThemeProvider = ({ children }) => {\n  // État pour le thème actuel\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [theme, setTheme] = useState(LightTheme);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Charger les préférences de thème au démarrage\n  useEffect(() => {\n    const loadThemePreference = async () => {\n      try {\n        setIsLoading(true);\n        const themePreference = await AsyncStorage.getItem('themePreference');\n        \n        if (themePreference === 'dark') {\n          setIsDarkMode(true);\n          setTheme(DarkTheme);\n        } else {\n          setIsDarkMode(false);\n          setTheme(LightTheme);\n        }\n      } catch (error) {\n        console.error('Erreur lors du chargement des préférences de thème:', error);\n        // Par défaut, utiliser le thème clair\n        setIsDarkMode(false);\n        setTheme(LightTheme);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadThemePreference();\n  }, []);\n\n  // Fonction pour basculer entre les thèmes\n  const toggleTheme = async () => {\n    try {\n      const newIsDarkMode = !isDarkMode;\n      setIsDarkMode(newIsDarkMode);\n      setTheme(newIsDarkMode ? DarkTheme : LightTheme);\n      \n      // Sauvegarder la préférence\n      await AsyncStorage.setItem('themePreference', newIsDarkMode ? 'dark' : 'light');\n    } catch (error) {\n      console.error('Erreur lors de la sauvegarde des préférences de thème:', error);\n    }\n  };\n\n  // Fonction pour définir un thème spécifique\n  const setThemeMode = async (mode) => {\n    try {\n      const isDark = mode === 'dark';\n      setIsDarkMode(isDark);\n      setTheme(isDark ? DarkTheme : LightTheme);\n      \n      // Sauvegarder la préférence\n      await AsyncStorage.setItem('themePreference', mode);\n    } catch (error) {\n      console.error('Erreur lors de la sauvegarde des préférences de thème:', error);\n    }\n  };\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        theme,\n        isDarkMode,\n        toggleTheme,\n        setThemeMode,\n        isLoading\n      }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}