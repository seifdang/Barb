{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Text, Card, Title, Paragraph, Button, FAB, Avatar, ActivityIndicator, Chip, Modal, Portal, TextInput, Divider } from 'react-native-paper';\nimport { Calendar } from 'react-native-calendars';\nimport { format } from 'date-fns';\nimport { appointmentsApi } from \"../../api/client\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BarberDashboardScreen = function BarberDashboardScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(AuthContext),\n    userInfo = _useContext.userInfo;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    appointments = _useState4[0],\n    setAppointments = _useState4[1];\n  var _useState5 = useState(format(new Date(), 'yyyy-MM-dd')),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedDate = _useState6[0],\n    setSelectedDate = _useState6[1];\n  var _useState7 = useState({}),\n    _useState8 = _slicedToArray(_useState7, 2),\n    markedDates = _useState8[0],\n    setMarkedDates = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    dailySchedule = _useState10[0],\n    setDailySchedule = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    selectedAppointment = _useState12[0],\n    setSelectedAppointment = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    modalVisible = _useState14[0],\n    setModalVisible = _useState14[1];\n  var _useState15 = useState(''),\n    _useState16 = _slicedToArray(_useState15, 2),\n    modalAction = _useState16[0],\n    setModalAction = _useState16[1];\n  var _useState17 = useState(''),\n    _useState18 = _slicedToArray(_useState17, 2),\n    modalNote = _useState18[0],\n    setModalNote = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    swapModalVisible = _useState20[0],\n    setSwapModalVisible = _useState20[1];\n  var _useState21 = useState([]),\n    _useState22 = _slicedToArray(_useState21, 2),\n    availableSlots = _useState22[0],\n    setAvailableSlots = _useState22[1];\n  var _useState23 = useState(null),\n    _useState24 = _slicedToArray(_useState23, 2),\n    newTimeSlot = _useState24[0],\n    setNewTimeSlot = _useState24[1];\n  useEffect(function () {\n    fetchAppointments();\n    var unsubscribe = navigation.addListener('focus', fetchAppointments);\n    return unsubscribe;\n  }, [navigation]);\n  useEffect(function () {\n    if (appointments.length > 0) {\n      generateMarkedDates();\n      filterDailySchedule();\n    }\n  }, [appointments, selectedDate]);\n  var fetchAppointments = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var response = yield appointmentsApi.getUserAppointments();\n        if (response.data && response.data.appointments) {\n          setAppointments(response.data.appointments);\n        } else {\n          setAppointments([]);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching appointments:', error);\n        setLoading(false);\n        Alert.alert('Error', 'Failed to load appointments. Please try again.');\n      }\n    });\n    return function fetchAppointments() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var generateMarkedDates = function generateMarkedDates() {\n    var dates = {};\n    appointments.forEach(function (appointment) {\n      var dateStr = appointment.date.split('T')[0];\n      if (!dates[dateStr]) {\n        dates[dateStr] = {\n          marked: true,\n          dotColor: getStatusColor(appointment.status),\n          dots: [{\n            color: getStatusColor(appointment.status)\n          }]\n        };\n      } else {\n        dates[dateStr].dots.push({\n          color: getStatusColor(appointment.status)\n        });\n      }\n    });\n    if (dates[selectedDate]) {\n      dates[selectedDate] = _objectSpread(_objectSpread({}, dates[selectedDate]), {}, {\n        selected: true,\n        selectedColor: 'rgba(15, 76, 117, 0.2)'\n      });\n    } else {\n      dates[selectedDate] = {\n        selected: true,\n        selectedColor: 'rgba(15, 76, 117, 0.2)'\n      };\n    }\n    setMarkedDates(dates);\n  };\n  var filterDailySchedule = function filterDailySchedule() {\n    var dailyAppointments = appointments.filter(function (appointment) {\n      return appointment.date.split('T')[0] === selectedDate;\n    });\n    dailyAppointments.sort(function (a, b) {\n      var _a$startTime$split$ma = a.startTime.split(':').map(Number),\n        _a$startTime$split$ma2 = _slicedToArray(_a$startTime$split$ma, 2),\n        aHour = _a$startTime$split$ma2[0],\n        aMinute = _a$startTime$split$ma2[1];\n      var _b$startTime$split$ma = b.startTime.split(':').map(Number),\n        _b$startTime$split$ma2 = _slicedToArray(_b$startTime$split$ma, 2),\n        bHour = _b$startTime$split$ma2[0],\n        bMinute = _b$startTime$split$ma2[1];\n      return aHour * 60 + aMinute - (bHour * 60 + bMinute);\n    });\n    var schedule = [];\n    for (var hour = 9; hour < 18; hour++) {\n      var _loop = function _loop() {\n        var timeString = hour.toString().padStart(2, '0') + \":\" + minute.toString().padStart(2, '0');\n        var endHour = minute === 30 ? hour + 1 : hour;\n        var endMinute = minute === 30 ? 0 : 30;\n        var endTimeString = endHour.toString().padStart(2, '0') + \":\" + endMinute.toString().padStart(2, '0');\n        var appointment = dailyAppointments.find(function (appt) {\n          return appt.startTime === timeString;\n        });\n        schedule.push({\n          time: timeString,\n          endTime: endTimeString,\n          appointment: appointment || null,\n          status: appointment ? appointment.status : 'free'\n        });\n      };\n      for (var minute of [0, 30]) {\n        _loop();\n      }\n    }\n    setDailySchedule(schedule);\n    setAvailableSlots(schedule.filter(function (slot) {\n      return slot.status === 'free';\n    }).map(function (slot) {\n      return {\n        startTime: slot.time,\n        endTime: slot.endTime\n      };\n    }));\n  };\n  var getStatusColor = function getStatusColor(status) {\n    switch (status) {\n      case 'confirmed':\n        return '#4CAF50';\n      case 'pending':\n        return '#FFC107';\n      case 'completed':\n        return '#3282B8';\n      case 'cancelled':\n        return '#F44336';\n      case 'no-show':\n        return '#9C27B0';\n      default:\n        return '#757575';\n    }\n  };\n  var handleDateSelect = function handleDateSelect(date) {\n    setSelectedDate(date.dateString);\n  };\n  var openAppointmentActions = function openAppointmentActions(appointment) {\n    setSelectedAppointment(appointment);\n    setModalVisible(true);\n    setModalAction('');\n    setModalNote('');\n  };\n  var handleActionSelect = function handleActionSelect(action) {\n    setModalAction(action);\n  };\n  var handleAppointmentAction = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (!selectedAppointment || !modalAction) return;\n      try {\n        setLoading(true);\n        setModalVisible(false);\n        var response;\n        switch (modalAction) {\n          case 'complete':\n            response = yield appointmentsApi.updateAppointment(selectedAppointment._id, {\n              status: 'completed',\n              notes: modalNote\n            });\n            if (response.data && response.data.success) {\n              Alert.alert('Success', 'Appointment marked as completed');\n            }\n            break;\n          case 'cancel':\n            response = yield appointmentsApi.cancelAppointment(selectedAppointment._id, {\n              cancellationReason: modalNote\n            });\n            if (response.data && response.data.success) {\n              Alert.alert('Success', 'Appointment cancelled successfully');\n            }\n            break;\n          case 'noshow':\n            response = yield appointmentsApi.updateAppointment(selectedAppointment._id, {\n              status: 'no-show',\n              notes: modalNote\n            });\n            if (response.data && response.data.success) {\n              Alert.alert('Success', 'Appointment marked as no-show');\n            }\n            break;\n          case 'swap':\n            setSwapModalVisible(true);\n            setModalVisible(false);\n            return;\n        }\n        yield fetchAppointments();\n        setLoading(false);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error('Error updating appointment:', error);\n        setLoading(false);\n        Alert.alert('Error', ((_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.message) || 'Failed to update appointment');\n      }\n    });\n    return function handleAppointmentAction() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleTimeSwap = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (!selectedAppointment || !newTimeSlot) return;\n      try {\n        setLoading(true);\n        setSwapModalVisible(false);\n        var response = yield appointmentsApi.updateAppointment(selectedAppointment._id, {\n          startTime: newTimeSlot.startTime,\n          endTime: newTimeSlot.endTime,\n          notes: \"Time changed from \" + selectedAppointment.startTime + \"-\" + selectedAppointment.endTime + \" to \" + newTimeSlot.startTime + \"-\" + newTimeSlot.endTime\n        });\n        if (response.data && response.data.success) {\n          Alert.alert('Success', 'Appointment time updated successfully');\n          yield fetchAppointments();\n        } else {\n          Alert.alert('Error', 'Failed to update appointment time');\n        }\n        setNewTimeSlot(null);\n        setLoading(false);\n      } catch (error) {\n        var _error$response2, _error$response2$data;\n        console.error('Error updating appointment time:', error);\n        setLoading(false);\n        Alert.alert('Error', ((_error$response2 = error.response) == null ? void 0 : (_error$response2$data = _error$response2.data) == null ? void 0 : _error$response2$data.message) || 'Failed to update appointment time');\n      }\n    });\n    return function handleTimeSwap() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var renderTimeSlot = function renderTimeSlot(slot, index) {\n    var isCurrent = function isCurrent() {\n      var now = new Date();\n      var today = format(now, 'yyyy-MM-dd');\n      if (selectedDate !== today) return false;\n      var currentHour = now.getHours();\n      var currentMinute = now.getMinutes();\n      var _slot$time$split$map = slot.time.split(':').map(Number),\n        _slot$time$split$map2 = _slicedToArray(_slot$time$split$map, 2),\n        slotHour = _slot$time$split$map2[0],\n        slotMinute = _slot$time$split$map2[1];\n      var _slot$endTime$split$m = slot.endTime.split(':').map(Number),\n        _slot$endTime$split$m2 = _slicedToArray(_slot$endTime$split$m, 2),\n        endHour = _slot$endTime$split$m2[0],\n        endMinute = _slot$endTime$split$m2[1];\n      return (currentHour > slotHour || currentHour === slotHour && currentMinute >= slotMinute) && (currentHour < endHour || currentHour === endHour && currentMinute < endMinute);\n    };\n    return _jsxs(View, {\n      style: [styles.timeSlot, isCurrent() && styles.currentTimeSlot],\n      children: [_jsx(View, {\n        style: styles.timeColumn,\n        children: _jsx(Text, {\n          style: styles.timeText,\n          children: slot.time\n        })\n      }), _jsx(View, {\n        style: [styles.appointmentColumn, {\n          backgroundColor: slot.appointment ? getStatusColor(slot.appointment.status) + '30' : 'transparent'\n        }],\n        children: slot.appointment ? _jsxs(TouchableOpacity, {\n          style: styles.appointmentCard,\n          onPress: function onPress() {\n            return openAppointmentActions(slot.appointment);\n          },\n          children: [_jsxs(View, {\n            style: styles.appointmentHeader,\n            children: [_jsx(Text, {\n              style: styles.customerName,\n              children: slot.appointment.customer.name\n            }), _jsx(Chip, {\n              style: [styles.statusChip, {\n                backgroundColor: getStatusColor(slot.appointment.status)\n              }],\n              textStyle: styles.statusChipText,\n              children: slot.appointment.status.toUpperCase()\n            })]\n          }), _jsx(Text, {\n            style: styles.serviceText,\n            children: slot.appointment.service.name\n          }), _jsxs(Text, {\n            style: styles.priceText,\n            children: [\"$\", slot.appointment.service.price]\n          })]\n        }) : _jsx(View, {\n          style: styles.emptySlot,\n          children: _jsx(Text, {\n            style: styles.emptySlotText,\n            children: \"Free\"\n          })\n        })\n      })]\n    }, index);\n  };\n  if (loading && appointments.length === 0) {\n    return _jsxs(View, {\n      style: styles.centered,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#0F4C75\"\n      }), _jsx(Text, {\n        style: {\n          marginTop: 20\n        },\n        children: \"Loading your schedule...\"\n      })]\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.headerTitle,\n        children: \"Barber Dashboard\"\n      }), _jsxs(Text, {\n        style: styles.headerSubtitle,\n        children: [\"Welcome, \", userInfo == null ? void 0 : userInfo.name]\n      })]\n    }), _jsxs(ScrollView, {\n      style: styles.content,\n      children: [_jsx(View, {\n        style: styles.calendarContainer,\n        children: _jsx(Calendar, {\n          markingType: 'multi-dot',\n          markedDates: markedDates,\n          onDayPress: handleDateSelect,\n          theme: {\n            todayTextColor: '#0F4C75',\n            arrowColor: '#0F4C75'\n          }\n        })\n      }), _jsxs(View, {\n        style: styles.scheduleContainer,\n        children: [_jsxs(Text, {\n          style: styles.scheduleTitle,\n          children: [\"Schedule for \", format(new Date(selectedDate), 'MMMM d, yyyy')]\n        }), dailySchedule.length > 0 ? _jsx(View, {\n          style: styles.scheduleGrid,\n          children: dailySchedule.map(function (slot, index) {\n            return renderTimeSlot(slot, index);\n          })\n        }) : _jsx(View, {\n          style: styles.emptySchedule,\n          children: _jsx(Text, {\n            style: styles.emptyText,\n            children: \"No appointments scheduled for this day.\"\n          })\n        })]\n      })]\n    }), _jsx(FAB, {\n      style: styles.fab,\n      icon: \"refresh\",\n      onPress: fetchAppointments\n    }), _jsx(Portal, {\n      children: _jsxs(Modal, {\n        visible: modalVisible,\n        onDismiss: function onDismiss() {\n          return setModalVisible(false);\n        },\n        contentContainerStyle: styles.modalContent,\n        children: [_jsx(Title, {\n          style: styles.modalTitle,\n          children: \"Appointment Actions\"\n        }), selectedAppointment && _jsxs(View, {\n          style: styles.appointmentDetails,\n          children: [_jsxs(Text, {\n            style: styles.appointmentDetail,\n            children: [_jsx(Text, {\n              style: styles.detailLabel,\n              children: \"Customer: \"\n            }), selectedAppointment.customer.name]\n          }), _jsxs(Text, {\n            style: styles.appointmentDetail,\n            children: [_jsx(Text, {\n              style: styles.detailLabel,\n              children: \"Service: \"\n            }), selectedAppointment.service.name]\n          }), _jsxs(Text, {\n            style: styles.appointmentDetail,\n            children: [_jsx(Text, {\n              style: styles.detailLabel,\n              children: \"Time: \"\n            }), selectedAppointment.startTime, \" - \", selectedAppointment.endTime]\n          }), _jsxs(Text, {\n            style: styles.appointmentDetail,\n            children: [_jsx(Text, {\n              style: styles.detailLabel,\n              children: \"Status: \"\n            }), selectedAppointment.status.toUpperCase()]\n          })]\n        }), _jsx(Divider, {\n          style: styles.divider\n        }), _jsxs(View, {\n          style: styles.actionButtons,\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.actionButton, modalAction === 'complete' && styles.actionButtonSelected],\n            onPress: function onPress() {\n              return handleActionSelect('complete');\n            },\n            children: _jsx(Text, {\n              style: styles.actionButtonText,\n              children: \"Complete\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.actionButton, modalAction === 'cancel' && styles.actionButtonSelected],\n            onPress: function onPress() {\n              return handleActionSelect('cancel');\n            },\n            children: _jsx(Text, {\n              style: styles.actionButtonText,\n              children: \"Cancel\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.actionButton, modalAction === 'noshow' && styles.actionButtonSelected],\n            onPress: function onPress() {\n              return handleActionSelect('noshow');\n            },\n            children: _jsx(Text, {\n              style: styles.actionButtonText,\n              children: \"No-Show\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.actionButton, modalAction === 'swap' && styles.actionButtonSelected],\n            onPress: function onPress() {\n              return handleActionSelect('swap');\n            },\n            children: _jsx(Text, {\n              style: styles.actionButtonText,\n              children: \"Change Time\"\n            })\n          })]\n        }), modalAction && modalAction !== 'swap' && _jsx(TextInput, {\n          label: modalAction === 'complete' ? 'Notes (optional)' : modalAction === 'cancel' ? 'Cancellation Reason' : 'No-Show Notes',\n          value: modalNote,\n          onChangeText: setModalNote,\n          style: styles.noteInput,\n          multiline: true\n        }), _jsxs(View, {\n          style: styles.modalActions,\n          children: [_jsx(Button, {\n            onPress: function onPress() {\n              return setModalVisible(false);\n            },\n            style: styles.modalButton,\n            children: \"Cancel\"\n          }), _jsx(Button, {\n            mode: \"contained\",\n            onPress: handleAppointmentAction,\n            disabled: modalAction === 'cancel' && !modalNote,\n            style: styles.modalButton,\n            children: \"Confirm\"\n          })]\n        })]\n      })\n    }), _jsx(Portal, {\n      children: _jsxs(Modal, {\n        visible: swapModalVisible,\n        onDismiss: function onDismiss() {\n          return setSwapModalVisible(false);\n        },\n        contentContainerStyle: styles.modalContent,\n        children: [_jsx(Title, {\n          style: styles.modalTitle,\n          children: \"Select New Time\"\n        }), availableSlots.length > 0 ? _jsx(ScrollView, {\n          style: styles.timeSlotsContainer,\n          children: availableSlots.map(function (slot, index) {\n            return _jsx(TouchableOpacity, {\n              style: [styles.timeSlotButton, newTimeSlot && newTimeSlot.startTime === slot.startTime && styles.selectedTimeSlot],\n              onPress: function onPress() {\n                return setNewTimeSlot(slot);\n              },\n              children: _jsxs(Text, {\n                style: styles.timeSlotButtonText,\n                children: [slot.startTime, \" - \", slot.endTime]\n              })\n            }, index);\n          })\n        }) : _jsx(Text, {\n          style: styles.noSlotsText,\n          children: \"No available time slots for this day.\"\n        }), _jsxs(View, {\n          style: styles.modalActions,\n          children: [_jsx(Button, {\n            onPress: function onPress() {\n              return setSwapModalVisible(false);\n            },\n            style: styles.modalButton,\n            children: \"Cancel\"\n          }), _jsx(Button, {\n            mode: \"contained\",\n            onPress: handleTimeSwap,\n            disabled: !newTimeSlot,\n            style: styles.modalButton,\n            children: \"Change Time\"\n          })]\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  header: {\n    backgroundColor: '#0F4C75',\n    padding: 20,\n    paddingTop: 50,\n    paddingBottom: 20\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  headerSubtitle: {\n    fontSize: 16,\n    color: '#BBE1FA',\n    marginTop: 5\n  },\n  content: {\n    flex: 1\n  },\n  calendarContainer: _objectSpread({\n    margin: 10,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    overflow: 'hidden'\n  }, Platform.select({\n    ios: {\n      shadowColor: '#000',\n      shadowOffset: {\n        width: 0,\n        height: 2\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 4\n    },\n    android: {\n      elevation: 3\n    }\n  })),\n  scheduleContainer: _objectSpread({\n    margin: 10,\n    marginTop: 5,\n    padding: 15,\n    backgroundColor: 'white',\n    borderRadius: 10\n  }, Platform.select({\n    ios: {\n      shadowColor: '#000',\n      shadowOffset: {\n        width: 0,\n        height: 2\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 4\n    },\n    android: {\n      elevation: 3\n    }\n  })),\n  scheduleTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    color: '#1B262C'\n  },\n  scheduleGrid: {\n    marginTop: 5\n  },\n  timeSlot: {\n    flexDirection: 'row',\n    marginBottom: 10,\n    height: 80\n  },\n  currentTimeSlot: {\n    borderLeftWidth: 3,\n    borderLeftColor: '#0F4C75'\n  },\n  timeColumn: {\n    width: 60,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#f0f0f0',\n    borderRadius: 5\n  },\n  timeText: {\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  appointmentColumn: {\n    flex: 1,\n    marginLeft: 10,\n    borderRadius: 5,\n    padding: 10,\n    justifyContent: 'center'\n  },\n  appointmentCard: {\n    padding: 5\n  },\n  appointmentHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 5\n  },\n  customerName: {\n    fontSize: 14,\n    fontWeight: 'bold'\n  },\n  serviceText: {\n    fontSize: 12\n  },\n  priceText: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    marginTop: 5\n  },\n  statusChip: {\n    height: 20,\n    paddingHorizontal: 5\n  },\n  statusChipText: {\n    fontSize: 8,\n    color: 'white'\n  },\n  emptySlot: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%'\n  },\n  emptySlotText: {\n    color: '#757575',\n    fontStyle: 'italic'\n  },\n  emptySchedule: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 30\n  },\n  emptyText: {\n    color: '#757575',\n    textAlign: 'center'\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n    backgroundColor: '#0F4C75'\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 20,\n    borderRadius: 10\n  },\n  modalTitle: {\n    textAlign: 'center',\n    marginBottom: 15\n  },\n  appointmentDetails: {\n    marginBottom: 15\n  },\n  appointmentDetail: {\n    marginBottom: 5\n  },\n  detailLabel: {\n    fontWeight: 'bold'\n  },\n  divider: {\n    marginVertical: 10\n  },\n  actionButtons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    marginVertical: 10\n  },\n  actionButton: {\n    width: '48%',\n    padding: 10,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: '#0F4C75',\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  actionButtonSelected: {\n    backgroundColor: '#0F4C75'\n  },\n  actionButtonText: {\n    color: '#0F4C75'\n  },\n  noteInput: {\n    marginTop: 10,\n    marginBottom: 20\n  },\n  modalActions: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  modalButton: {\n    flex: 1,\n    marginHorizontal: 5\n  },\n  timeSlotsContainer: {\n    maxHeight: 300,\n    marginVertical: 10\n  },\n  timeSlotButton: {\n    padding: 15,\n    marginVertical: 5,\n    backgroundColor: '#f0f0f0',\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  selectedTimeSlot: {\n    backgroundColor: '#BBE1FA',\n    borderWidth: 1,\n    borderColor: '#0F4C75'\n  },\n  timeSlotButtonText: {\n    fontSize: 16\n  },\n  noSlotsText: {\n    textAlign: 'center',\n    margin: 20,\n    color: '#757575'\n  }\n});\nexport default BarberDashboardScreen;","map":{"version":3,"names":["React","useState","useEffect","useContext","View","StyleSheet","ScrollView","TouchableOpacity","Alert","Platform","Text","Card","Title","Paragraph","Button","FAB","Avatar","ActivityIndicator","Chip","Modal","Portal","TextInput","Divider","Calendar","format","appointmentsApi","AuthContext","jsx","_jsx","jsxs","_jsxs","BarberDashboardScreen","_ref","navigation","_useContext","userInfo","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","appointments","setAppointments","_useState5","Date","_useState6","selectedDate","setSelectedDate","_useState7","_useState8","markedDates","setMarkedDates","_useState9","_useState10","dailySchedule","setDailySchedule","_useState11","_useState12","selectedAppointment","setSelectedAppointment","_useState13","_useState14","modalVisible","setModalVisible","_useState15","_useState16","modalAction","setModalAction","_useState17","_useState18","modalNote","setModalNote","_useState19","_useState20","swapModalVisible","setSwapModalVisible","_useState21","_useState22","availableSlots","setAvailableSlots","_useState23","_useState24","newTimeSlot","setNewTimeSlot","fetchAppointments","unsubscribe","addListener","length","generateMarkedDates","filterDailySchedule","_ref2","_asyncToGenerator","response","getUserAppointments","data","error","console","alert","apply","arguments","dates","forEach","appointment","dateStr","date","split","marked","dotColor","getStatusColor","status","dots","color","push","_objectSpread","selected","selectedColor","dailyAppointments","filter","sort","a","b","_a$startTime$split$ma","startTime","map","Number","_a$startTime$split$ma2","aHour","aMinute","_b$startTime$split$ma","_b$startTime$split$ma2","bHour","bMinute","schedule","hour","_loop","timeString","toString","padStart","minute","endHour","endMinute","endTimeString","find","appt","time","endTime","slot","handleDateSelect","dateString","openAppointmentActions","handleActionSelect","action","handleAppointmentAction","_ref3","updateAppointment","_id","notes","success","cancelAppointment","cancellationReason","_error$response","_error$response$data","message","handleTimeSwap","_ref4","_error$response2","_error$response2$data","renderTimeSlot","index","isCurrent","now","today","currentHour","getHours","currentMinute","getMinutes","_slot$time$split$map","_slot$time$split$map2","slotHour","slotMinute","_slot$endTime$split$m","_slot$endTime$split$m2","style","styles","timeSlot","currentTimeSlot","children","timeColumn","timeText","appointmentColumn","backgroundColor","appointmentCard","onPress","appointmentHeader","customerName","customer","name","statusChip","textStyle","statusChipText","toUpperCase","serviceText","service","priceText","price","emptySlot","emptySlotText","centered","size","marginTop","container","header","headerTitle","headerSubtitle","content","calendarContainer","markingType","onDayPress","theme","todayTextColor","arrowColor","scheduleContainer","scheduleTitle","scheduleGrid","emptySchedule","emptyText","fab","icon","visible","onDismiss","contentContainerStyle","modalContent","modalTitle","appointmentDetails","appointmentDetail","detailLabel","divider","actionButtons","actionButton","actionButtonSelected","actionButtonText","label","value","onChangeText","noteInput","multiline","modalActions","modalButton","mode","disabled","timeSlotsContainer","timeSlotButton","selectedTimeSlot","timeSlotButtonText","noSlotsText","create","flex","justifyContent","alignItems","padding","paddingTop","paddingBottom","fontSize","fontWeight","margin","borderRadius","overflow","select","ios","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","android","elevation","marginBottom","flexDirection","borderLeftWidth","borderLeftColor","marginLeft","paddingHorizontal","fontStyle","textAlign","position","right","bottom","marginVertical","flexWrap","borderWidth","borderColor","marginHorizontal","maxHeight"],"sources":["C:/Users/User/Downloads/mobile/screens/barber/BarberDashboardScreen.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, StyleSheet, ScrollView, TouchableOpacity, Alert, Platform } from 'react-native';\r\nimport { Text, Card, Title, Paragraph, Button, FAB, Avatar, ActivityIndicator, Chip, Modal, Portal, TextInput, Divider } from 'react-native-paper';\r\nimport { Calendar } from 'react-native-calendars';\r\nimport { format } from 'date-fns';\r\nimport { appointmentsApi } from '../../api/client';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst BarberDashboardScreen = ({ navigation }) => {\r\n  const { userInfo } = useContext(AuthContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(format(new Date(), 'yyyy-MM-dd'));\r\n  const [markedDates, setMarkedDates] = useState({});\r\n  const [dailySchedule, setDailySchedule] = useState([]);\r\n  \r\n  // Modal states\r\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [modalAction, setModalAction] = useState('');\r\n  const [modalNote, setModalNote] = useState('');\r\n  const [swapModalVisible, setSwapModalVisible] = useState(false);\r\n  const [availableSlots, setAvailableSlots] = useState([]);\r\n  const [newTimeSlot, setNewTimeSlot] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchAppointments();\r\n    \r\n    // Refresh when screen is focused\r\n    const unsubscribe = navigation.addListener('focus', fetchAppointments);\r\n    return unsubscribe;\r\n  }, [navigation]);\r\n  \r\n  useEffect(() => {\r\n    if (appointments.length > 0) {\r\n      generateMarkedDates();\r\n      filterDailySchedule();\r\n    }\r\n  }, [appointments, selectedDate]);\r\n  \r\n  const fetchAppointments = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const response = await appointmentsApi.getUserAppointments();\r\n      \r\n      if (response.data && response.data.appointments) {\r\n        setAppointments(response.data.appointments);\r\n      } else {\r\n        setAppointments([]);\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching appointments:', error);\r\n      setLoading(false);\r\n      Alert.alert('Error', 'Failed to load appointments. Please try again.');\r\n    }\r\n  };\r\n  \r\n  const generateMarkedDates = () => {\r\n    const dates = {};\r\n    \r\n    // Group appointments by date\r\n    appointments.forEach(appointment => {\r\n      const dateStr = appointment.date.split('T')[0];\r\n      \r\n      if (!dates[dateStr]) {\r\n        dates[dateStr] = {\r\n          marked: true,\r\n          dotColor: getStatusColor(appointment.status),\r\n          dots: [{ color: getStatusColor(appointment.status) }]\r\n        };\r\n      } else {\r\n        // Add another dot if the date already exists\r\n        dates[dateStr].dots.push({ color: getStatusColor(appointment.status) });\r\n      }\r\n    });\r\n    \r\n    // Highlight selected date\r\n    if (dates[selectedDate]) {\r\n      dates[selectedDate] = {\r\n        ...dates[selectedDate],\r\n        selected: true,\r\n        selectedColor: 'rgba(15, 76, 117, 0.2)'  // Semi-transparent primary color\r\n      };\r\n    } else {\r\n      dates[selectedDate] = {\r\n        selected: true,\r\n        selectedColor: 'rgba(15, 76, 117, 0.2)'\r\n      };\r\n    }\r\n    \r\n    setMarkedDates(dates);\r\n  };\r\n  \r\n  const filterDailySchedule = () => {\r\n    // Filter appointments for the selected date\r\n    const dailyAppointments = appointments.filter(\r\n      appointment => appointment.date.split('T')[0] === selectedDate\r\n    );\r\n    \r\n    // Sort by start time\r\n    dailyAppointments.sort((a, b) => {\r\n      const [aHour, aMinute] = a.startTime.split(':').map(Number);\r\n      const [bHour, bMinute] = b.startTime.split(':').map(Number);\r\n      return (aHour * 60 + aMinute) - (bHour * 60 + bMinute);\r\n    });\r\n    \r\n    // Create full day schedule with 30-minute slots (9am-6pm)\r\n    const schedule = [];\r\n    \r\n    for (let hour = 9; hour < 18; hour++) {\r\n      for (let minute of [0, 30]) {\r\n        const timeString = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\r\n        const endHour = minute === 30 ? hour + 1 : hour;\r\n        const endMinute = minute === 30 ? 0 : 30;\r\n        const endTimeString = `${endHour.toString().padStart(2, '0')}:${endMinute.toString().padStart(2, '0')}`;\r\n        \r\n        // Find appointment for this time slot\r\n        const appointment = dailyAppointments.find(\r\n          appt => appt.startTime === timeString\r\n        );\r\n        \r\n        schedule.push({\r\n          time: timeString,\r\n          endTime: endTimeString,\r\n          appointment: appointment || null,\r\n          status: appointment ? appointment.status : 'free'\r\n        });\r\n      }\r\n    }\r\n    \r\n    setDailySchedule(schedule);\r\n    \r\n    // Also update available slots for potential appointment changes\r\n    setAvailableSlots(\r\n      schedule.filter(slot => slot.status === 'free').map(slot => ({\r\n        startTime: slot.time,\r\n        endTime: slot.endTime\r\n      }))\r\n    );\r\n  };\r\n  \r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'confirmed': return '#4CAF50';  // Green\r\n      case 'pending': return '#FFC107';    // Yellow\r\n      case 'completed': return '#3282B8';  // Blue\r\n      case 'cancelled': return '#F44336';  // Red\r\n      case 'no-show': return '#9C27B0';    // Purple\r\n      default: return '#757575';           // Grey\r\n    }\r\n  };\r\n  \r\n  const handleDateSelect = (date) => {\r\n    setSelectedDate(date.dateString);\r\n  };\r\n  \r\n  const openAppointmentActions = (appointment) => {\r\n    setSelectedAppointment(appointment);\r\n    setModalVisible(true);\r\n    setModalAction('');\r\n    setModalNote('');\r\n  };\r\n  \r\n  const handleActionSelect = (action) => {\r\n    setModalAction(action);\r\n  };\r\n  \r\n  const handleAppointmentAction = async () => {\r\n    if (!selectedAppointment || !modalAction) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setModalVisible(false);\r\n      \r\n      let response;\r\n      \r\n      switch (modalAction) {\r\n        case 'complete':\r\n          response = await appointmentsApi.updateAppointment(\r\n            selectedAppointment._id,\r\n            {\r\n              status: 'completed',\r\n              notes: modalNote\r\n            }\r\n          );\r\n          \r\n          if (response.data && response.data.success) {\r\n            Alert.alert('Success', 'Appointment marked as completed');\r\n          }\r\n          break;\r\n          \r\n        case 'cancel':\r\n          response = await appointmentsApi.cancelAppointment(\r\n            selectedAppointment._id,\r\n            { cancellationReason: modalNote }\r\n          );\r\n          \r\n          if (response.data && response.data.success) {\r\n            Alert.alert('Success', 'Appointment cancelled successfully');\r\n          }\r\n          break;\r\n          \r\n        case 'noshow':\r\n          response = await appointmentsApi.updateAppointment(\r\n            selectedAppointment._id,\r\n            {\r\n              status: 'no-show',\r\n              notes: modalNote\r\n            }\r\n          );\r\n          \r\n          if (response.data && response.data.success) {\r\n            Alert.alert('Success', 'Appointment marked as no-show');\r\n          }\r\n          break;\r\n          \r\n        case 'swap':\r\n          setSwapModalVisible(true);\r\n          setModalVisible(false);\r\n          return;\r\n      }\r\n      \r\n      await fetchAppointments();\r\n      setLoading(false);\r\n      \r\n    } catch (error) {\r\n      console.error('Error updating appointment:', error);\r\n      setLoading(false);\r\n      Alert.alert('Error', error.response?.data?.message || 'Failed to update appointment');\r\n    }\r\n  };\r\n  \r\n  const handleTimeSwap = async () => {\r\n    if (!selectedAppointment || !newTimeSlot) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setSwapModalVisible(false);\r\n      \r\n      const response = await appointmentsApi.updateAppointment(\r\n        selectedAppointment._id,\r\n        {\r\n          startTime: newTimeSlot.startTime,\r\n          endTime: newTimeSlot.endTime,\r\n          notes: `Time changed from ${selectedAppointment.startTime}-${selectedAppointment.endTime} to ${newTimeSlot.startTime}-${newTimeSlot.endTime}`\r\n        }\r\n      );\r\n      \r\n      if (response.data && response.data.success) {\r\n        Alert.alert('Success', 'Appointment time updated successfully');\r\n        await fetchAppointments();\r\n      } else {\r\n        Alert.alert('Error', 'Failed to update appointment time');\r\n      }\r\n      \r\n      setNewTimeSlot(null);\r\n      setLoading(false);\r\n      \r\n    } catch (error) {\r\n      console.error('Error updating appointment time:', error);\r\n      setLoading(false);\r\n      Alert.alert('Error', error.response?.data?.message || 'Failed to update appointment time');\r\n    }\r\n  };\r\n  \r\n  const renderTimeSlot = (slot, index) => {\r\n    const isCurrent = () => {\r\n      const now = new Date();\r\n      const today = format(now, 'yyyy-MM-dd');\r\n      \r\n      if (selectedDate !== today) return false;\r\n      \r\n      const currentHour = now.getHours();\r\n      const currentMinute = now.getMinutes();\r\n      const [slotHour, slotMinute] = slot.time.split(':').map(Number);\r\n      const [endHour, endMinute] = slot.endTime.split(':').map(Number);\r\n      \r\n      return (\r\n        (currentHour > slotHour || (currentHour === slotHour && currentMinute >= slotMinute)) &&\r\n        (currentHour < endHour || (currentHour === endHour && currentMinute < endMinute))\r\n      );\r\n    };\r\n    \r\n    return (\r\n      <View key={index} style={[\r\n        styles.timeSlot,\r\n        isCurrent() && styles.currentTimeSlot\r\n      ]}>\r\n        <View style={styles.timeColumn}>\r\n          <Text style={styles.timeText}>{slot.time}</Text>\r\n        </View>\r\n        \r\n        <View style={[\r\n          styles.appointmentColumn,\r\n          { backgroundColor: slot.appointment ? getStatusColor(slot.appointment.status) + '30' : 'transparent' }\r\n        ]}>\r\n          {slot.appointment ? (\r\n            <TouchableOpacity \r\n              style={styles.appointmentCard} \r\n              onPress={() => openAppointmentActions(slot.appointment)}\r\n            >\r\n              <View style={styles.appointmentHeader}>\r\n                <Text style={styles.customerName}>{slot.appointment.customer.name}</Text>\r\n                <Chip \r\n                  style={[styles.statusChip, { backgroundColor: getStatusColor(slot.appointment.status) }]}\r\n                  textStyle={styles.statusChipText}\r\n                >\r\n                  {slot.appointment.status.toUpperCase()}\r\n                </Chip>\r\n              </View>\r\n              <Text style={styles.serviceText}>{slot.appointment.service.name}</Text>\r\n              <Text style={styles.priceText}>${slot.appointment.service.price}</Text>\r\n            </TouchableOpacity>\r\n          ) : (\r\n            <View style={styles.emptySlot}>\r\n              <Text style={styles.emptySlotText}>Free</Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n  \r\n  if (loading && appointments.length === 0) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n        <Text style={{ marginTop: 20 }}>Loading your schedule...</Text>\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Barber Dashboard</Text>\r\n        <Text style={styles.headerSubtitle}>Welcome, {userInfo?.name}</Text>\r\n      </View>\r\n      \r\n      <ScrollView style={styles.content}>\r\n        {/* Calendar */}\r\n        <View style={styles.calendarContainer}>\r\n          <Calendar\r\n            markingType={'multi-dot'}\r\n            markedDates={markedDates}\r\n            onDayPress={handleDateSelect}\r\n            theme={{\r\n              todayTextColor: '#0F4C75',\r\n              arrowColor: '#0F4C75',\r\n            }}\r\n          />\r\n        </View>\r\n        \r\n        {/* Daily Schedule */}\r\n        <View style={styles.scheduleContainer}>\r\n          <Text style={styles.scheduleTitle}>\r\n            Schedule for {format(new Date(selectedDate), 'MMMM d, yyyy')}\r\n          </Text>\r\n          \r\n          {dailySchedule.length > 0 ? (\r\n            <View style={styles.scheduleGrid}>\r\n              {dailySchedule.map((slot, index) => renderTimeSlot(slot, index))}\r\n            </View>\r\n          ) : (\r\n            <View style={styles.emptySchedule}>\r\n              <Text style={styles.emptyText}>No appointments scheduled for this day.</Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n      </ScrollView>\r\n      \r\n      <FAB\r\n        style={styles.fab}\r\n        icon=\"refresh\"\r\n        onPress={fetchAppointments}\r\n      />\r\n      \r\n      {/* Appointment Actions Modal */}\r\n      <Portal>\r\n        <Modal\r\n          visible={modalVisible}\r\n          onDismiss={() => setModalVisible(false)}\r\n          contentContainerStyle={styles.modalContent}\r\n        >\r\n          <Title style={styles.modalTitle}>Appointment Actions</Title>\r\n          \r\n          {selectedAppointment && (\r\n            <View style={styles.appointmentDetails}>\r\n              <Text style={styles.appointmentDetail}>\r\n                <Text style={styles.detailLabel}>Customer: </Text>\r\n                {selectedAppointment.customer.name}\r\n              </Text>\r\n              <Text style={styles.appointmentDetail}>\r\n                <Text style={styles.detailLabel}>Service: </Text>\r\n                {selectedAppointment.service.name}\r\n              </Text>\r\n              <Text style={styles.appointmentDetail}>\r\n                <Text style={styles.detailLabel}>Time: </Text>\r\n                {selectedAppointment.startTime} - {selectedAppointment.endTime}\r\n              </Text>\r\n              <Text style={styles.appointmentDetail}>\r\n                <Text style={styles.detailLabel}>Status: </Text>\r\n                {selectedAppointment.status.toUpperCase()}\r\n              </Text>\r\n            </View>\r\n          )}\r\n          \r\n          <Divider style={styles.divider} />\r\n          \r\n          <View style={styles.actionButtons}>\r\n            <TouchableOpacity \r\n              style={[\r\n                styles.actionButton, \r\n                modalAction === 'complete' && styles.actionButtonSelected\r\n              ]}\r\n              onPress={() => handleActionSelect('complete')}\r\n            >\r\n              <Text style={styles.actionButtonText}>Complete</Text>\r\n            </TouchableOpacity>\r\n            \r\n            <TouchableOpacity \r\n              style={[\r\n                styles.actionButton, \r\n                modalAction === 'cancel' && styles.actionButtonSelected\r\n              ]}\r\n              onPress={() => handleActionSelect('cancel')}\r\n            >\r\n              <Text style={styles.actionButtonText}>Cancel</Text>\r\n            </TouchableOpacity>\r\n            \r\n            <TouchableOpacity \r\n              style={[\r\n                styles.actionButton, \r\n                modalAction === 'noshow' && styles.actionButtonSelected\r\n              ]}\r\n              onPress={() => handleActionSelect('noshow')}\r\n            >\r\n              <Text style={styles.actionButtonText}>No-Show</Text>\r\n            </TouchableOpacity>\r\n            \r\n            <TouchableOpacity \r\n              style={[\r\n                styles.actionButton, \r\n                modalAction === 'swap' && styles.actionButtonSelected\r\n              ]}\r\n              onPress={() => handleActionSelect('swap')}\r\n            >\r\n              <Text style={styles.actionButtonText}>Change Time</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          \r\n          {modalAction && modalAction !== 'swap' && (\r\n            <TextInput\r\n              label={\r\n                modalAction === 'complete' ? 'Notes (optional)' :\r\n                modalAction === 'cancel' ? 'Cancellation Reason' : 'No-Show Notes'\r\n              }\r\n              value={modalNote}\r\n              onChangeText={setModalNote}\r\n              style={styles.noteInput}\r\n              multiline\r\n            />\r\n          )}\r\n          \r\n          <View style={styles.modalActions}>\r\n            <Button onPress={() => setModalVisible(false)} style={styles.modalButton}>\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              mode=\"contained\" \r\n              onPress={handleAppointmentAction}\r\n              disabled={modalAction === 'cancel' && !modalNote}\r\n              style={styles.modalButton}\r\n            >\r\n              Confirm\r\n            </Button>\r\n          </View>\r\n        </Modal>\r\n      </Portal>\r\n      \r\n      {/* Swap Time Modal */}\r\n      <Portal>\r\n        <Modal\r\n          visible={swapModalVisible}\r\n          onDismiss={() => setSwapModalVisible(false)}\r\n          contentContainerStyle={styles.modalContent}\r\n        >\r\n          <Title style={styles.modalTitle}>Select New Time</Title>\r\n          \r\n          {availableSlots.length > 0 ? (\r\n            <ScrollView style={styles.timeSlotsContainer}>\r\n              {availableSlots.map((slot, index) => (\r\n                <TouchableOpacity\r\n                  key={index}\r\n                  style={[\r\n                    styles.timeSlotButton,\r\n                    newTimeSlot && newTimeSlot.startTime === slot.startTime && styles.selectedTimeSlot\r\n                  ]}\r\n                  onPress={() => setNewTimeSlot(slot)}\r\n                >\r\n                  <Text style={styles.timeSlotButtonText}>\r\n                    {slot.startTime} - {slot.endTime}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              ))}\r\n            </ScrollView>\r\n          ) : (\r\n            <Text style={styles.noSlotsText}>No available time slots for this day.</Text>\r\n          )}\r\n          \r\n          <View style={styles.modalActions}>\r\n            <Button onPress={() => setSwapModalVisible(false)} style={styles.modalButton}>\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              mode=\"contained\" \r\n              onPress={handleTimeSwap}\r\n              disabled={!newTimeSlot}\r\n              style={styles.modalButton}\r\n            >\r\n              Change Time\r\n            </Button>\r\n          </View>\r\n        </Modal>\r\n      </Portal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  header: {\r\n    backgroundColor: '#0F4C75',\r\n    padding: 20,\r\n    paddingTop: 50,\r\n    paddingBottom: 20,\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  headerSubtitle: {\r\n    fontSize: 16,\r\n    color: '#BBE1FA',\r\n    marginTop: 5,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n  },\r\n  calendarContainer: {\r\n    margin: 10,\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    overflow: 'hidden',\r\n    ...Platform.select({\r\n      ios: {\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.1,\r\n        shadowRadius: 4,\r\n      },\r\n      android: {\r\n        elevation: 3,\r\n      },\r\n    }),\r\n  },\r\n  scheduleContainer: {\r\n    margin: 10,\r\n    marginTop: 5,\r\n    padding: 15,\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    ...Platform.select({\r\n      ios: {\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.1,\r\n        shadowRadius: 4,\r\n      },\r\n      android: {\r\n        elevation: 3,\r\n      },\r\n    }),\r\n  },\r\n  scheduleTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 15,\r\n    color: '#1B262C',\r\n  },\r\n  scheduleGrid: {\r\n    marginTop: 5,\r\n  },\r\n  timeSlot: {\r\n    flexDirection: 'row',\r\n    marginBottom: 10,\r\n    height: 80,\r\n  },\r\n  currentTimeSlot: {\r\n    borderLeftWidth: 3,\r\n    borderLeftColor: '#0F4C75',\r\n  },\r\n  timeColumn: {\r\n    width: 60,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#f0f0f0',\r\n    borderRadius: 5,\r\n  },\r\n  timeText: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  appointmentColumn: {\r\n    flex: 1,\r\n    marginLeft: 10,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    justifyContent: 'center',\r\n  },\r\n  appointmentCard: {\r\n    padding: 5,\r\n  },\r\n  appointmentHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 5,\r\n  },\r\n  customerName: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n  },\r\n  serviceText: {\r\n    fontSize: 12,\r\n  },\r\n  priceText: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n    marginTop: 5,\r\n  },\r\n  statusChip: {\r\n    height: 20,\r\n    paddingHorizontal: 5,\r\n  },\r\n  statusChipText: {\r\n    fontSize: 8,\r\n    color: 'white',\r\n  },\r\n  emptySlot: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n  },\r\n  emptySlotText: {\r\n    color: '#757575',\r\n    fontStyle: 'italic',\r\n  },\r\n  emptySchedule: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 30,\r\n  },\r\n  emptyText: {\r\n    color: '#757575',\r\n    textAlign: 'center',\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: '#0F4C75',\r\n  },\r\n  modalContent: {\r\n    backgroundColor: 'white',\r\n    padding: 20,\r\n    margin: 20,\r\n    borderRadius: 10,\r\n  },\r\n  modalTitle: {\r\n    textAlign: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  appointmentDetails: {\r\n    marginBottom: 15,\r\n  },\r\n  appointmentDetail: {\r\n    marginBottom: 5,\r\n  },\r\n  detailLabel: {\r\n    fontWeight: 'bold',\r\n  },\r\n  divider: {\r\n    marginVertical: 10,\r\n  },\r\n  actionButtons: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n    marginVertical: 10,\r\n  },\r\n  actionButton: {\r\n    width: '48%',\r\n    padding: 10,\r\n    alignItems: 'center',\r\n    borderWidth: 1,\r\n    borderColor: '#0F4C75',\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n  },\r\n  actionButtonSelected: {\r\n    backgroundColor: '#0F4C75',\r\n  },\r\n  actionButtonText: {\r\n    color: '#0F4C75',\r\n  },\r\n  noteInput: {\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n  },\r\n  modalActions: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  modalButton: {\r\n    flex: 1,\r\n    marginHorizontal: 5,\r\n  },\r\n  timeSlotsContainer: {\r\n    maxHeight: 300,\r\n    marginVertical: 10,\r\n  },\r\n  timeSlotButton: {\r\n    padding: 15,\r\n    marginVertical: 5,\r\n    backgroundColor: '#f0f0f0',\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n  },\r\n  selectedTimeSlot: {\r\n    backgroundColor: '#BBE1FA',\r\n    borderWidth: 1,\r\n    borderColor: '#0F4C75',\r\n  },\r\n  timeSlotButtonText: {\r\n    fontSize: 16,\r\n  },\r\n  noSlotsText: {\r\n    textAlign: 'center',\r\n    margin: 20,\r\n    color: '#757575',\r\n  },\r\n});\r\n\r\nexport default BarberDashboardScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}