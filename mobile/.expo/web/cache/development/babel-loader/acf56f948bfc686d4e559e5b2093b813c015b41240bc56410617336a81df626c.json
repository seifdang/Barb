{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useContext, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Text, Avatar, TextInput, Button, Divider, List, Switch, ActivityIndicator, Card } from 'react-native-paper';\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { useNavigation } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { CommonActions } from '@react-navigation/native';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport apiClient from \"../../api/client\";\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen() {\n  var _useContext = useContext(AuthContext),\n    userInfo = _useContext.userInfo,\n    updateProfile = _useContext.updateProfile,\n    logout = _useContext.logout,\n    isLoading = _useContext.isLoading;\n  var navigation = useNavigation();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isEditing = _useState2[0],\n    setIsEditing = _useState2[1];\n  var _useState3 = useState((userInfo == null ? void 0 : userInfo.name) || ''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    name = _useState4[0],\n    setName = _useState4[1];\n  var _useState5 = useState((userInfo == null ? void 0 : userInfo.email) || ''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setEmail = _useState6[1];\n  var _useState7 = useState((userInfo == null ? void 0 : userInfo.phone) || ''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    phone = _useState8[0],\n    setPhone = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    password = _useState10[0],\n    setPassword = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    confirmPassword = _useState12[0],\n    setConfirmPassword = _useState12[1];\n  var _useState13 = useState(true),\n    _useState14 = _slicedToArray(_useState13, 2),\n    notifications = _useState14[0],\n    setNotifications = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    loggingOut = _useState16[0],\n    setLoggingOut = _useState16[1];\n  var _useState17 = useState([]),\n    _useState18 = _slicedToArray(_useState17, 2),\n    salons = _useState18[0],\n    setSalons = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    loadingSalons = _useState20[0],\n    setLoadingSalons = _useState20[1];\n  useEffect(function () {\n    if (userInfo && (userInfo.role === 'manager' || userInfo.role === 'barber')) {\n      fetchSalons();\n    }\n  }, [userInfo]);\n  var fetchSalons = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        setLoadingSalons(true);\n        var endpoint = userInfo.role === 'manager' ? '/manager/salons' : \"/users/barber/\" + userInfo._id + \"/salons\";\n        var response = yield apiClient.get(endpoint, {\n          headers: {\n            Authorization: \"Bearer \" + userInfo.token\n          }\n        });\n        if (response.data && response.data.success) {\n          setSalons(response.data.salons || []);\n        } else {\n          console.error('Failed to load salons:', response.data);\n        }\n        setLoadingSalons(false);\n      } catch (error) {\n        console.error('Error fetching salons:', error);\n        setLoadingSalons(false);\n      }\n    });\n    return function fetchSalons() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleSaveProfile = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!name.trim()) {\n        Alert.alert('Error', 'Please enter your name');\n        return;\n      }\n      if (password && password !== confirmPassword) {\n        Alert.alert('Error', 'Passwords do not match');\n        return;\n      }\n      try {\n        var userData = {\n          name: name,\n          phone: phone\n        };\n        if (password) {\n          userData.password = password;\n        }\n        var result = yield updateProfile(userData);\n        if (result.success) {\n          Alert.alert('Success', 'Profile updated successfully');\n          setIsEditing(false);\n          setPassword('');\n          setConfirmPassword('');\n        } else {\n          Alert.alert('Error', result.message || 'Failed to update profile');\n        }\n      } catch (error) {\n        Alert.alert('Error', 'Something went wrong. Please try again.');\n        console.error('Profile update error:', error);\n      }\n    });\n    return function handleSaveProfile() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleLogout = function handleLogout() {\n    setLoggingOut(true);\n    try {\n      var keysToRemove = ['userInfo', 'userToken'];\n      AsyncStorage.multiRemove(keysToRemove, function (err) {\n        if (err) {\n          console.error('Error removing keys:', err);\n        } else {\n          console.log('Successfully removed keys');\n        }\n        try {\n          navigation.reset({\n            index: 0,\n            routes: [{\n              name: 'Auth'\n            }]\n          });\n        } catch (navError) {\n          console.error('Navigation reset error:', navError);\n          try {\n            navigation.navigate('Login');\n          } catch (navError2) {\n            console.error('Navigation error:', navError2);\n          }\n        }\n      });\n    } catch (error) {\n      console.error('General logout error:', error);\n      navigation.navigate('Login');\n    }\n  };\n  if (!userInfo) {\n    return _jsx(View, {\n      style: styles.centered,\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#0F4C75\"\n      })\n    });\n  }\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Avatar.Image, {\n        size: 100,\n        source: {\n          uri: userInfo.profileImage || 'https://via.placeholder.com/100'\n        },\n        style: styles.avatar\n      }), _jsx(Text, {\n        style: styles.name,\n        children: userInfo.name\n      }), _jsx(Text, {\n        style: styles.role,\n        children: userInfo.role.charAt(0).toUpperCase() + userInfo.role.slice(1)\n      }), !isEditing && _jsx(Button, {\n        mode: \"outlined\",\n        style: styles.editButton,\n        onPress: function onPress() {\n          return setIsEditing(true);\n        },\n        children: \"Edit Profile\"\n      }), userInfo.role === 'admin' || userInfo.email === 'seif.ayadi.3.9.2@gmail.com' ? _jsx(Button, {\n        mode: \"contained\",\n        style: styles.adminButton,\n        onPress: function onPress() {\n          return navigation.navigate('AdminDashboard');\n        },\n        children: \"Admin Dashboard\"\n      }) : null, userInfo.role === 'manager' ? _jsxs(_Fragment, {\n        children: [_jsx(Button, {\n          mode: \"contained\",\n          style: styles.adminButton,\n          onPress: function onPress() {\n            return navigation.navigate('ManagerDashboard');\n          },\n          children: \"Staff Dashboard\"\n        }), _jsx(Button, {\n          mode: \"contained\",\n          style: [styles.adminButton, {\n            marginTop: 10\n          }],\n          onPress: function onPress() {\n            return navigation.navigate('SalonDashboard');\n          },\n          children: \"Salon Dashboard\"\n        })]\n      }) : null]\n    }), _jsxs(View, {\n      style: styles.content,\n      children: [isEditing ? _jsxs(View, {\n        style: styles.form,\n        children: [_jsx(TextInput, {\n          label: \"Name\",\n          value: name,\n          onChangeText: setName,\n          mode: \"outlined\",\n          style: styles.input\n        }), _jsx(TextInput, {\n          label: \"Email\",\n          value: email,\n          onChangeText: setEmail,\n          mode: \"outlined\",\n          style: styles.input,\n          disabled: true\n        }), _jsx(TextInput, {\n          label: \"Phone\",\n          value: phone,\n          onChangeText: setPhone,\n          mode: \"outlined\",\n          style: styles.input,\n          keyboardType: \"phone-pad\"\n        }), _jsx(TextInput, {\n          label: \"New Password (leave blank to keep current)\",\n          value: password,\n          onChangeText: setPassword,\n          mode: \"outlined\",\n          style: styles.input,\n          secureTextEntry: true\n        }), _jsx(TextInput, {\n          label: \"Confirm New Password\",\n          value: confirmPassword,\n          onChangeText: setConfirmPassword,\n          mode: \"outlined\",\n          style: styles.input,\n          secureTextEntry: true\n        }), _jsxs(View, {\n          style: styles.buttonContainer,\n          children: [_jsx(Button, {\n            mode: \"outlined\",\n            onPress: function onPress() {\n              setIsEditing(false);\n              setName(userInfo.name);\n              setEmail(userInfo.email);\n              setPhone(userInfo.phone || '');\n              setPassword('');\n              setConfirmPassword('');\n            },\n            style: styles.cancelButton,\n            children: \"Cancel\"\n          }), _jsx(Button, {\n            mode: \"contained\",\n            onPress: handleSaveProfile,\n            loading: isLoading,\n            disabled: isLoading,\n            style: styles.saveButton,\n            children: \"Save\"\n          })]\n        })]\n      }) : _jsx(_Fragment, {\n        children: _jsxs(List.Section, {\n          children: [_jsx(List.Subheader, {\n            children: \"Account Information\"\n          }), _jsx(List.Item, {\n            title: \"Email\",\n            description: userInfo.email,\n            left: function left(props) {\n              return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                icon: \"email\"\n              }));\n            }\n          }), _jsx(List.Item, {\n            title: \"Phone\",\n            description: userInfo.phone || 'Not provided',\n            left: function left(props) {\n              return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                icon: \"phone\"\n              }));\n            }\n          }), _jsx(Divider, {}), _jsx(List.Subheader, {\n            children: \"Preferences\"\n          }), _jsx(List.Item, {\n            title: \"Notifications\",\n            left: function left(props) {\n              return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                icon: \"bell\"\n              }));\n            },\n            right: function right() {\n              return _jsx(Switch, {\n                value: notifications,\n                onValueChange: setNotifications,\n                color: \"#0F4C75\"\n              });\n            }\n          }), _jsx(Divider, {}), _jsx(List.Subheader, {\n            children: \"About\"\n          }), _jsx(List.Item, {\n            title: \"Terms of Service\",\n            left: function left(props) {\n              return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                icon: \"file-document\"\n              }));\n            },\n            onPress: function onPress() {}\n          }), _jsx(List.Item, {\n            title: \"Privacy Policy\",\n            left: function left(props) {\n              return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                icon: \"shield-account\"\n              }));\n            },\n            onPress: function onPress() {}\n          }), _jsx(List.Item, {\n            title: \"App Version\",\n            description: \"1.0.0\",\n            left: function left(props) {\n              return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                icon: \"information\"\n              }));\n            }\n          })]\n        })\n      }), userInfo && (userInfo.role === 'manager' || userInfo.role === 'barber') && _jsxs(Card, {\n        style: styles.card,\n        children: [_jsx(Card.Title, {\n          title: \"Your Salons\"\n        }), _jsx(Card.Content, {\n          children: loadingSalons ? _jsx(ActivityIndicator, {\n            size: \"small\",\n            color: \"#0F4C75\"\n          }) : salons.length > 0 ? _jsx(View, {\n            children: salons.map(function (salon) {\n              var _salon$address, _salon$address2;\n              return _jsxs(TouchableOpacity, {\n                onPress: function onPress() {\n                  return navigation.navigate('SalonDashboard', {\n                    salonId: salon._id\n                  });\n                },\n                style: styles.salonItem,\n                children: [_jsxs(View, {\n                  style: styles.salonInfo,\n                  children: [_jsx(Text, {\n                    style: styles.salonName,\n                    children: salon.name\n                  }), _jsxs(Text, {\n                    style: styles.salonAddress,\n                    children: [(_salon$address = salon.address) == null ? void 0 : _salon$address.street, \", \", (_salon$address2 = salon.address) == null ? void 0 : _salon$address2.city]\n                  })]\n                }), _jsx(Ionicons, {\n                  name: \"chevron-forward\",\n                  size: 20,\n                  color: \"#888\"\n                })]\n              }, salon._id);\n            })\n          }) : _jsx(Text, {\n            children: \"No salons associated with your account\"\n          })\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.directLogoutButton,\n        activeOpacity: 0.6,\n        onPress: function onPress() {\n          console.log(\"FORCE LOGOUT - no navigation approach\");\n          AsyncStorage.clear();\n          if (typeof window !== 'undefined') {\n            console.log(\"Reloading browser\");\n            window.location.reload();\n            return;\n          }\n          if (logout) {\n            logout();\n          }\n          Alert.alert(\"Logout Complete\", \"Please restart the app to complete logout\", [{\n            text: \"OK\"\n          }]);\n        },\n        children: _jsx(Text, {\n          style: styles.logoutButtonText,\n          children: \"LOGOUT\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  header: {\n    alignItems: 'center',\n    padding: 20,\n    paddingTop: 50,\n    backgroundColor: 'white'\n  },\n  avatar: {\n    marginBottom: 10\n  },\n  name: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#1B262C'\n  },\n  role: {\n    fontSize: 16,\n    color: '#3282B8',\n    marginBottom: 10\n  },\n  editButton: {\n    marginVertical: 10,\n    borderColor: '#0F4C75',\n    borderWidth: 1\n  },\n  adminButton: {\n    marginTop: 10,\n    backgroundColor: '#0F4C75'\n  },\n  content: {\n    padding: 15\n  },\n  form: {\n    marginVertical: 10\n  },\n  input: {\n    marginBottom: 15,\n    backgroundColor: 'white'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 10\n  },\n  cancelButton: {\n    flex: 1,\n    marginRight: 10\n  },\n  saveButton: {\n    flex: 1,\n    marginLeft: 10\n  },\n  logoutButton: {\n    marginVertical: 30,\n    borderColor: '#d32f2f',\n    borderWidth: 1\n  },\n  directLogoutButton: {\n    marginVertical: 30,\n    borderColor: '#d32f2f',\n    borderWidth: 1,\n    backgroundColor: '#d32f2f',\n    padding: 15,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  logoutButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  card: {\n    marginTop: 10\n  },\n  salonItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee'\n  },\n  salonInfo: {\n    flex: 1\n  },\n  salonName: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  salonAddress: {\n    fontSize: 14,\n    color: '#666',\n    marginTop: 3\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useState","useContext","useEffect","View","StyleSheet","ScrollView","TouchableOpacity","Alert","Text","Avatar","TextInput","Button","Divider","List","Switch","ActivityIndicator","Card","AuthContext","useNavigation","AsyncStorage","CommonActions","Ionicons","apiClient","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ProfileScreen","_useContext","userInfo","updateProfile","logout","isLoading","navigation","_useState","_useState2","_slicedToArray","isEditing","setIsEditing","_useState3","name","_useState4","setName","_useState5","email","_useState6","setEmail","_useState7","phone","_useState8","setPhone","_useState9","_useState10","password","setPassword","_useState11","_useState12","confirmPassword","setConfirmPassword","_useState13","_useState14","notifications","setNotifications","_useState15","_useState16","loggingOut","setLoggingOut","_useState17","_useState18","salons","setSalons","_useState19","_useState20","loadingSalons","setLoadingSalons","role","fetchSalons","_ref","_asyncToGenerator","endpoint","_id","response","get","headers","Authorization","token","data","success","console","error","apply","arguments","handleSaveProfile","_ref2","trim","alert","userData","result","message","handleLogout","keysToRemove","multiRemove","err","log","reset","index","routes","navError","navigate","navError2","style","styles","centered","children","size","color","container","header","Image","source","uri","profileImage","avatar","charAt","toUpperCase","slice","mode","editButton","onPress","adminButton","marginTop","content","form","label","value","onChangeText","input","disabled","keyboardType","secureTextEntry","buttonContainer","cancelButton","loading","saveButton","Section","Subheader","Item","title","description","left","props","Icon","_objectSpread","icon","right","onValueChange","card","Title","Content","length","map","salon","_salon$address","_salon$address2","salonId","salonItem","salonInfo","salonName","salonAddress","address","street","city","directLogoutButton","activeOpacity","clear","window","location","reload","text","logoutButtonText","create","flex","backgroundColor","justifyContent","alignItems","padding","paddingTop","marginBottom","fontSize","fontWeight","marginVertical","borderColor","borderWidth","flexDirection","marginRight","marginLeft","logoutButton","borderRadius","paddingVertical","borderBottomWidth","borderBottomColor"],"sources":["C:/Users/User/Downloads/mobile/screens/customer/ProfileScreen.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { View, StyleSheet, ScrollView, TouchableOpacity, Alert } from 'react-native';\r\nimport { Text, Avatar, TextInput, Button, Divider, List, Switch, ActivityIndicator, Card } from 'react-native-paper';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { CommonActions } from '@react-navigation/native';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport apiClient from '../../api/client';\r\n\r\nconst ProfileScreen = () => {\r\n  const { userInfo, updateProfile, logout, isLoading } = useContext(AuthContext);\r\n  const navigation = useNavigation();\r\n  \r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [name, setName] = useState(userInfo?.name || '');\r\n  const [email, setEmail] = useState(userInfo?.email || '');\r\n  const [phone, setPhone] = useState(userInfo?.phone || '');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [notifications, setNotifications] = useState(true);\r\n  const [loggingOut, setLoggingOut] = useState(false);\r\n  \r\n  // Get salon info for managers and barbers\r\n  const [salons, setSalons] = useState([]);\r\n  const [loadingSalons, setLoadingSalons] = useState(false);\r\n  \r\n  // Fetch salons for managers and barbers\r\n  useEffect(() => {\r\n    if (userInfo && (userInfo.role === 'manager' || userInfo.role === 'barber')) {\r\n      fetchSalons();\r\n    }\r\n  }, [userInfo]);\r\n  \r\n  const fetchSalons = async () => {\r\n    try {\r\n      setLoadingSalons(true);\r\n      \r\n      // Different endpoints based on role\r\n      const endpoint = userInfo.role === 'manager' \r\n        ? '/manager/salons' \r\n        : `/users/barber/${userInfo._id}/salons`;\r\n      \r\n      const response = await apiClient.get(endpoint, {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        setSalons(response.data.salons || []);\r\n      } else {\r\n        console.error('Failed to load salons:', response.data);\r\n      }\r\n      \r\n      setLoadingSalons(false);\r\n    } catch (error) {\r\n      console.error('Error fetching salons:', error);\r\n      setLoadingSalons(false);\r\n    }\r\n  };\r\n  \r\n  const handleSaveProfile = async () => {\r\n    // Validate input\r\n    if (!name.trim()) {\r\n      Alert.alert('Error', 'Please enter your name');\r\n      return;\r\n    }\r\n    \r\n    if (password && password !== confirmPassword) {\r\n      Alert.alert('Error', 'Passwords do not match');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const userData = {\r\n        name,\r\n        phone,\r\n      };\r\n      \r\n      // Only include password if it was updated\r\n      if (password) {\r\n        userData.password = password;\r\n      }\r\n      \r\n      // Email can't be updated in this version\r\n      // userData.email = email;\r\n      \r\n      const result = await updateProfile(userData);\r\n      \r\n      if (result.success) {\r\n        Alert.alert('Success', 'Profile updated successfully');\r\n        setIsEditing(false);\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n      } else {\r\n        Alert.alert('Error', result.message || 'Failed to update profile');\r\n      }\r\n    } catch (error) {\r\n      Alert.alert('Error', 'Something went wrong. Please try again.');\r\n      console.error('Profile update error:', error);\r\n    }\r\n  };\r\n  \r\n  const handleLogout = () => {\r\n    // Show immediate feedback\r\n    setLoggingOut(true);\r\n    \r\n    // Skip the context logout and directly handle it\r\n    try {\r\n      // Clear only the essential auth keys, don't touch other app settings\r\n      const keysToRemove = ['userInfo', 'userToken'];\r\n      \r\n      AsyncStorage.multiRemove(keysToRemove, (err) => {\r\n        if (err) {\r\n          console.error('Error removing keys:', err);\r\n        } else {\r\n          console.log('Successfully removed keys');\r\n        }\r\n        \r\n        // In any case, try to navigate away\r\n        try {\r\n          // Use the more direct navigation first\r\n          navigation.reset({\r\n            index: 0,\r\n            routes: [{ name: 'Auth' }]\r\n          });\r\n        } catch (navError) {\r\n          console.error('Navigation reset error:', navError);\r\n          \r\n          // Fallback to simpler navigation\r\n          try {\r\n            navigation.navigate('Login');\r\n          } catch (navError2) {\r\n            console.error('Navigation error:', navError2);\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('General logout error:', error);\r\n      // Still try to navigate away even if there was an error\r\n      navigation.navigate('Login');\r\n    }\r\n  };\r\n  \r\n  if (!userInfo) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Avatar.Image \r\n          size={100} \r\n          source={{ uri: userInfo.profileImage || 'https://via.placeholder.com/100' }} \r\n          style={styles.avatar}\r\n        />\r\n        <Text style={styles.name}>{userInfo.name}</Text>\r\n        <Text style={styles.role}>{userInfo.role.charAt(0).toUpperCase() + userInfo.role.slice(1)}</Text>\r\n        \r\n        {!isEditing && (\r\n          <Button \r\n            mode=\"outlined\" \r\n            style={styles.editButton}\r\n            onPress={() => setIsEditing(true)}\r\n          >\r\n            Edit Profile\r\n          </Button>\r\n        )}\r\n\r\n        {/* Admin Dashboard Button - Only show for admin users or specific email */}\r\n        {userInfo.role === 'admin' || userInfo.email === 'seif.ayadi.3.9.2@gmail.com' ? (\r\n          <Button \r\n            mode=\"contained\" \r\n            style={styles.adminButton}\r\n            onPress={() => navigation.navigate('AdminDashboard')}\r\n          >\r\n            Admin Dashboard\r\n          </Button>\r\n        ) : null}\r\n\r\n        {/* Manager Dashboard Button - Only show for manager users */}\r\n        {userInfo.role === 'manager' ? (\r\n          <>\r\n            <Button \r\n              mode=\"contained\" \r\n              style={styles.adminButton}\r\n              onPress={() => navigation.navigate('ManagerDashboard')}\r\n            >\r\n              Staff Dashboard\r\n            </Button>\r\n            <Button \r\n              mode=\"contained\" \r\n              style={[styles.adminButton, { marginTop: 10 }]}\r\n              onPress={() => navigation.navigate('SalonDashboard')}\r\n            >\r\n              Salon Dashboard\r\n            </Button>\r\n          </>\r\n        ) : null}\r\n      </View>\r\n      \r\n      <View style={styles.content}>\r\n        {isEditing ? (\r\n          <View style={styles.form}>\r\n            <TextInput\r\n              label=\"Name\"\r\n              value={name}\r\n              onChangeText={setName}\r\n              mode=\"outlined\"\r\n              style={styles.input}\r\n            />\r\n            \r\n            <TextInput\r\n              label=\"Email\"\r\n              value={email}\r\n              onChangeText={setEmail}\r\n              mode=\"outlined\"\r\n              style={styles.input}\r\n              disabled\r\n              // Email change is disabled in this version\r\n            />\r\n            \r\n            <TextInput\r\n              label=\"Phone\"\r\n              value={phone}\r\n              onChangeText={setPhone}\r\n              mode=\"outlined\"\r\n              style={styles.input}\r\n              keyboardType=\"phone-pad\"\r\n            />\r\n            \r\n            <TextInput\r\n              label=\"New Password (leave blank to keep current)\"\r\n              value={password}\r\n              onChangeText={setPassword}\r\n              mode=\"outlined\"\r\n              style={styles.input}\r\n              secureTextEntry\r\n            />\r\n            \r\n            <TextInput\r\n              label=\"Confirm New Password\"\r\n              value={confirmPassword}\r\n              onChangeText={setConfirmPassword}\r\n              mode=\"outlined\"\r\n              style={styles.input}\r\n              secureTextEntry\r\n            />\r\n            \r\n            <View style={styles.buttonContainer}>\r\n              <Button \r\n                mode=\"outlined\" \r\n                onPress={() => {\r\n                  setIsEditing(false);\r\n                  setName(userInfo.name);\r\n                  setEmail(userInfo.email);\r\n                  setPhone(userInfo.phone || '');\r\n                  setPassword('');\r\n                  setConfirmPassword('');\r\n                }}\r\n                style={styles.cancelButton}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              \r\n              <Button \r\n                mode=\"contained\" \r\n                onPress={handleSaveProfile}\r\n                loading={isLoading}\r\n                disabled={isLoading}\r\n                style={styles.saveButton}\r\n              >\r\n                Save\r\n              </Button>\r\n            </View>\r\n          </View>\r\n        ) : (\r\n          <>\r\n            <List.Section>\r\n              <List.Subheader>Account Information</List.Subheader>\r\n              <List.Item\r\n                title=\"Email\"\r\n                description={userInfo.email}\r\n                left={props => <List.Icon {...props} icon=\"email\" />}\r\n              />\r\n              <List.Item\r\n                title=\"Phone\"\r\n                description={userInfo.phone || 'Not provided'}\r\n                left={props => <List.Icon {...props} icon=\"phone\" />}\r\n              />\r\n              <Divider />\r\n              \r\n              <List.Subheader>Preferences</List.Subheader>\r\n              <List.Item\r\n                title=\"Notifications\"\r\n                left={props => <List.Icon {...props} icon=\"bell\" />}\r\n                right={() => (\r\n                  <Switch\r\n                    value={notifications}\r\n                    onValueChange={setNotifications}\r\n                    color=\"#0F4C75\"\r\n                  />\r\n                )}\r\n              />\r\n              <Divider />\r\n              \r\n              <List.Subheader>About</List.Subheader>\r\n              <List.Item\r\n                title=\"Terms of Service\"\r\n                left={props => <List.Icon {...props} icon=\"file-document\" />}\r\n                onPress={() => {}}\r\n              />\r\n              <List.Item\r\n                title=\"Privacy Policy\"\r\n                left={props => <List.Icon {...props} icon=\"shield-account\" />}\r\n                onPress={() => {}}\r\n              />\r\n              <List.Item\r\n                title=\"App Version\"\r\n                description=\"1.0.0\"\r\n                left={props => <List.Icon {...props} icon=\"information\" />}\r\n              />\r\n            </List.Section>\r\n          </>\r\n        )}\r\n        \r\n        {/* Salon Section - Only for managers and barbers */}\r\n        {userInfo && (userInfo.role === 'manager' || userInfo.role === 'barber') && (\r\n          <Card style={styles.card}>\r\n            <Card.Title title=\"Your Salons\" />\r\n            <Card.Content>\r\n              {loadingSalons ? (\r\n                <ActivityIndicator size=\"small\" color=\"#0F4C75\" />\r\n              ) : salons.length > 0 ? (\r\n                <View>\r\n                  {salons.map((salon) => (\r\n                    <TouchableOpacity \r\n                      key={salon._id}\r\n                      onPress={() => navigation.navigate('SalonDashboard', { salonId: salon._id })}\r\n                      style={styles.salonItem}\r\n                    >\r\n                      <View style={styles.salonInfo}>\r\n                        <Text style={styles.salonName}>{salon.name}</Text>\r\n                        <Text style={styles.salonAddress}>\r\n                          {salon.address?.street}, {salon.address?.city}\r\n                        </Text>\r\n                      </View>\r\n                      <Ionicons name=\"chevron-forward\" size={20} color=\"#888\" />\r\n                    </TouchableOpacity>\r\n                  ))}\r\n                </View>\r\n              ) : (\r\n                <Text>No salons associated with your account</Text>\r\n              )}\r\n            </Card.Content>\r\n          </Card>\r\n        )}\r\n        \r\n        <TouchableOpacity\r\n          style={styles.directLogoutButton}\r\n          activeOpacity={0.6}\r\n          onPress={() => {\r\n            console.log(\"FORCE LOGOUT - no navigation approach\");\r\n            \r\n            // 1. Clear storage directly\r\n            AsyncStorage.clear();\r\n            \r\n            // 2. For web - force reload the app which will show login screen\r\n            if (typeof window !== 'undefined') {\r\n              console.log(\"Reloading browser\");\r\n              window.location.reload();\r\n              return;\r\n            }\r\n            \r\n            // 3. For native - trigger a state update in parent components\r\n            if (logout) {\r\n              logout();\r\n            }\r\n            \r\n            // 4. Alert the user as a last resort\r\n            Alert.alert(\r\n              \"Logout Complete\", \r\n              \"Please restart the app to complete logout\",\r\n              [{ text: \"OK\" }]\r\n            );\r\n          }}\r\n        >\r\n          <Text style={styles.logoutButtonText}>LOGOUT</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  header: {\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    paddingTop: 50,\r\n    backgroundColor: 'white',\r\n  },\r\n  avatar: {\r\n    marginBottom: 10,\r\n  },\r\n  name: {\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n    color: '#1B262C',\r\n  },\r\n  role: {\r\n    fontSize: 16,\r\n    color: '#3282B8',\r\n    marginBottom: 10,\r\n  },\r\n  editButton: {\r\n    marginVertical: 10,\r\n    borderColor: '#0F4C75',\r\n    borderWidth: 1,\r\n  },\r\n  adminButton: {\r\n    marginTop: 10,\r\n    backgroundColor: '#0F4C75',\r\n  },\r\n  content: {\r\n    padding: 15,\r\n  },\r\n  form: {\r\n    marginVertical: 10,\r\n  },\r\n  input: {\r\n    marginBottom: 15,\r\n    backgroundColor: 'white',\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: 10,\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    marginRight: 10,\r\n  },\r\n  saveButton: {\r\n    flex: 1,\r\n    marginLeft: 10,\r\n  },\r\n  logoutButton: {\r\n    marginVertical: 30,\r\n    borderColor: '#d32f2f',\r\n    borderWidth: 1,\r\n  },\r\n  directLogoutButton: {\r\n    marginVertical: 30,\r\n    borderColor: '#d32f2f',\r\n    borderWidth: 1,\r\n    backgroundColor: '#d32f2f',\r\n    padding: 15,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n  },\r\n  logoutButtonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n  },\r\n  card: {\r\n    marginTop: 10,\r\n  },\r\n  salonItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    paddingVertical: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#eee',\r\n  },\r\n  salonInfo: {\r\n    flex: 1,\r\n  },\r\n  salonName: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  salonAddress: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n    marginTop: 3,\r\n  },\r\n});\r\n\r\nexport default ProfileScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}