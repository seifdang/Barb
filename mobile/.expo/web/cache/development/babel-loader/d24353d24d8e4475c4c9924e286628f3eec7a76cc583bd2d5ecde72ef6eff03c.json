{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { LightTheme, CustomDarkTheme } from \"../theme\";\nimport Appearance from \"react-native-web/dist/exports/Appearance\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var ThemeContext = createContext({\n  theme: LightTheme,\n  isDarkMode: false,\n  toggleTheme: function toggleTheme() {}\n});\nexport var ThemeProvider = function ThemeProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(LightTheme),\n    _useState2 = _slicedToArray(_useState, 2),\n    theme = _useState2[0],\n    setTheme = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isDarkMode = _useState4[0],\n    setIsDarkMode = _useState4[1];\n  useEffect(function () {\n    var loadTheme = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var storedPref = yield AsyncStorage.getItem('themePreference');\n          if (storedPref === 'dark') {\n            setIsDarkMode(true);\n            setTheme(CustomDarkTheme);\n          } else {\n            setIsDarkMode(false);\n            setTheme(LightTheme);\n          }\n        } catch (e) {\n          console.warn('Erreur chargement thème', e);\n        }\n      });\n      return function loadTheme() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadTheme();\n    var sub = Appearance.addChangeListener(function (_ref3) {\n      var colorScheme = _ref3.colorScheme;\n      var systemDark = colorScheme === 'dark';\n      setIsDarkMode(systemDark);\n      setTheme(systemDark ? CustomDarkTheme : LightTheme);\n      AsyncStorage.setItem('themePreference', systemDark ? 'dark' : 'light');\n    });\n    return function () {\n      return sub.remove();\n    };\n  }, []);\n  var toggleTheme = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var newDark = !isDarkMode;\n      setIsDarkMode(newDark);\n      setTheme(newDark ? CustomDarkTheme : LightTheme);\n      yield AsyncStorage.setItem('themePreference', newDark ? 'dark' : 'light');\n    });\n    return function toggleTheme() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsx(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      isDarkMode: isDarkMode,\n      toggleTheme: toggleTheme\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["React","createContext","useState","useEffect","AsyncStorage","LightTheme","CustomDarkTheme","Appearance","jsx","_jsx","ThemeContext","theme","isDarkMode","toggleTheme","ThemeProvider","_ref","children","_useState","_useState2","_slicedToArray","setTheme","_useState3","_useState4","setIsDarkMode","loadTheme","_ref2","_asyncToGenerator","storedPref","getItem","e","console","warn","apply","arguments","sub","addChangeListener","_ref3","colorScheme","systemDark","setItem","remove","_ref4","newDark","Provider","value"],"sources":["C:/Users/User/Downloads/mobile/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { LightTheme, CustomDarkTheme } from '../theme';\nimport { Appearance } from 'react-native';\n\nexport const ThemeContext = createContext({\n  theme: LightTheme,\n  isDarkMode: false,\n  toggleTheme: () => {},\n});\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState(LightTheme);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  // Charger la préférence au démarrage\n  useEffect(() => {\n    const loadTheme = async () => {\n      try {\n        const storedPref = await AsyncStorage.getItem('themePreference');\n        if (storedPref === 'dark') {\n          setIsDarkMode(true);\n          setTheme(CustomDarkTheme);\n        } else {\n          setIsDarkMode(false);\n          setTheme(LightTheme);\n        }\n      } catch (e) {\n        console.warn('Erreur chargement thème', e);\n      }\n    };\n    loadTheme();\n\n    // Écouteur du mode système\n    const sub = Appearance.addChangeListener(({ colorScheme }) => {\n      const systemDark = colorScheme === 'dark';\n      setIsDarkMode(systemDark);\n      setTheme(systemDark ? CustomDarkTheme : LightTheme);\n      AsyncStorage.setItem('themePreference', systemDark ? 'dark' : 'light');\n    });\n\n    return () => sub.remove();\n  }, []);\n\n  // Basculement manuel\n  const toggleTheme = async () => {\n    const newDark = !isDarkMode;\n    setIsDarkMode(newDark);\n    setTheme(newDark ? CustomDarkTheme : LightTheme);\n    await AsyncStorage.setItem('themePreference', newDark ? 'dark' : 'light');\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, isDarkMode, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}