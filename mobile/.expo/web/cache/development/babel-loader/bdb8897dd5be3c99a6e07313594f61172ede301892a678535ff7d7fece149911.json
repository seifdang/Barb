{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useContext, useRef, createRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { StatusBar } from 'expo-status-bar';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport LoginScreen from \"./screens/auth/LoginScreen\";\nimport RegisterScreen from \"./screens/auth/RegisterScreen\";\nimport HomeScreen from \"./screens/customer/HomeScreen\";\nimport ServicesScreen from \"./screens/customer/ServicesScreen\";\nimport BookingScreen from \"./screens/customer/BookingScreen\";\nimport AppointmentsScreen from \"./screens/customer/AppointmentsScreen\";\nimport ProfileScreen from \"./screens/customer/ProfileScreen\";\nimport BarberAppointmentsScreen from \"./screens/barber/BarberAppointmentsScreen\";\nimport BarberDashboardScreen from \"./screens/barber/BarberDashboardScreen\";\nimport AdminDashboardScreen from \"./screens/admin/DashboardScreen\";\nimport SalonDetailsScreen from \"./screens/admin/SalonDetailsScreen\";\nimport SalonStaffScreen from \"./screens/admin/SalonStaffScreen\";\nimport ManagerDashboardScreen from \"./screens/manager/DashboardScreen\";\nimport SalonDashboardScreen from \"./screens/manager/SalonDashboardScreen\";\nimport DisplaySettings from \"./components/DisplaySettings\";\nimport { AuthProvider, AuthContext } from \"./context/AuthContext\";\nimport { ThemeProvider, ThemeContext } from \"./context/ThemeContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    primary: '#0F4C75',\n    accent: '#3282B8',\n    background: '#F5F5F5',\n    text: '#1B262C'\n  })\n});\nvar CustomerTabs = function CustomerTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Services') {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (route.name === 'Appointments') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Services\",\n      component: ServicesScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Appointments\",\n      component: AppointmentsScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen\n    })]\n  });\n};\nvar AdminTabs = function AdminTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref3) {\n      var route = _ref3.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused,\n            color = _ref4.color,\n            size = _ref4.size;\n          var iconName;\n          if (route.name === 'Dashboard') {\n            iconName = focused ? 'grid' : 'grid-outline';\n          } else if (route.name === 'Services') {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (route.name === 'Appointments') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Dashboard\",\n      component: AdminDashboardScreen,\n      options: {\n        title: 'Admin Dashboard'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Services\",\n      component: ServicesScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Appointments\",\n      component: BarberAppointmentsScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen\n    })]\n  });\n};\nvar BarberTabs = function BarberTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref5) {\n      var route = _ref5.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref6) {\n          var focused = _ref6.focused,\n            color = _ref6.color,\n            size = _ref6.size;\n          var iconName;\n          if (route.name === 'Dashboard') {\n            iconName = focused ? 'grid' : 'grid-outline';\n          } else if (route.name === 'Appointments') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Dashboard\",\n      component: BarberDashboardScreen,\n      options: {\n        title: 'My Schedule'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Appointments\",\n      component: BarberAppointmentsScreen,\n      options: {\n        title: 'Appointments'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen\n    })]\n  });\n};\nvar ManagerTabs = function ManagerTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref7) {\n      var route = _ref7.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref8) {\n          var focused = _ref8.focused,\n            color = _ref8.color,\n            size = _ref8.size;\n          var iconName;\n          if (route.name === 'Dashboard') {\n            iconName = focused ? 'grid' : 'grid-outline';\n          } else if (route.name === 'Services') {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (route.name === 'Appointments') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Dashboard\",\n      component: ManagerDashboardScreen,\n      options: {\n        title: 'Manager Dashboard'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Services\",\n      component: ServicesScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Appointments\",\n      component: BarberAppointmentsScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen\n    })]\n  });\n};\nvar AuthStack = function AuthStack() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Register\",\n      component: RegisterScreen\n    })]\n  });\n};\nvar AuthNavigator = function AuthNavigator() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  var _useContext = useContext(AuthContext),\n    userToken = _useContext.userToken,\n    userInfo = _useContext.userInfo;\n  var _useState5 = useState('customer'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userRole = _useState6[0],\n    setUserRole = _useState6[1];\n  useEffect(function () {\n    var checkLoginStatus = function () {\n      var _ref9 = _asyncToGenerator(function* () {\n        try {\n          setIsLoading(true);\n          var token = yield AsyncStorage.getItem('userToken');\n          var userInfoString = yield AsyncStorage.getItem('userInfo');\n          console.log('Auth check - token present:', !!token);\n          console.log('Auth check - userInfo present:', !!userInfoString);\n          var isLoggedInStatus = !!(token && userInfoString);\n          setIsLoggedIn(isLoggedInStatus);\n          if (isLoggedInStatus && userInfoString) {\n            var userInfoObj = JSON.parse(userInfoString);\n            setUserRole(userInfoObj.role || 'customer');\n            console.log('User role set to:', userInfoObj.role || 'customer');\n          }\n        } catch (error) {\n          console.error('Error checking login status:', error);\n          setIsLoggedIn(false);\n        } finally {\n          setIsLoading(false);\n        }\n      });\n      return function checkLoginStatus() {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n    checkLoginStatus();\n  }, [userToken, userInfo]);\n  if (isLoading) {\n    return _jsxs(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: theme.colors.primary\n      }), _jsx(Text, {\n        style: {\n          marginTop: 10\n        },\n        children: \"Loading...\"\n      })]\n    });\n  }\n  var getMainComponent = function getMainComponent() {\n    switch (userRole) {\n      case 'admin':\n        return AdminTabs;\n      case 'manager':\n        return ManagerTabs;\n      case 'barber':\n        return BarberTabs;\n      default:\n        return CustomerTabs;\n    }\n  };\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [!isLoggedIn ? _jsx(Stack.Screen, {\n      name: \"Auth\",\n      component: AuthStack\n    }) : _jsx(Stack.Screen, {\n      name: \"Main\",\n      component: getMainComponent()\n    }), _jsx(Stack.Screen, {\n      name: \"Booking\",\n      component: BookingScreen,\n      options: {\n        headerShown: true,\n        title: 'Book Appointment'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"AdminDashboard\",\n      component: AdminDashboardScreen,\n      options: {\n        headerShown: true,\n        title: 'Admin Dashboard'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"ManagerDashboard\",\n      component: ManagerDashboardScreen,\n      options: {\n        headerShown: true,\n        title: 'Manager Dashboard'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"BarberAppointments\",\n      component: BarberAppointmentsScreen,\n      options: {\n        headerShown: true,\n        title: 'Appointments'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"SalonDetails\",\n      component: SalonDetailsScreen,\n      options: {\n        headerShown: true,\n        title: 'Edit Salon'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"SalonStaff\",\n      component: SalonStaffScreen,\n      options: {\n        headerShown: true,\n        title: 'Salon Staff'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"SalonDashboard\",\n      component: SalonDashboardScreen,\n      options: {\n        headerShown: true,\n        title: 'Salon Dashboard'\n      }\n    })]\n  });\n};\nexport default function App() {\n  return _jsx(ThemeProvider, {\n    children: _jsx(ThemeContext.Consumer, {\n      children: function children(_ref10) {\n        var theme = _ref10.theme,\n          isDarkMode = _ref10.isDarkMode;\n        return _jsx(AuthProvider, {\n          children: _jsx(PaperProvider, {\n            theme: theme,\n            children: _jsxs(NavigationContainer, {\n              ref: navigationRef,\n              theme: theme,\n              children: [_jsx(StatusBar, {\n                style: isDarkMode ? \"light\" : \"dark\"\n              }), _jsx(AuthNavigator, {})]\n            })\n          })\n        });\n      }\n    })\n  });\n}\nexport var navigationRef = createRef();\nexport function navigateToTab(tabName) {\n  var _navigationRef$curren;\n  (_navigationRef$curren = navigationRef.current) == null ? void 0 : _navigationRef$curren.navigate(tabName);\n}","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","createRef","View","ActivityIndicator","Text","StyleSheet","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","AsyncStorage","StatusBar","Ionicons","Provider","PaperProvider","LoginScreen","RegisterScreen","HomeScreen","ServicesScreen","BookingScreen","AppointmentsScreen","ProfileScreen","BarberAppointmentsScreen","BarberDashboardScreen","AdminDashboardScreen","SalonDetailsScreen","SalonStaffScreen","ManagerDashboardScreen","SalonDashboardScreen","DisplaySettings","AuthProvider","AuthContext","ThemeProvider","ThemeContext","jsx","_jsx","jsxs","_jsxs","Stack","Tab","theme","_objectSpread","DefaultTheme","colors","primary","accent","background","text","CustomerTabs","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","children","Screen","component","AdminTabs","_ref3","_ref4","options","title","BarberTabs","_ref5","_ref6","ManagerTabs","_ref7","_ref8","AuthStack","AuthNavigator","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","_useState3","_useState4","isLoading","setIsLoading","_useContext","userToken","userInfo","_useState5","_useState6","userRole","setUserRole","checkLoginStatus","_ref9","_asyncToGenerator","token","getItem","userInfoString","console","log","isLoggedInStatus","userInfoObj","JSON","parse","role","error","apply","arguments","style","flex","justifyContent","alignItems","marginTop","getMainComponent","App","Consumer","_ref10","isDarkMode","ref","navigationRef","navigateToTab","tabName","_navigationRef$curren","current","navigate"],"sources":["C:/Users/User/Downloads/mobile/App.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef, createRef } from 'react';\nimport { View, ActivityIndicator, Text, StyleSheet } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { StatusBar } from 'expo-status-bar';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { Provider as PaperProvider } from 'react-native-paper';\n\n// Auth Screens\nimport LoginScreen from './screens/auth/LoginScreen';\nimport RegisterScreen from './screens/auth/RegisterScreen';\n\n// Customer Screens\nimport HomeScreen from './screens/customer/HomeScreen';\nimport ServicesScreen from './screens/customer/ServicesScreen';\nimport BookingScreen from './screens/customer/BookingScreen';\nimport AppointmentsScreen from './screens/customer/AppointmentsScreen';\nimport ProfileScreen from './screens/customer/ProfileScreen';\n\n// Barber Screens\nimport BarberAppointmentsScreen from './screens/barber/BarberAppointmentsScreen';\nimport BarberDashboardScreen from './screens/barber/BarberDashboardScreen';\n\n// Admin Screens\nimport AdminDashboardScreen from './screens/admin/DashboardScreen';\nimport SalonDetailsScreen from './screens/admin/SalonDetailsScreen';\nimport SalonStaffScreen from './screens/admin/SalonStaffScreen';\n\n// Manager Screens\nimport ManagerDashboardScreen from './screens/manager/DashboardScreen';\nimport SalonDashboardScreen from './screens/manager/SalonDashboardScreen';\n\n// Components\nimport DisplaySettings from './components/DisplaySettings';\n\n// Context\nimport { AuthProvider, AuthContext } from './context/AuthContext';\nimport { ThemeProvider, ThemeContext } from './context/ThemeContext';\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\n// Custom theme\nconst theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: '#0F4C75',\n    accent: '#3282B8',\n    background: '#F5F5F5',\n    text: '#1B262C',\n  },\n};\n\n// Bottom Tab Navigator for Customer\nconst CustomerTabs = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Services') {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (route.name === 'Appointments') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false,\n      })}\n    >\n      <Tab.Screen name=\"Home\" component={HomeScreen} />\n      <Tab.Screen name=\"Services\" component={ServicesScreen} />\n      <Tab.Screen name=\"Appointments\" component={AppointmentsScreen} />\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n    </Tab.Navigator>\n  );\n};\n\n// Bottom Tab Navigator for Admin\nconst AdminTabs = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Dashboard') {\n            iconName = focused ? 'grid' : 'grid-outline';\n          } else if (route.name === 'Services') {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (route.name === 'Appointments') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false,\n      })}\n    >\n      <Tab.Screen \n        name=\"Dashboard\" \n        component={AdminDashboardScreen} \n        options={{ title: 'Admin Dashboard' }}\n      />\n      <Tab.Screen name=\"Services\" component={ServicesScreen} />\n      <Tab.Screen name=\"Appointments\" component={BarberAppointmentsScreen} />\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n    </Tab.Navigator>\n  );\n};\n\n// Bottom Tab Navigator for Barber\nconst BarberTabs = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Dashboard') {\n            iconName = focused ? 'grid' : 'grid-outline';\n          } else if (route.name === 'Appointments') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false,\n      })}\n    >\n      <Tab.Screen \n        name=\"Dashboard\" \n        component={BarberDashboardScreen} \n        options={{ title: 'My Schedule' }}\n      />\n      <Tab.Screen \n        name=\"Appointments\" \n        component={BarberAppointmentsScreen} \n        options={{ title: 'Appointments' }}\n      />\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n    </Tab.Navigator>\n  );\n};\n\n// Bottom Tab Navigator for Manager\nconst ManagerTabs = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Dashboard') {\n            iconName = focused ? 'grid' : 'grid-outline';\n          } else if (route.name === 'Services') {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (route.name === 'Appointments') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false,\n      })}\n    >\n      <Tab.Screen \n        name=\"Dashboard\" \n        component={ManagerDashboardScreen} \n        options={{ title: 'Manager Dashboard' }}\n      />\n      <Tab.Screen name=\"Services\" component={ServicesScreen} />\n      <Tab.Screen name=\"Appointments\" component={BarberAppointmentsScreen} />\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n    </Tab.Navigator>\n  );\n};\n\n// Auth Stack\nconst AuthStack = () => {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\n      <Stack.Screen name=\"Register\" component={RegisterScreen} />\n    </Stack.Navigator>\n  );\n};\n\n// Auth Navigator Component that manages the auth state\nconst AuthNavigator = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const { userToken, userInfo } = useContext(AuthContext);\n  const [userRole, setUserRole] = useState('customer');\n\n  // Check login status whenever userToken changes\n  useEffect(() => {\n    const checkLoginStatus = async () => {\n      try {\n        setIsLoading(true);\n        const token = await AsyncStorage.getItem('userToken');\n        const userInfoString = await AsyncStorage.getItem('userInfo');\n        console.log('Auth check - token present:', !!token);\n        console.log('Auth check - userInfo present:', !!userInfoString);\n        \n        // Only consider logged in if BOTH token and userInfo exist\n        const isLoggedInStatus = !!(token && userInfoString);\n        setIsLoggedIn(isLoggedInStatus);\n        \n        // Get user role from userInfo\n        if (isLoggedInStatus && userInfoString) {\n          const userInfoObj = JSON.parse(userInfoString);\n          setUserRole(userInfoObj.role || 'customer');\n          console.log('User role set to:', userInfoObj.role || 'customer');\n        }\n      } catch (error) {\n        console.error('Error checking login status:', error);\n        setIsLoggedIn(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    checkLoginStatus();\n  }, [userToken, userInfo]); // Re-run when either userToken or userInfo changes\n\n  if (isLoading) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n        <Text style={{ marginTop: 10 }}>Loading...</Text>\n      </View>\n    );\n  }\n\n  // Select the appropriate main component based on user role\n  const getMainComponent = () => {\n    switch (userRole) {\n      case 'admin':\n        return AdminTabs;\n      case 'manager':\n        return ManagerTabs;\n      case 'barber':\n        return BarberTabs;\n      default:\n        return CustomerTabs;\n    }\n  };\n\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      {!isLoggedIn ? (\n        <Stack.Screen name=\"Auth\" component={AuthStack} />\n      ) : (\n        <Stack.Screen name=\"Main\" component={getMainComponent()} />\n      )}\n      <Stack.Screen \n        name=\"Booking\" \n        component={BookingScreen} \n        options={{ headerShown: true, title: 'Book Appointment' }} \n      />\n      <Stack.Screen \n        name=\"AdminDashboard\" \n        component={AdminDashboardScreen} \n        options={{ headerShown: true, title: 'Admin Dashboard' }} \n      />\n      <Stack.Screen \n        name=\"ManagerDashboard\" \n        component={ManagerDashboardScreen} \n        options={{ headerShown: true, title: 'Manager Dashboard' }} \n      />\n      <Stack.Screen \n        name=\"BarberAppointments\" \n        component={BarberAppointmentsScreen} \n        options={{ headerShown: true, title: 'Appointments' }} \n      />\n      <Stack.Screen \n        name=\"SalonDetails\" \n        component={SalonDetailsScreen} \n        options={{ headerShown: true, title: 'Edit Salon' }} \n      />\n      <Stack.Screen \n        name=\"SalonStaff\" \n        component={SalonStaffScreen} \n        options={{ headerShown: true, title: 'Salon Staff' }} \n      />\n      <Stack.Screen \n        name=\"SalonDashboard\" \n        component={SalonDashboardScreen} \n        options={{ headerShown: true, title: 'Salon Dashboard' }} \n      />\n    </Stack.Navigator>\n  );\n};\n\n// Main App\nexport default function App() {\n  return (\n    <ThemeProvider>\n      <ThemeContext.Consumer>\n        {({ theme, isDarkMode }) => (\n          <AuthProvider>\n            <PaperProvider theme={theme}>\n              <NavigationContainer ref={navigationRef} theme={theme}>\n                <StatusBar style={isDarkMode ? \"light\" : \"dark\"} />\n                <AuthNavigator />\n              </NavigationContainer>\n            </PaperProvider>\n          </AuthProvider>\n        )}\n      </ThemeContext.Consumer>\n    </ThemeProvider>\n  );\n}\n\n// Helper function to navigate directly to a specific tab\n// This is accessible globally via the navigation ref\nexport const navigationRef = createRef();\n\nexport function navigateToTab(tabName) {\n  navigationRef.current?.navigate(tabName);\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}