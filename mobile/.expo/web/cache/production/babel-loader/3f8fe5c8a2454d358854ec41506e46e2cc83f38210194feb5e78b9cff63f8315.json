{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";export function resolve(styleProp,cleanedProps){if(styleProp){return StyleSheet?[styleProp,cleanedProps]:styleProp[Symbol.iterator]?Object.assign.apply(Object,[{}].concat(_toConsumableArray(styleProp),[cleanedProps])):Object.assign({},styleProp,cleanedProps);}else{return cleanedProps;}}","map":{"version":3,"names":["resolve","styleProp","cleanedProps","StyleSheet","Symbol","iterator","Object","assign","apply","concat","_toConsumableArray"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\react-native-svg\\src\\lib\\resolve.ts"],"sourcesContent":["import { StyleSheet } from 'react-native';\n\n// Kept in separate file, to avoid name collision with Symbol element\nexport function resolve<T>(styleProp: Iterable<T>, cleanedProps: T) {\n  if (styleProp) {\n    return StyleSheet\n      ? [styleProp, cleanedProps]\n      : // Compatibility for arrays of styles in plain react web\n      styleProp[Symbol.iterator]\n      ? Object.assign({}, ...styleProp, cleanedProps)\n      : Object.assign({}, styleProp, cleanedProps);\n  } else {\n    return cleanedProps;\n  }\n}\n"],"mappings":"0IAGA,MAAO,SAAS,CAAAA,OAAOA,CAAIC,SAAsB,CAAEC,YAAe,CAAE,CAClE,GAAID,SAAS,CAAE,CACb,MAAO,CAAAE,UAAU,CACb,CAACF,SAAS,CAAEC,YAAY,CAAC,CAE3BD,SAAS,CAACG,MAAM,CAACC,QAAQ,CAAC,CACxBC,MAAM,CAACC,MAAM,CAAAC,KAAA,CAAbF,MAAM,EAAQ,CAAC,CAAC,EAAAG,MAAA,CAAAC,kBAAA,CAAKT,SAAS,GAAEC,YAAY,GAAC,CAC7CI,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAAEN,SAAS,CAAEC,YAAY,CAAC,CAChD,CAAC,IAAM,CACL,MAAO,CAAAA,YAAY,CACrB,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}