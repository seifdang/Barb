{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Pressable from\"react-native-web/dist/exports/Pressable\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import{AdornmentSide}from'./enums';import{getTextColor}from'./utils';import{useInternalTheme}from'../../../core/theming';import{getConstants}from'../helpers';var AffixContext=React.createContext({textStyle:{fontFamily:'',color:''},topPosition:null,side:AdornmentSide.Left});var AffixAdornment=function AffixAdornment(_ref){var affix=_ref.affix,side=_ref.side,textStyle=_ref.textStyle,topPosition=_ref.topPosition,onLayout=_ref.onLayout,visible=_ref.visible,paddingHorizontal=_ref.paddingHorizontal,maxFontSizeMultiplier=_ref.maxFontSizeMultiplier,testID=_ref.testID,disabled=_ref.disabled;return React.createElement(AffixContext.Provider,{value:{side:side,textStyle:textStyle,topPosition:topPosition,onLayout:onLayout,visible:visible,paddingHorizontal:paddingHorizontal,maxFontSizeMultiplier:maxFontSizeMultiplier,testID:testID,disabled:disabled}},affix);};var TextInputAffix=function TextInputAffix(_ref2){var text=_ref2.text,labelStyle=_ref2.textStyle,themeOverrides=_ref2.theme,onTextLayout=_ref2.onLayout,onPress=_ref2.onPress,_ref2$accessibilityLa=_ref2.accessibilityLabel,accessibilityLabel=_ref2$accessibilityLa===void 0?text:_ref2$accessibilityLa;var theme=useInternalTheme(themeOverrides);var _getConstants=getConstants(theme.isV3),AFFIX_OFFSET=_getConstants.AFFIX_OFFSET;var _React$useContext=React.useContext(AffixContext),textStyle=_React$useContext.textStyle,onLayout=_React$useContext.onLayout,topPosition=_React$useContext.topPosition,side=_React$useContext.side,visible=_React$useContext.visible,paddingHorizontal=_React$useContext.paddingHorizontal,maxFontSizeMultiplier=_React$useContext.maxFontSizeMultiplier,testID=_React$useContext.testID,disabled=_React$useContext.disabled;var offset=typeof paddingHorizontal==='number'?paddingHorizontal:AFFIX_OFFSET;var style=_defineProperty({top:topPosition},side,offset);var textColor=getTextColor({theme:theme,disabled:disabled});var content=React.createElement(Text,{maxFontSizeMultiplier:maxFontSizeMultiplier,style:[{color:textColor},textStyle,labelStyle],onLayout:onTextLayout,testID:`${testID}-text`},text);return React.createElement(Animated.View,{style:[styles.container,style,{opacity:(visible===null||visible===void 0?void 0:visible.interpolate({inputRange:[0,1],outputRange:[1,0]}))||1}],onLayout:onLayout,testID:testID},onPress?React.createElement(Pressable,{onPress:onPress,accessibilityRole:\"button\",accessibilityLabel:accessibilityLabel},content):content);};TextInputAffix.displayName='TextInput.Affix';var styles=StyleSheet.create({container:{position:'absolute',justifyContent:'center',alignItems:'center'}});export default TextInputAffix;export{TextInputAffix,AffixAdornment};","map":{"version":3,"names":["React","Animated","Pressable","StyleSheet","Text","AdornmentSide","getTextColor","useInternalTheme","getConstants","AffixContext","createContext","textStyle","fontFamily","color","topPosition","side","Left","AffixAdornment","_ref","affix","onLayout","visible","paddingHorizontal","maxFontSizeMultiplier","testID","disabled","createElement","Provider","value","TextInputAffix","_ref2","text","labelStyle","themeOverrides","theme","onTextLayout","onPress","_ref2$accessibilityLa","accessibilityLabel","_getConstants","isV3","AFFIX_OFFSET","_React$useContext","useContext","offset","style","_defineProperty","top","textColor","content","View","styles","container","opacity","interpolate","inputRange","outputRange","accessibilityRole","displayName","create","position","justifyContent","alignItems"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\react-native-paper\\src\\components\\TextInput\\Adornment\\TextInputAffix.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Animated,\n  DimensionValue,\n  GestureResponderEvent,\n  LayoutChangeEvent,\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  Text,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\n\nimport { AdornmentSide } from './enums';\nimport { getTextColor } from './utils';\nimport { useInternalTheme } from '../../../core/theming';\nimport type { ThemeProp } from '../../../types';\nimport { getConstants } from '../helpers';\n\nexport type Props = {\n  /**\n   * Text to show.\n   */\n  text: string;\n  onLayout?: (event: LayoutChangeEvent) => void;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Accessibility label for the affix. This is read by the screen reader when the user taps the affix.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Style that is passed to the Text element.\n   */\n  textStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\ntype ContextState = {\n  topPosition: number | null;\n  onLayout?: (event: LayoutChangeEvent) => void;\n  visible?: Animated.Value;\n  textStyle?: StyleProp<TextStyle>;\n  side: AdornmentSide;\n  paddingHorizontal?: DimensionValue;\n  maxFontSizeMultiplier?: number | undefined | null;\n  testID?: string;\n  disabled?: boolean;\n};\n\nconst AffixContext = React.createContext<ContextState>({\n  textStyle: { fontFamily: '', color: '' },\n  topPosition: null,\n  side: AdornmentSide.Left,\n});\n\nconst AffixAdornment: React.FunctionComponent<\n  {\n    affix: React.ReactNode;\n    testID: string;\n  } & ContextState\n> = ({\n  affix,\n  side,\n  textStyle,\n  topPosition,\n  onLayout,\n  visible,\n  paddingHorizontal,\n  maxFontSizeMultiplier,\n  testID,\n  disabled,\n}) => {\n  return (\n    <AffixContext.Provider\n      value={{\n        side,\n        textStyle,\n        topPosition,\n        onLayout,\n        visible,\n        paddingHorizontal,\n        maxFontSizeMultiplier,\n        testID,\n        disabled,\n      }}\n    >\n      {affix}\n    </AffixContext.Provider>\n  );\n};\n\n/**\n * A component to render a leading / trailing text in the TextInput\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *   return (\n *     <TextInput\n *       mode=\"outlined\"\n *       label=\"Outlined input\"\n *       placeholder=\"Type something\"\n *       right={<TextInput.Affix text=\"/100\" />}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst TextInputAffix = ({\n  text,\n  textStyle: labelStyle,\n  theme: themeOverrides,\n  onLayout: onTextLayout,\n  onPress,\n  accessibilityLabel = text,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { AFFIX_OFFSET } = getConstants(theme.isV3);\n\n  const {\n    textStyle,\n    onLayout,\n    topPosition,\n    side,\n    visible,\n    paddingHorizontal,\n    maxFontSizeMultiplier,\n    testID,\n    disabled,\n  } = React.useContext(AffixContext);\n\n  const offset =\n    typeof paddingHorizontal === 'number' ? paddingHorizontal : AFFIX_OFFSET;\n\n  const style = {\n    top: topPosition,\n    [side]: offset,\n  } as ViewStyle;\n\n  const textColor = getTextColor({ theme, disabled });\n\n  const content = (\n    <Text\n      maxFontSizeMultiplier={maxFontSizeMultiplier}\n      style={[{ color: textColor }, textStyle, labelStyle]}\n      onLayout={onTextLayout}\n      testID={`${testID}-text`}\n    >\n      {text}\n    </Text>\n  );\n\n  return (\n    <Animated.View\n      style={[\n        styles.container,\n        style,\n        {\n          opacity:\n            visible?.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 0],\n            }) || 1,\n        },\n      ]}\n      onLayout={onLayout}\n      testID={testID}\n    >\n      {onPress ? (\n        <Pressable\n          onPress={onPress}\n          accessibilityRole=\"button\"\n          accessibilityLabel={accessibilityLabel}\n        >\n          {content}\n        </Pressable>\n      ) : (\n        content\n      )}\n    </Animated.View>\n  );\n};\n\nTextInputAffix.displayName = 'TextInput.Affix';\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default TextInputAffix;\n\n// @component-docs ignore-next-line\nexport { TextInputAffix, AffixAdornment };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}