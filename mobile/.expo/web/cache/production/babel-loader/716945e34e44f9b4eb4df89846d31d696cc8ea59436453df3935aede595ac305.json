{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"theme\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import CheckboxAndroid from'./CheckboxAndroid';import CheckboxIOS from'./CheckboxIOS';import{useInternalTheme}from'../../core/theming';var Checkbox=function Checkbox(_ref){var themeOverrides=_ref.theme,props=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);return\"web\"==='ios'?React.createElement(CheckboxIOS,_extends({},props,{theme:theme})):React.createElement(CheckboxAndroid,_extends({},props,{theme:theme}));};export default Checkbox;var CheckboxWithTheme=Checkbox;export{CheckboxWithTheme as Checkbox};","map":{"version":3,"names":["React","Platform","CheckboxAndroid","CheckboxIOS","useInternalTheme","Checkbox","_ref","themeOverrides","theme","props","_objectWithoutProperties","_excluded","createElement","_extends","CheckboxWithTheme"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\react-native-paper\\src\\components\\Checkbox\\Checkbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport { GestureResponderEvent, Platform } from 'react-native';\n\nimport CheckboxAndroid from './CheckboxAndroid';\nimport CheckboxIOS from './CheckboxIOS';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\n\nexport type Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState(false);\n *\n *   return (\n *     <Checkbox\n *       status={checked ? 'checked' : 'unchecked'}\n *       onPress={() => {\n *         setChecked(!checked);\n *       }}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Checkbox = ({ theme: themeOverrides, ...props }: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  return Platform.OS === 'ios' ? (\n    <CheckboxIOS {...props} theme={theme} />\n  ) : (\n    <CheckboxAndroid {...props} theme={theme} />\n  );\n};\n\nexport default Checkbox;\n\n// @component-docs ignore-next-line\nconst CheckboxWithTheme = Checkbox;\n// @component-docs ignore-next-line\nexport { CheckboxWithTheme as Checkbox };\n"],"mappings":"wZAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,QAAA,8CAG9B,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,OAASC,gBAAgB,KAAQ,oBAAoB,CA0DrD,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAGC,IAAA,CAAgD,IAAtC,CAAAC,cAAc,CAAmBD,IAAA,CAAxCE,KAAK,CAAqBC,KAAA,CAAAC,wBAAA,CAAcJ,IAAA,CAAAK,SAAA,EAC1D,GAAM,CAAAH,KAAK,CAAGJ,gBAAgB,CAACG,cAAc,CAAC,CAC9C,MAAO,QAAgB,KAAK,CAC1BP,KAAA,CAAAY,aAAA,CAACT,WAAW,CAAAU,QAAA,IAAKJ,KAAK,EAAED,KAAK,CAAEA,KAAM,EAAE,CAAC,CAExCR,KAAA,CAAAY,aAAA,CAACV,eAAe,CAAAW,QAAA,IAAKJ,KAAK,EAAED,KAAK,CAAEA,KAAM,EAAE,CAC5C,CACH,CAAC,CAED,cAAe,CAAAH,QAAQ,CAGvB,GAAM,CAAAS,iBAAiB,CAAGT,QAAQ,CAElC,OAASS,iBAAiB,GAAI,CAAAT,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}