{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"disabled\",\"onPress\",\"theme\",\"value\",\"status\",\"testID\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{RadioButtonContext}from'./RadioButtonGroup';import{handlePress,isChecked}from'./utils';import{useInternalTheme}from'../../core/theming';import{getAndroidSelectionControlColor}from'../Checkbox/utils';import TouchableRipple from'../TouchableRipple/TouchableRipple';var BORDER_WIDTH=2;var RadioButtonAndroid=function RadioButtonAndroid(_ref){var disabled=_ref.disabled,onPress=_ref.onPress,themeOverrides=_ref.theme,value=_ref.value,status=_ref.status,testID=_ref.testID,rest=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);var _React$useRef=React.useRef(new Animated.Value(BORDER_WIDTH)),borderAnim=_React$useRef.current;var _React$useRef2=React.useRef(new Animated.Value(1)),radioAnim=_React$useRef2.current;var isFirstRendering=React.useRef(true);var scale=theme.animation.scale;React.useEffect(function(){if(isFirstRendering.current){isFirstRendering.current=false;return;}if(status==='checked'){radioAnim.setValue(1.2);Animated.timing(radioAnim,{toValue:1,duration:150*scale,useNativeDriver:true}).start();}else{borderAnim.setValue(10);Animated.timing(borderAnim,{toValue:BORDER_WIDTH,duration:150*scale,useNativeDriver:false}).start();}},[status,borderAnim,radioAnim,scale]);return React.createElement(RadioButtonContext.Consumer,null,function(context){var checked=isChecked({contextValue:context===null||context===void 0?void 0:context.value,status:status,value:value})==='checked';var _getAndroidSelectionC=getAndroidSelectionControlColor({theme:theme,disabled:disabled,checked:checked,customColor:rest.color,customUncheckedColor:rest.uncheckedColor}),rippleColor=_getAndroidSelectionC.rippleColor,selectionControlColor=_getAndroidSelectionC.selectionControlColor;return React.createElement(TouchableRipple,_extends({},rest,{borderless:true,rippleColor:rippleColor,onPress:disabled?undefined:function(event){handlePress({onPress:onPress,onValueChange:context===null||context===void 0?void 0:context.onValueChange,value:value,event:event});},accessibilityRole:\"radio\",accessibilityState:{disabled:disabled,checked:checked},accessibilityLiveRegion:\"polite\",style:styles.container,testID:testID,theme:theme}),React.createElement(Animated.View,{style:[styles.radio,{borderColor:selectionControlColor,borderWidth:borderAnim}]},checked?React.createElement(View,{style:[StyleSheet.absoluteFill,styles.radioContainer]},React.createElement(Animated.View,{style:[styles.dot,{backgroundColor:selectionControlColor,transform:[{scale:radioAnim}]}]})):null));});};RadioButtonAndroid.displayName='RadioButton.Android';var styles=StyleSheet.create({container:{borderRadius:18},radioContainer:{alignItems:'center',justifyContent:'center'},radio:{height:20,width:20,borderRadius:10,margin:8},dot:{height:10,width:10,borderRadius:5}});export default RadioButtonAndroid;export{RadioButtonAndroid};","map":{"version":3,"names":["React","Animated","StyleSheet","View","RadioButtonContext","handlePress","isChecked","useInternalTheme","getAndroidSelectionControlColor","TouchableRipple","BORDER_WIDTH","RadioButtonAndroid","_ref","disabled","onPress","themeOverrides","theme","value","status","testID","rest","_objectWithoutProperties","_excluded","_React$useRef","useRef","Value","borderAnim","current","_React$useRef2","radioAnim","isFirstRendering","scale","animation","useEffect","setValue","timing","toValue","duration","useNativeDriver","start","createElement","Consumer","context","checked","contextValue","_getAndroidSelectionC","customColor","color","customUncheckedColor","uncheckedColor","rippleColor","selectionControlColor","_extends","borderless","undefined","event","onValueChange","accessibilityRole","accessibilityState","accessibilityLiveRegion","style","styles","container","radio","borderColor","borderWidth","absoluteFill","radioContainer","dot","backgroundColor","transform","displayName","create","borderRadius","alignItems","justifyContent","height","width","margin"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\react-native-paper\\src\\components\\RadioButton\\RadioButtonAndroid.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport { handlePress, isChecked } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport { getAndroidSelectionControlColor } from '../Checkbox/utils';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (param?: any) => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\nconst BORDER_WIDTH = 2;\n\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst RadioButtonAndroid = ({\n  disabled,\n  onPress,\n  theme: themeOverrides,\n  value,\n  status,\n  testID,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { current: borderAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(BORDER_WIDTH)\n  );\n\n  const { current: radioAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(1)\n  );\n\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    if (status === 'checked') {\n      radioAnim.setValue(1.2);\n\n      Animated.timing(radioAnim, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      borderAnim.setValue(10);\n\n      Animated.timing(borderAnim, {\n        toValue: BORDER_WIDTH,\n        duration: 150 * scale,\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [status, borderAnim, radioAnim, scale]);\n\n  return (\n    <RadioButtonContext.Consumer>\n      {(context?: RadioButtonContextType) => {\n        const checked =\n          isChecked({\n            contextValue: context?.value,\n            status,\n            value,\n          }) === 'checked';\n\n        const { rippleColor, selectionControlColor } =\n          getAndroidSelectionControlColor({\n            theme,\n            disabled,\n            checked,\n            customColor: rest.color,\n            customUncheckedColor: rest.uncheckedColor,\n          });\n\n        return (\n          <TouchableRipple\n            {...rest}\n            borderless\n            rippleColor={rippleColor}\n            onPress={\n              disabled\n                ? undefined\n                : (event) => {\n                    handlePress({\n                      onPress,\n                      onValueChange: context?.onValueChange,\n                      value,\n                      event,\n                    });\n                  }\n            }\n            accessibilityRole=\"radio\"\n            accessibilityState={{ disabled, checked }}\n            accessibilityLiveRegion=\"polite\"\n            style={styles.container}\n            testID={testID}\n            theme={theme}\n          >\n            <Animated.View\n              style={[\n                styles.radio,\n                {\n                  borderColor: selectionControlColor,\n                  borderWidth: borderAnim,\n                },\n              ]}\n            >\n              {checked ? (\n                <View style={[StyleSheet.absoluteFill, styles.radioContainer]}>\n                  <Animated.View\n                    style={[\n                      styles.dot,\n                      {\n                        backgroundColor: selectionControlColor,\n                        transform: [{ scale: radioAnim }],\n                      },\n                    ]}\n                  />\n                </View>\n              ) : null}\n            </Animated.View>\n          </TouchableRipple>\n        );\n      }}\n    </RadioButtonContext.Consumer>\n  );\n};\n\nRadioButtonAndroid.displayName = 'RadioButton.Android';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n  },\n  radioContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  radio: {\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    margin: 8,\n  },\n  dot: {\n    height: 10,\n    width: 10,\n    borderRadius: 5,\n  },\n});\n\nexport default RadioButtonAndroid;\n\n// @component-docs ignore-next-line\nexport { RadioButtonAndroid };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}