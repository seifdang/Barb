{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"style\",\"type\",\"visible\",\"theme\",\"onLayout\",\"padding\",\"disabled\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{getTextColor}from'./utils';import{useInternalTheme}from'../../core/theming';import AnimatedText from'../Typography/AnimatedText';var HelperText=function HelperText(_ref){var style=_ref.style,_ref$type=_ref.type,type=_ref$type===void 0?'info':_ref$type,_ref$visible=_ref.visible,visible=_ref$visible===void 0?true:_ref$visible,themeOverrides=_ref.theme,onLayout=_ref.onLayout,_ref$padding=_ref.padding,padding=_ref$padding===void 0?'normal':_ref$padding,disabled=_ref.disabled,rest=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);var _React$useRef=React.useRef(new Animated.Value(visible?1:0)),shown=_React$useRef.current;var _React$useRef2=React.useRef(0),textHeight=_React$useRef2.current;var scale=theme.animation.scale;var _rest$maxFontSizeMult=rest.maxFontSizeMultiplier,maxFontSizeMultiplier=_rest$maxFontSizeMult===void 0?1.5:_rest$maxFontSizeMult;React.useEffect(function(){if(visible){Animated.timing(shown,{toValue:1,duration:150*scale,useNativeDriver:true}).start();}else{Animated.timing(shown,{toValue:0,duration:180*scale,useNativeDriver:true}).start();}},[visible,scale,shown]);var handleTextLayout=function handleTextLayout(e){onLayout===null||onLayout===void 0?void 0:onLayout(e);textHeight=e.nativeEvent.layout.height;};var textColor=getTextColor({theme:theme,disabled:disabled,type:type});return React.createElement(AnimatedText,_extends({onLayout:handleTextLayout,style:[styles.text,padding!=='none'?styles.padding:{},{color:textColor,opacity:shown,transform:visible&&type==='error'?[{translateY:shown.interpolate({inputRange:[0,1],outputRange:[-textHeight/2,0]})}]:[]},style],maxFontSizeMultiplier:maxFontSizeMultiplier},rest),rest.children);};var styles=StyleSheet.create({text:{fontSize:12,paddingVertical:4},padding:{paddingHorizontal:12}});export default HelperText;","map":{"version":3,"names":["React","Animated","StyleSheet","getTextColor","useInternalTheme","AnimatedText","HelperText","_ref","style","_ref$type","type","_ref$visible","visible","themeOverrides","theme","onLayout","_ref$padding","padding","disabled","rest","_objectWithoutProperties","_excluded","_React$useRef","useRef","Value","shown","current","_React$useRef2","textHeight","scale","animation","_rest$maxFontSizeMult","maxFontSizeMultiplier","useEffect","timing","toValue","duration","useNativeDriver","start","handleTextLayout","e","nativeEvent","layout","height","textColor","createElement","_extends","styles","text","color","opacity","transform","translateY","interpolate","inputRange","outputRange","children","create","fontSize","paddingVertical","paddingHorizontal"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\react-native-paper\\src\\components\\HelperText\\HelperText.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n} from 'react-native';\n\nimport { getTextColor } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $Omit, ThemeProp } from '../../types';\nimport AnimatedText from '../Typography/AnimatedText';\n\nexport type Props = $Omit<\n  $Omit<React.ComponentPropsWithRef<typeof AnimatedText>, 'padding'>,\n  'type'\n> & {\n  /**\n   * Type of the helper text.\n   */\n  type: 'error' | 'info';\n  /**\n   * Text content of the HelperText.\n   */\n  children: React.ReactNode;\n  /**\n   * Whether to display the helper text.\n   */\n  visible?: boolean;\n  /**\n   * Whether to apply padding to the helper text.\n   */\n  padding?: 'none' | 'normal';\n  /**\n   * Whether the text input tied with helper text is disabled.\n   */\n  disabled?: boolean;\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\n/**\n * Helper text is used in conjuction with input elements to provide additional hints for the user.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { HelperText, TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *    const onChangeText = text => setText(text);\n *\n *   const hasErrors = () => {\n *     return !text.includes('@');\n *   };\n *\n *  return (\n *     <View>\n *       <TextInput label=\"Email\" value={text} onChangeText={onChangeText} />\n *       <HelperText type=\"error\" visible={hasErrors()}>\n *         Email address is invalid!\n *       </HelperText>\n *     </View>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst HelperText = ({\n  style,\n  type = 'info',\n  visible = true,\n  theme: themeOverrides,\n  onLayout,\n  padding = 'normal',\n  disabled,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { current: shown } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n\n  let { current: textHeight } = React.useRef<number>(0);\n\n  const { scale } = theme.animation;\n\n  const { maxFontSizeMultiplier = 1.5 } = rest;\n\n  React.useEffect(() => {\n    if (visible) {\n      // show text\n      Animated.timing(shown, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      // hide text\n      Animated.timing(shown, {\n        toValue: 0,\n        duration: 180 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, shown]);\n\n  const handleTextLayout = (e: LayoutChangeEvent) => {\n    onLayout?.(e);\n    textHeight = e.nativeEvent.layout.height;\n  };\n\n  const textColor = getTextColor({ theme, disabled, type });\n\n  return (\n    <AnimatedText\n      onLayout={handleTextLayout}\n      style={[\n        styles.text,\n        padding !== 'none' ? styles.padding : {},\n        {\n          color: textColor,\n          opacity: shown,\n          transform:\n            visible && type === 'error'\n              ? [\n                  {\n                    translateY: shown.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [-textHeight / 2, 0],\n                    }),\n                  },\n                ]\n              : [],\n        },\n        style,\n      ]}\n      maxFontSizeMultiplier={maxFontSizeMultiplier}\n      {...rest}\n    >\n      {rest.children}\n    </AnimatedText>\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 12,\n    paddingVertical: 4,\n  },\n  padding: {\n    paddingHorizontal: 12,\n  },\n});\n\nexport default HelperText;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}