{"ast":null,"code":"import{useCallback,useEffect}from'react';export default(function(props){var onChangeOffset=props.onChangeOffset,scrollOffset=props.scrollOffset,scrollViewRef=props.scrollViewRef;useEffect(function(){if(scrollOffset!==undefined){var _scrollViewRef$curren;scrollViewRef==null?void 0:(_scrollViewRef$curren=scrollViewRef.current)==null?void 0:_scrollViewRef$curren.scrollTo({y:scrollOffset,animated:false});}},[scrollOffset]);var onScrollEndDrag=useCallback(function(event){var _event$nativeEvent$ve;var offset=event.nativeEvent.contentOffset.y;var velocity=(_event$nativeEvent$ve=event.nativeEvent.velocity)==null?void 0:_event$nativeEvent$ve.y;if(velocity===0){onChangeOffset==null?void 0:onChangeOffset(offset);}},[]);var onMomentumScrollEnd=useCallback(function(event){onChangeOffset==null?void 0:onChangeOffset(event.nativeEvent.contentOffset.y);},[]);return{scrollEvents:{onScrollEndDrag:onScrollEndDrag,onMomentumScrollEnd:onMomentumScrollEnd}};});","map":{"version":3,"names":["useCallback","useEffect","props","onChangeOffset","scrollOffset","scrollViewRef","undefined","_scrollViewRef$curren","current","scrollTo","y","animated","onScrollEndDrag","event","_event$nativeEvent$ve","offset","nativeEvent","contentOffset","velocity","onMomentumScrollEnd","scrollEvents"],"sources":["C:/Users/User/Downloads/git_frontend/mobile/node_modules/react-native-calendars/src/timeline/useTimelineOffset.js"],"sourcesContent":["import { useCallback, useEffect } from 'react';\nexport default (props) => {\n    const { onChangeOffset, scrollOffset, scrollViewRef } = props;\n    useEffect(() => {\n        // NOTE: The main reason for this feature is to sync the offset\n        // between all of the timelines in the TimelineList component\n        if (scrollOffset !== undefined) {\n            scrollViewRef?.current?.scrollTo({\n                y: scrollOffset,\n                animated: false\n            });\n        }\n    }, [scrollOffset]);\n    const onScrollEndDrag = useCallback((event) => {\n        const offset = event.nativeEvent.contentOffset.y;\n        const velocity = event.nativeEvent.velocity?.y;\n        if (velocity === 0) {\n            onChangeOffset?.(offset);\n        }\n    }, []);\n    const onMomentumScrollEnd = useCallback((event) => {\n        onChangeOffset?.(event.nativeEvent.contentOffset.y);\n    }, []);\n    return {\n        scrollEvents: {\n            onScrollEndDrag,\n            onMomentumScrollEnd\n        }\n    };\n};\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,SAAS,KAAQ,OAAO,CAC9C,eAAe,SAACC,KAAK,CAAK,CACtB,GAAQ,CAAAC,cAAc,CAAkCD,KAAK,CAArDC,cAAc,CAAEC,YAAY,CAAoBF,KAAK,CAArCE,YAAY,CAAEC,aAAa,CAAKH,KAAK,CAAvBG,aAAa,CACnDJ,SAAS,CAAC,UAAM,CAGZ,GAAIG,YAAY,GAAKE,SAAS,CAAE,KAAAC,qBAAA,CAC5BF,aAAa,eAAAE,qBAAA,CAAbF,aAAa,CAAEG,OAAO,eAAtBD,qBAAA,CAAwBE,QAAQ,CAAC,CAC7BC,CAAC,CAAEN,YAAY,CACfO,QAAQ,CAAE,KACd,CAAC,CAAC,CACN,CACJ,CAAC,CAAE,CAACP,YAAY,CAAC,CAAC,CAClB,GAAM,CAAAQ,eAAe,CAAGZ,WAAW,CAAC,SAACa,KAAK,CAAK,KAAAC,qBAAA,CAC3C,GAAM,CAAAC,MAAM,CAAGF,KAAK,CAACG,WAAW,CAACC,aAAa,CAACP,CAAC,CAChD,GAAM,CAAAQ,QAAQ,EAAAJ,qBAAA,CAAGD,KAAK,CAACG,WAAW,CAACE,QAAQ,eAA1BJ,qBAAA,CAA4BJ,CAAC,CAC9C,GAAIQ,QAAQ,GAAK,CAAC,CAAE,CAChBf,cAAc,cAAdA,cAAc,CAAGY,MAAM,CAAC,CAC5B,CACJ,CAAC,CAAE,EAAE,CAAC,CACN,GAAM,CAAAI,mBAAmB,CAAGnB,WAAW,CAAC,SAACa,KAAK,CAAK,CAC/CV,cAAc,cAAdA,cAAc,CAAGU,KAAK,CAACG,WAAW,CAACC,aAAa,CAACP,CAAC,CAAC,CACvD,CAAC,CAAE,EAAE,CAAC,CACN,MAAO,CACHU,YAAY,CAAE,CACVR,eAAe,CAAfA,eAAe,CACfO,mBAAmB,CAAnBA,mBACJ,CACJ,CAAC,CACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}