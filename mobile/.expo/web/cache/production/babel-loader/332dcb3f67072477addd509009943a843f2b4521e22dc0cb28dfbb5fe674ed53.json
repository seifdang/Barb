{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import React,{useState,useEffect,useContext,useRef,createRef}from'react';import View from\"react-native-web/dist/exports/View\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{NavigationContainer}from'@react-navigation/native';import{createNativeStackNavigator}from'@react-navigation/native-stack';import{createBottomTabNavigator}from'@react-navigation/bottom-tabs';import AsyncStorage from'@react-native-async-storage/async-storage';import{StatusBar}from'expo-status-bar';import Ionicons from'react-native-vector-icons/Ionicons';import{Provider as PaperProvider}from'react-native-paper';import LoginScreen from'./screens/auth/LoginScreen';import RegisterScreen from'./screens/auth/RegisterScreen';import HomeScreen from'./screens/customer/HomeScreen';import ServicesScreen from'./screens/customer/ServicesScreen';import BookingScreen from'./screens/customer/BookingScreen';import AppointmentsScreen from'./screens/customer/AppointmentsScreen';import ProfileScreen from'./screens/customer/ProfileScreen';import BarberAppointmentsScreen from'./screens/barber/BarberAppointmentsScreen';import BarberDashboardScreen from'./screens/barber/BarberDashboardScreen';import AdminDashboardScreen from'./screens/admin/DashboardScreen';import SalonDetailsScreen from'./screens/admin/SalonDetailsScreen';import SalonStaffScreen from'./screens/admin/SalonStaffScreen';import ManagerDashboardScreen from'./screens/manager/DashboardScreen';import SalonDashboardScreen from'./screens/manager/SalonDashboardScreen';import DisplaySettings from'./components/DisplaySettings';import{AuthProvider,AuthContext}from'./context/AuthContext';import{ThemeProvider,ThemeContext}from'./context/ThemeContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var Stack=createNativeStackNavigator();var Tab=createBottomTabNavigator();var theme=_objectSpread(_objectSpread({},DefaultTheme),{},{colors:_objectSpread(_objectSpread({},DefaultTheme.colors),{},{primary:'#0F4C75',accent:'#3282B8',background:'#F5F5F5',text:'#1B262C'})});var CustomerTabs=function CustomerTabs(){return _jsxs(Tab.Navigator,{screenOptions:function screenOptions(_ref){var route=_ref.route;return{tabBarIcon:function tabBarIcon(_ref2){var focused=_ref2.focused,color=_ref2.color,size=_ref2.size;var iconName;if(route.name==='Home'){iconName=focused?'home':'home-outline';}else if(route.name==='Services'){iconName=focused?'list':'list-outline';}else if(route.name==='Appointments'){iconName=focused?'calendar':'calendar-outline';}else if(route.name==='Profile'){iconName=focused?'person':'person-outline';}return _jsx(Ionicons,{name:iconName,size:size,color:color});},tabBarActiveTintColor:theme.colors.primary,tabBarInactiveTintColor:'gray',headerShown:false};},children:[_jsx(Tab.Screen,{name:\"Home\",component:HomeScreen}),_jsx(Tab.Screen,{name:\"Services\",component:ServicesScreen}),_jsx(Tab.Screen,{name:\"Appointments\",component:AppointmentsScreen}),_jsx(Tab.Screen,{name:\"Profile\",component:ProfileScreen})]});};var AdminTabs=function AdminTabs(){return _jsxs(Tab.Navigator,{screenOptions:function screenOptions(_ref3){var route=_ref3.route;return{tabBarIcon:function tabBarIcon(_ref4){var focused=_ref4.focused,color=_ref4.color,size=_ref4.size;var iconName;if(route.name==='Dashboard'){iconName=focused?'grid':'grid-outline';}else if(route.name==='Services'){iconName=focused?'list':'list-outline';}else if(route.name==='Appointments'){iconName=focused?'calendar':'calendar-outline';}else if(route.name==='Profile'){iconName=focused?'person':'person-outline';}return _jsx(Ionicons,{name:iconName,size:size,color:color});},tabBarActiveTintColor:theme.colors.primary,tabBarInactiveTintColor:'gray',headerShown:false};},children:[_jsx(Tab.Screen,{name:\"Dashboard\",component:AdminDashboardScreen,options:{title:'Admin Dashboard'}}),_jsx(Tab.Screen,{name:\"Services\",component:ServicesScreen}),_jsx(Tab.Screen,{name:\"Appointments\",component:BarberAppointmentsScreen}),_jsx(Tab.Screen,{name:\"Profile\",component:ProfileScreen})]});};var BarberTabs=function BarberTabs(){return _jsxs(Tab.Navigator,{screenOptions:function screenOptions(_ref5){var route=_ref5.route;return{tabBarIcon:function tabBarIcon(_ref6){var focused=_ref6.focused,color=_ref6.color,size=_ref6.size;var iconName;if(route.name==='Dashboard'){iconName=focused?'grid':'grid-outline';}else if(route.name==='Appointments'){iconName=focused?'calendar':'calendar-outline';}else if(route.name==='Profile'){iconName=focused?'person':'person-outline';}return _jsx(Ionicons,{name:iconName,size:size,color:color});},tabBarActiveTintColor:theme.colors.primary,tabBarInactiveTintColor:'gray',headerShown:false};},children:[_jsx(Tab.Screen,{name:\"Dashboard\",component:BarberDashboardScreen,options:{title:'My Schedule'}}),_jsx(Tab.Screen,{name:\"Appointments\",component:BarberAppointmentsScreen,options:{title:'Appointments'}}),_jsx(Tab.Screen,{name:\"Profile\",component:ProfileScreen})]});};var ManagerTabs=function ManagerTabs(){return _jsxs(Tab.Navigator,{screenOptions:function screenOptions(_ref7){var route=_ref7.route;return{tabBarIcon:function tabBarIcon(_ref8){var focused=_ref8.focused,color=_ref8.color,size=_ref8.size;var iconName;if(route.name==='Dashboard'){iconName=focused?'grid':'grid-outline';}else if(route.name==='Services'){iconName=focused?'list':'list-outline';}else if(route.name==='Appointments'){iconName=focused?'calendar':'calendar-outline';}else if(route.name==='Profile'){iconName=focused?'person':'person-outline';}return _jsx(Ionicons,{name:iconName,size:size,color:color});},tabBarActiveTintColor:theme.colors.primary,tabBarInactiveTintColor:'gray',headerShown:false};},children:[_jsx(Tab.Screen,{name:\"Dashboard\",component:ManagerDashboardScreen,options:{title:'Manager Dashboard'}}),_jsx(Tab.Screen,{name:\"Services\",component:ServicesScreen}),_jsx(Tab.Screen,{name:\"Appointments\",component:BarberAppointmentsScreen}),_jsx(Tab.Screen,{name:\"Profile\",component:ProfileScreen})]});};var AuthStack=function AuthStack(){return _jsxs(Stack.Navigator,{screenOptions:{headerShown:false},children:[_jsx(Stack.Screen,{name:\"Login\",component:LoginScreen}),_jsx(Stack.Screen,{name:\"Register\",component:RegisterScreen})]});};var AuthNavigator=function AuthNavigator(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoggedIn=_useState2[0],setIsLoggedIn=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useContext=useContext(AuthContext),userToken=_useContext.userToken,userInfo=_useContext.userInfo;var _useState5=useState('customer'),_useState6=_slicedToArray(_useState5,2),userRole=_useState6[0],setUserRole=_useState6[1];useEffect(function(){var checkLoginStatus=function(){var _ref9=_asyncToGenerator(function*(){try{setIsLoading(true);var token=yield AsyncStorage.getItem('userToken');var userInfoString=yield AsyncStorage.getItem('userInfo');console.log('Auth check - token present:',!!token);console.log('Auth check - userInfo present:',!!userInfoString);var isLoggedInStatus=!!(token&&userInfoString);setIsLoggedIn(isLoggedInStatus);if(isLoggedInStatus&&userInfoString){var userInfoObj=JSON.parse(userInfoString);setUserRole(userInfoObj.role||'customer');console.log('User role set to:',userInfoObj.role||'customer');}}catch(error){console.error('Error checking login status:',error);setIsLoggedIn(false);}finally{setIsLoading(false);}});return function checkLoginStatus(){return _ref9.apply(this,arguments);};}();checkLoginStatus();},[userToken,userInfo]);if(isLoading){return _jsxs(View,{style:{flex:1,justifyContent:'center',alignItems:'center'},children:[_jsx(ActivityIndicator,{size:\"large\",color:theme.colors.primary}),_jsx(Text,{style:{marginTop:10},children:\"Loading...\"})]});}var getMainComponent=function getMainComponent(){switch(userRole){case'admin':return AdminTabs;case'manager':return ManagerTabs;case'barber':return BarberTabs;default:return CustomerTabs;}};return _jsxs(Stack.Navigator,{screenOptions:{headerShown:false},children:[!isLoggedIn?_jsx(Stack.Screen,{name:\"Auth\",component:AuthStack}):_jsx(Stack.Screen,{name:\"Main\",component:getMainComponent()}),_jsx(Stack.Screen,{name:\"Booking\",component:BookingScreen,options:{headerShown:true,title:'Book Appointment'}}),_jsx(Stack.Screen,{name:\"AdminDashboard\",component:AdminDashboardScreen,options:{headerShown:true,title:'Admin Dashboard'}}),_jsx(Stack.Screen,{name:\"ManagerDashboard\",component:ManagerDashboardScreen,options:{headerShown:true,title:'Manager Dashboard'}}),_jsx(Stack.Screen,{name:\"BarberAppointments\",component:BarberAppointmentsScreen,options:{headerShown:true,title:'Appointments'}}),_jsx(Stack.Screen,{name:\"SalonDetails\",component:SalonDetailsScreen,options:{headerShown:true,title:'Edit Salon'}}),_jsx(Stack.Screen,{name:\"SalonStaff\",component:SalonStaffScreen,options:{headerShown:true,title:'Salon Staff'}}),_jsx(Stack.Screen,{name:\"SalonDashboard\",component:SalonDashboardScreen,options:{headerShown:true,title:'Salon Dashboard'}})]});};export default function App(){return _jsx(ThemeProvider,{children:_jsx(ThemeContext.Consumer,{children:function children(_ref10){var theme=_ref10.theme,isDarkMode=_ref10.isDarkMode;return _jsx(AuthProvider,{children:_jsx(PaperProvider,{theme:theme,children:_jsxs(NavigationContainer,{ref:navigationRef,theme:theme,children:[_jsx(StatusBar,{style:isDarkMode?\"light\":\"dark\"}),_jsx(AuthNavigator,{})]})})});}})});}export var navigationRef=createRef();export function navigateToTab(tabName){var _navigationRef$curren;(_navigationRef$curren=navigationRef.current)==null?void 0:_navigationRef$curren.navigate(tabName);}","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","createRef","View","ActivityIndicator","Text","StyleSheet","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","AsyncStorage","StatusBar","Ionicons","Provider","PaperProvider","LoginScreen","RegisterScreen","HomeScreen","ServicesScreen","BookingScreen","AppointmentsScreen","ProfileScreen","BarberAppointmentsScreen","BarberDashboardScreen","AdminDashboardScreen","SalonDetailsScreen","SalonStaffScreen","ManagerDashboardScreen","SalonDashboardScreen","DisplaySettings","AuthProvider","AuthContext","ThemeProvider","ThemeContext","jsx","_jsx","jsxs","_jsxs","Stack","Tab","theme","_objectSpread","DefaultTheme","colors","primary","accent","background","text","CustomerTabs","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","children","Screen","component","AdminTabs","_ref3","_ref4","options","title","BarberTabs","_ref5","_ref6","ManagerTabs","_ref7","_ref8","AuthStack","AuthNavigator","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","_useState3","_useState4","isLoading","setIsLoading","_useContext","userToken","userInfo","_useState5","_useState6","userRole","setUserRole","checkLoginStatus","_ref9","_asyncToGenerator","token","getItem","userInfoString","console","log","isLoggedInStatus","userInfoObj","JSON","parse","role","error","apply","arguments","style","flex","justifyContent","alignItems","marginTop","getMainComponent","App","Consumer","_ref10","isDarkMode","ref","navigationRef","navigateToTab","tabName","_navigationRef$curren","current","navigate"],"sources":["C:/Users/User/Downloads/git_frontend/mobile/App.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef, createRef } from 'react';\nimport { View, ActivityIndicator, Text, StyleSheet } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { StatusBar } from 'expo-status-bar';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { Provider as PaperProvider } from 'react-native-paper';\n\n// Auth Screens\nimport LoginScreen from './screens/auth/LoginScreen';\nimport RegisterScreen from './screens/auth/RegisterScreen';\n\n// Customer Screens\nimport HomeScreen from './screens/customer/HomeScreen';\nimport ServicesScreen from './screens/customer/ServicesScreen';\nimport BookingScreen from './screens/customer/BookingScreen';\nimport AppointmentsScreen from './screens/customer/AppointmentsScreen';\nimport ProfileScreen from './screens/customer/ProfileScreen';\n\n// Barber Screens\nimport BarberAppointmentsScreen from './screens/barber/BarberAppointmentsScreen';\nimport BarberDashboardScreen from './screens/barber/BarberDashboardScreen';\n\n// Admin Screens\nimport AdminDashboardScreen from './screens/admin/DashboardScreen';\nimport SalonDetailsScreen from './screens/admin/SalonDetailsScreen';\nimport SalonStaffScreen from './screens/admin/SalonStaffScreen';\n\n// Manager Screens\nimport ManagerDashboardScreen from './screens/manager/DashboardScreen';\nimport SalonDashboardScreen from './screens/manager/SalonDashboardScreen';\n\n// Components\nimport DisplaySettings from './components/DisplaySettings';\n\n// Context\nimport { AuthProvider, AuthContext } from './context/AuthContext';\nimport { ThemeProvider, ThemeContext } from './context/ThemeContext';\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\n// Custom theme\nconst theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: '#0F4C75',\n    accent: '#3282B8',\n    background: '#F5F5F5',\n    text: '#1B262C',\n  },\n};\n\n// Bottom Tab Navigator for Customer\nconst CustomerTabs = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Services') {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (route.name === 'Appointments') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false,\n      })}\n    >\n      <Tab.Screen name=\"Home\" component={HomeScreen} />\n      <Tab.Screen name=\"Services\" component={ServicesScreen} />\n      <Tab.Screen name=\"Appointments\" component={AppointmentsScreen} />\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n    </Tab.Navigator>\n  );\n};\n\n// Bottom Tab Navigator for Admin\nconst AdminTabs = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Dashboard') {\n            iconName = focused ? 'grid' : 'grid-outline';\n          } else if (route.name === 'Services') {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (route.name === 'Appointments') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false,\n      })}\n    >\n      <Tab.Screen \n        name=\"Dashboard\" \n        component={AdminDashboardScreen} \n        options={{ title: 'Admin Dashboard' }}\n      />\n      <Tab.Screen name=\"Services\" component={ServicesScreen} />\n      <Tab.Screen name=\"Appointments\" component={BarberAppointmentsScreen} />\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n    </Tab.Navigator>\n  );\n};\n\n// Bottom Tab Navigator for Barber\nconst BarberTabs = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Dashboard') {\n            iconName = focused ? 'grid' : 'grid-outline';\n          } else if (route.name === 'Appointments') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false,\n      })}\n    >\n      <Tab.Screen \n        name=\"Dashboard\" \n        component={BarberDashboardScreen} \n        options={{ title: 'My Schedule' }}\n      />\n      <Tab.Screen \n        name=\"Appointments\" \n        component={BarberAppointmentsScreen} \n        options={{ title: 'Appointments' }}\n      />\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n    </Tab.Navigator>\n  );\n};\n\n// Bottom Tab Navigator for Manager\nconst ManagerTabs = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Dashboard') {\n            iconName = focused ? 'grid' : 'grid-outline';\n          } else if (route.name === 'Services') {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (route.name === 'Appointments') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false,\n      })}\n    >\n      <Tab.Screen \n        name=\"Dashboard\" \n        component={ManagerDashboardScreen} \n        options={{ title: 'Manager Dashboard' }}\n      />\n      <Tab.Screen name=\"Services\" component={ServicesScreen} />\n      <Tab.Screen name=\"Appointments\" component={BarberAppointmentsScreen} />\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n    </Tab.Navigator>\n  );\n};\n\n// Auth Stack\nconst AuthStack = () => {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\n      <Stack.Screen name=\"Register\" component={RegisterScreen} />\n    </Stack.Navigator>\n  );\n};\n\n// Auth Navigator Component that manages the auth state\nconst AuthNavigator = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const { userToken, userInfo } = useContext(AuthContext);\n  const [userRole, setUserRole] = useState('customer');\n\n  // Check login status whenever userToken changes\n  useEffect(() => {\n    const checkLoginStatus = async () => {\n      try {\n        setIsLoading(true);\n        const token = await AsyncStorage.getItem('userToken');\n        const userInfoString = await AsyncStorage.getItem('userInfo');\n        console.log('Auth check - token present:', !!token);\n        console.log('Auth check - userInfo present:', !!userInfoString);\n        \n        // Only consider logged in if BOTH token and userInfo exist\n        const isLoggedInStatus = !!(token && userInfoString);\n        setIsLoggedIn(isLoggedInStatus);\n        \n        // Get user role from userInfo\n        if (isLoggedInStatus && userInfoString) {\n          const userInfoObj = JSON.parse(userInfoString);\n          setUserRole(userInfoObj.role || 'customer');\n          console.log('User role set to:', userInfoObj.role || 'customer');\n        }\n      } catch (error) {\n        console.error('Error checking login status:', error);\n        setIsLoggedIn(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    checkLoginStatus();\n  }, [userToken, userInfo]); // Re-run when either userToken or userInfo changes\n\n  if (isLoading) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n        <Text style={{ marginTop: 10 }}>Loading...</Text>\n      </View>\n    );\n  }\n\n  // Select the appropriate main component based on user role\n  const getMainComponent = () => {\n    switch (userRole) {\n      case 'admin':\n        return AdminTabs;\n      case 'manager':\n        return ManagerTabs;\n      case 'barber':\n        return BarberTabs;\n      default:\n        return CustomerTabs;\n    }\n  };\n\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      {!isLoggedIn ? (\n        <Stack.Screen name=\"Auth\" component={AuthStack} />\n      ) : (\n        <Stack.Screen name=\"Main\" component={getMainComponent()} />\n      )}\n      <Stack.Screen \n        name=\"Booking\" \n        component={BookingScreen} \n        options={{ headerShown: true, title: 'Book Appointment' }} \n      />\n      <Stack.Screen \n        name=\"AdminDashboard\" \n        component={AdminDashboardScreen} \n        options={{ headerShown: true, title: 'Admin Dashboard' }} \n      />\n      <Stack.Screen \n        name=\"ManagerDashboard\" \n        component={ManagerDashboardScreen} \n        options={{ headerShown: true, title: 'Manager Dashboard' }} \n      />\n      <Stack.Screen \n        name=\"BarberAppointments\" \n        component={BarberAppointmentsScreen} \n        options={{ headerShown: true, title: 'Appointments' }} \n      />\n      <Stack.Screen \n        name=\"SalonDetails\" \n        component={SalonDetailsScreen} \n        options={{ headerShown: true, title: 'Edit Salon' }} \n      />\n      <Stack.Screen \n        name=\"SalonStaff\" \n        component={SalonStaffScreen} \n        options={{ headerShown: true, title: 'Salon Staff' }} \n      />\n      <Stack.Screen \n        name=\"SalonDashboard\" \n        component={SalonDashboardScreen} \n        options={{ headerShown: true, title: 'Salon Dashboard' }} \n      />\n    </Stack.Navigator>\n  );\n};\n\n// Main App\nexport default function App() {\n  return (\n    <ThemeProvider>\n      <ThemeContext.Consumer>\n        {({ theme, isDarkMode }) => (\n          <AuthProvider>\n            <PaperProvider theme={theme}>\n              <NavigationContainer ref={navigationRef} theme={theme}>\n                <StatusBar style={isDarkMode ? \"light\" : \"dark\"} />\n                <AuthNavigator />\n              </NavigationContainer>\n            </PaperProvider>\n          </AuthProvider>\n        )}\n      </ThemeContext.Consumer>\n    </ThemeProvider>\n  );\n}\n\n// Helper function to navigate directly to a specific tab\n// This is accessible globally via the navigation ref\nexport const navigationRef = createRef();\n\nexport function navigateToTab(tabName) {\n  navigationRef.current?.navigate(tabName);\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}