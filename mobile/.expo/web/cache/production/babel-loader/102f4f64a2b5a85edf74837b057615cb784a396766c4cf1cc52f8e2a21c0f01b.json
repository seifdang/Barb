{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import{black,white}from'../../styles/themes/v2/colors';var DEFAULT_PADDING=9;export var getSegmentedButtonDensityPadding=function getSegmentedButtonDensityPadding(_ref){var density=_ref.density;var padding=DEFAULT_PADDING;switch(density){case'small':return padding-2;case'medium':return padding-4;case'high':return padding-8;default:return padding;}};export var getDisabledSegmentedButtonStyle=function getDisabledSegmentedButtonStyle(_ref2){var _buttons$index,_buttons;var theme=_ref2.theme,index=_ref2.index,buttons=_ref2.buttons;var width=getSegmentedButtonBorderWidth({theme:theme});var isDisabled=(_buttons$index=buttons[index])===null||_buttons$index===void 0?void 0:_buttons$index.disabled;var isNextDisabled=(_buttons=buttons[index+1])===null||_buttons===void 0?void 0:_buttons.disabled;if(!isDisabled&&isNextDisabled){return{borderRightWidth:width};}return{};};export var getSegmentedButtonBorderRadius=function getSegmentedButtonBorderRadius(_ref3){var segment=_ref3.segment,theme=_ref3.theme;if(segment==='first'){return _objectSpread({borderTopRightRadius:0,borderBottomRightRadius:0},theme.isV3&&{borderRightWidth:0});}else if(segment==='last'){return{borderTopLeftRadius:0,borderBottomLeftRadius:0};}else{return _objectSpread({borderRadius:0},theme.isV3&&{borderRightWidth:0});}};var getSegmentedButtonBackgroundColor=function getSegmentedButtonBackgroundColor(_ref4){var checked=_ref4.checked,theme=_ref4.theme;if(checked){if(theme.isV3){return theme.colors.secondaryContainer;}else{return color(theme.colors.primary).alpha(0.12).rgb().string();}}return'transparent';};var getSegmentedButtonBorderColor=function getSegmentedButtonBorderColor(_ref5){var theme=_ref5.theme,disabled=_ref5.disabled,checked=_ref5.checked;if(theme.isV3){if(disabled){return theme.colors.surfaceDisabled;}return theme.colors.outline;}if(checked){return theme.colors.primary;}return color(theme.dark?white:black).alpha(0.29).rgb().string();};var getSegmentedButtonBorderWidth=function getSegmentedButtonBorderWidth(_ref6){var theme=_ref6.theme;if(theme.isV3){return 1;}return StyleSheet.hairlineWidth;};var getSegmentedButtonTextColor=function getSegmentedButtonTextColor(_ref7){var theme=_ref7.theme,disabled=_ref7.disabled,checked=_ref7.checked,checkedColor=_ref7.checkedColor,uncheckedColor=_ref7.uncheckedColor;if(theme.isV3){if(disabled){return theme.colors.onSurfaceDisabled;}if(checked){return checkedColor!=null?checkedColor:theme.colors.onSecondaryContainer;}return uncheckedColor!=null?uncheckedColor:theme.colors.onSurface;}if(disabled){return theme.colors.disabled;}return theme.colors.primary;};export var getSegmentedButtonColors=function getSegmentedButtonColors(_ref8){var theme=_ref8.theme,disabled=_ref8.disabled,checked=_ref8.checked,checkedColor=_ref8.checkedColor,uncheckedColor=_ref8.uncheckedColor;var backgroundColor=getSegmentedButtonBackgroundColor({theme:theme,checked:checked});var borderColor=getSegmentedButtonBorderColor({theme:theme,disabled:disabled,checked:checked});var textColor=getSegmentedButtonTextColor({theme:theme,disabled:disabled,checked:checked,checkedColor:checkedColor,uncheckedColor:uncheckedColor});var borderWidth=getSegmentedButtonBorderWidth({theme:theme});return{backgroundColor:backgroundColor,borderColor:borderColor,textColor:textColor,borderWidth:borderWidth};};","map":{"version":3,"names":["color","black","white","DEFAULT_PADDING","getSegmentedButtonDensityPadding","_ref","density","padding","getDisabledSegmentedButtonStyle","_ref2","_buttons$index","_buttons","theme","index","buttons","width","getSegmentedButtonBorderWidth","isDisabled","disabled","isNextDisabled","borderRightWidth","getSegmentedButtonBorderRadius","_ref3","segment","_objectSpread","borderTopRightRadius","borderBottomRightRadius","isV3","borderTopLeftRadius","borderBottomLeftRadius","borderRadius","getSegmentedButtonBackgroundColor","_ref4","checked","colors","secondaryContainer","primary","alpha","rgb","string","getSegmentedButtonBorderColor","_ref5","surfaceDisabled","outline","dark","_ref6","StyleSheet","hairlineWidth","getSegmentedButtonTextColor","_ref7","checkedColor","uncheckedColor","onSurfaceDisabled","onSecondaryContainer","onSurface","getSegmentedButtonColors","_ref8","backgroundColor","borderColor","textColor","borderWidth"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\react-native-paper\\src\\components\\SegmentedButtons\\utils.ts"],"sourcesContent":["import { StyleSheet, ViewStyle } from 'react-native';\n\nimport color from 'color';\n\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n  checked: boolean;\n};\n\ntype SegmentedButtonProps = {\n  checkedColor?: string;\n  uncheckedColor?: string;\n} & BaseProps;\n\nconst DEFAULT_PADDING = 9;\n\nexport const getSegmentedButtonDensityPadding = ({\n  density,\n}: {\n  density?: 'regular' | 'small' | 'medium' | 'high';\n}) => {\n  let padding = DEFAULT_PADDING;\n\n  switch (density) {\n    case 'small':\n      return padding - 2;\n    case 'medium':\n      return padding - 4;\n    case 'high':\n      return padding - 8;\n    default:\n      return padding;\n  }\n};\n\nexport const getDisabledSegmentedButtonStyle = ({\n  theme,\n  index,\n  buttons,\n}: {\n  theme: InternalTheme;\n  buttons: { disabled?: boolean }[];\n  index: number;\n}): ViewStyle => {\n  const width = getSegmentedButtonBorderWidth({ theme });\n  const isDisabled = buttons[index]?.disabled;\n  const isNextDisabled = buttons[index + 1]?.disabled;\n\n  if (!isDisabled && isNextDisabled) {\n    return {\n      borderRightWidth: width,\n    };\n  }\n  return {};\n};\n\nexport const getSegmentedButtonBorderRadius = ({\n  segment,\n  theme,\n}: {\n  theme: InternalTheme;\n  segment?: 'first' | 'last';\n}): ViewStyle => {\n  if (segment === 'first') {\n    return {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0,\n      ...(theme.isV3 && { borderRightWidth: 0 }),\n    };\n  } else if (segment === 'last') {\n    return {\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0,\n    };\n  } else {\n    return {\n      borderRadius: 0,\n      ...(theme.isV3 && { borderRightWidth: 0 }),\n    };\n  }\n};\n\nconst getSegmentedButtonBackgroundColor = ({ checked, theme }: BaseProps) => {\n  if (checked) {\n    if (theme.isV3) {\n      return theme.colors.secondaryContainer;\n    } else {\n      return color(theme.colors.primary).alpha(0.12).rgb().string();\n    }\n  }\n  return 'transparent';\n};\n\nconst getSegmentedButtonBorderColor = ({\n  theme,\n  disabled,\n  checked,\n}: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.surfaceDisabled;\n    }\n    return theme.colors.outline;\n  }\n  if (checked) {\n    return theme.colors.primary;\n  }\n\n  return color(theme.dark ? white : black)\n    .alpha(0.29)\n    .rgb()\n    .string();\n};\n\nconst getSegmentedButtonBorderWidth = ({\n  theme,\n}: Omit<BaseProps, 'disabled' | 'checked'>) => {\n  if (theme.isV3) {\n    return 1;\n  }\n\n  return StyleSheet.hairlineWidth;\n};\n\nconst getSegmentedButtonTextColor = ({\n  theme,\n  disabled,\n  checked,\n  checkedColor,\n  uncheckedColor,\n}: SegmentedButtonProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    if (checked) {\n      return checkedColor ?? theme.colors.onSecondaryContainer;\n    }\n    return uncheckedColor ?? theme.colors.onSurface;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n  // Primary color is used for checked state too.\n  return theme.colors.primary;\n};\n\nexport const getSegmentedButtonColors = ({\n  theme,\n  disabled,\n  checked,\n  checkedColor,\n  uncheckedColor,\n}: SegmentedButtonProps) => {\n  const backgroundColor = getSegmentedButtonBackgroundColor({\n    theme,\n    checked,\n  });\n  const borderColor = getSegmentedButtonBorderColor({\n    theme,\n    disabled,\n    checked,\n  });\n  const textColor = getSegmentedButtonTextColor({\n    theme,\n    disabled,\n    checked,\n    checkedColor,\n    uncheckedColor,\n  });\n  const borderWidth = getSegmentedButtonBorderWidth({ theme });\n\n  return { backgroundColor, borderColor, textColor, borderWidth };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}