{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"icon\",\"iconColor\",\"containerColor\",\"rippleColor\",\"size\",\"accessibilityLabel\",\"disabled\",\"onPress\",\"selected\",\"animated\",\"mode\",\"style\",\"theme\",\"testID\",\"loading\",\"contentStyle\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{getIconButtonColor}from'./utils';import{useInternalTheme}from'../../core/theming';import{forwardRef}from'../../utils/forwardRef';import ActivityIndicator from'../ActivityIndicator';import CrossFadeIcon from'../CrossFadeIcon';import Icon from'../Icon';import Surface from'../Surface';import TouchableRipple from'../TouchableRipple/TouchableRipple';var PADDING=8;var IconButton=forwardRef(function(_ref,ref){var icon=_ref.icon,customIconColor=_ref.iconColor,customContainerColor=_ref.containerColor,customRippleColor=_ref.rippleColor,_ref$size=_ref.size,size=_ref$size===void 0?24:_ref$size,accessibilityLabel=_ref.accessibilityLabel,disabled=_ref.disabled,onPress=_ref.onPress,_ref$selected=_ref.selected,selected=_ref$selected===void 0?false:_ref$selected,_ref$animated=_ref.animated,animated=_ref$animated===void 0?false:_ref$animated,mode=_ref.mode,style=_ref.style,themeOverrides=_ref.theme,_ref$testID=_ref.testID,testID=_ref$testID===void 0?'icon-button':_ref$testID,_ref$loading=_ref.loading,loading=_ref$loading===void 0?false:_ref$loading,contentStyle=_ref.contentStyle,rest=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);var isV3=theme.isV3;var IconComponent=animated?CrossFadeIcon:Icon;var _getIconButtonColor=getIconButtonColor({theme:theme,disabled:disabled,selected:selected,mode:mode,customIconColor:customIconColor,customContainerColor:customContainerColor,customRippleColor:customRippleColor}),iconColor=_getIconButtonColor.iconColor,rippleColor=_getIconButtonColor.rippleColor,backgroundColor=_getIconButtonColor.backgroundColor,borderColor=_getIconButtonColor.borderColor;var buttonSize=isV3?size+2*PADDING:size*1.5;var _ref2=StyleSheet.flatten(style)||{},_ref2$borderWidth=_ref2.borderWidth,borderWidth=_ref2$borderWidth===void 0?isV3&&mode==='outlined'&&!selected?1:0:_ref2$borderWidth,_ref2$borderRadius=_ref2.borderRadius,borderRadius=_ref2$borderRadius===void 0?buttonSize/2:_ref2$borderRadius;var borderStyles={borderWidth:borderWidth,borderRadius:borderRadius,borderColor:borderColor};return React.createElement(Surface,_extends({ref:ref,testID:`${testID}-container`,style:[{backgroundColor:backgroundColor,width:buttonSize,height:buttonSize},styles.container,borderStyles,!isV3&&disabled&&styles.disabled,style]},isV3&&{elevation:0}),React.createElement(TouchableRipple,_extends({borderless:true,centered:true,onPress:onPress,rippleColor:rippleColor,accessibilityLabel:accessibilityLabel,style:[styles.touchable,contentStyle],accessibilityTraits:disabled?['button','disabled']:'button',accessibilityComponentType:\"button\",accessibilityRole:\"button\",accessibilityState:{disabled:disabled},disabled:disabled,hitSlop:TouchableRipple.supported?{top:10,left:10,bottom:10,right:10}:{top:6,left:6,bottom:6,right:6},testID:testID},rest),loading?React.createElement(ActivityIndicator,{size:size,color:iconColor}):React.createElement(IconComponent,{color:iconColor,source:icon,size:size})));});var styles=StyleSheet.create({container:{overflow:'hidden',margin:6,elevation:0},touchable:{flexGrow:1,justifyContent:'center',alignItems:'center'},disabled:{opacity:0.32}});export default IconButton;","map":{"version":3,"names":["React","StyleSheet","getIconButtonColor","useInternalTheme","forwardRef","ActivityIndicator","CrossFadeIcon","Icon","Surface","TouchableRipple","PADDING","IconButton","_ref","ref","icon","customIconColor","iconColor","customContainerColor","containerColor","customRippleColor","rippleColor","_ref$size","size","accessibilityLabel","disabled","onPress","_ref$selected","selected","_ref$animated","animated","mode","style","themeOverrides","theme","_ref$testID","testID","_ref$loading","loading","contentStyle","rest","_objectWithoutProperties","_excluded","isV3","IconComponent","_getIconButtonColor","backgroundColor","borderColor","buttonSize","_ref2","flatten","_ref2$borderWidth","borderWidth","_ref2$borderRadius","borderRadius","borderStyles","createElement","_extends","width","height","styles","container","elevation","borderless","centered","touchable","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","hitSlop","supported","top","left","bottom","right","color","source","create","overflow","margin","flexGrow","justifyContent","alignItems","opacity"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\react-native-paper\\src\\components\\IconButton\\IconButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n  View,\n  Animated,\n  ColorValue,\n} from 'react-native';\n\nimport { getIconButtonColor } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport { forwardRef } from '../../utils/forwardRef';\nimport ActivityIndicator from '../ActivityIndicator';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nconst PADDING = 8;\n\ntype IconButtonMode = 'outlined' | 'contained' | 'contained-tonal';\n\nexport type Props = Omit<$RemoveChildren<typeof TouchableRipple>, 'style'> & {\n  /**\n   * Icon to display.\n   */\n  icon: IconSource;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Mode of the icon button. By default there is no specified mode - only pressable icon will be rendered.\n   */\n  mode?: IconButtonMode;\n  /**\n   * @renamed Renamed from 'color' to 'iconColor' in v5.x\n   * Color of the icon.\n   */\n  iconColor?: string;\n  /**\n   * Background color of the icon container.\n   */\n  containerColor?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether icon button is selected. A selected button receives alternative combination of icon and container colors.\n   */\n  selected?: boolean;\n  /**\n   * Size of the icon.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether an icon change is animated.\n   */\n  animated?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Style of button's inner content.\n   * Use this prop to apply custom height and width or to set a custom padding`.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  ref?: React.RefObject<View>;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n};\n\n/**\n * An icon button is a button which displays only an icon without a label.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { IconButton, MD3Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <IconButton\n *     icon=\"camera\"\n *     iconColor={MD3Colors.error50}\n *     size={20}\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst IconButton = forwardRef<View, Props>(\n  (\n    {\n      icon,\n      iconColor: customIconColor,\n      containerColor: customContainerColor,\n      rippleColor: customRippleColor,\n      size = 24,\n      accessibilityLabel,\n      disabled,\n      onPress,\n      selected = false,\n      animated = false,\n      mode,\n      style,\n      theme: themeOverrides,\n      testID = 'icon-button',\n      loading = false,\n      contentStyle,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(themeOverrides);\n    const { isV3 } = theme;\n\n    const IconComponent = animated ? CrossFadeIcon : Icon;\n\n    const { iconColor, rippleColor, backgroundColor, borderColor } =\n      getIconButtonColor({\n        theme,\n        disabled,\n        selected,\n        mode,\n        customIconColor,\n        customContainerColor,\n        customRippleColor,\n      });\n\n    const buttonSize = isV3 ? size + 2 * PADDING : size * 1.5;\n\n    const {\n      borderWidth = isV3 && mode === 'outlined' && !selected ? 1 : 0,\n      borderRadius = buttonSize / 2,\n    } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n    const borderStyles = {\n      borderWidth,\n      borderRadius,\n      borderColor,\n    };\n\n    return (\n      <Surface\n        ref={ref}\n        testID={`${testID}-container`}\n        style={[\n          {\n            backgroundColor,\n            width: buttonSize,\n            height: buttonSize,\n          },\n          styles.container,\n          borderStyles,\n          !isV3 && disabled && styles.disabled,\n          style,\n        ]}\n        {...(isV3 && { elevation: 0 })}\n      >\n        <TouchableRipple\n          borderless\n          centered\n          onPress={onPress}\n          rippleColor={rippleColor}\n          accessibilityLabel={accessibilityLabel}\n          style={[styles.touchable, contentStyle]}\n          // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n          accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityState={{ disabled }}\n          disabled={disabled}\n          hitSlop={\n            TouchableRipple.supported\n              ? { top: 10, left: 10, bottom: 10, right: 10 }\n              : { top: 6, left: 6, bottom: 6, right: 6 }\n          }\n          testID={testID}\n          {...rest}\n        >\n          {loading ? (\n            <ActivityIndicator size={size} color={iconColor} />\n          ) : (\n            <IconComponent color={iconColor} source={icon} size={size} />\n          )}\n        </TouchableRipple>\n      </Surface>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    margin: 6,\n    elevation: 0,\n  },\n  touchable: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  disabled: {\n    opacity: 0.32,\n  },\n});\n\nexport default IconButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}