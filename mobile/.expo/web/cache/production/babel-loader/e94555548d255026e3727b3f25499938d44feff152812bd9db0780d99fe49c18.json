{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect,useContext}from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Alert from\"react-native-web/dist/exports/Alert\";import{Text,Card,Button,Title,Paragraph,ActivityIndicator,Divider,Avatar,Chip}from'react-native-paper';import{Calendar}from'react-native-calendars';import{format}from'date-fns';import{barbersApi,appointmentsApi,servicesApi}from'../../api/client';import{AuthContext}from'../../context/AuthContext';import apiClient from'../../api/client';import{CommonActions}from'@react-navigation/native';import{navigationRef,navigateToTab}from'../../App';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var BookingScreen=function BookingScreen(_ref){var route=_ref.route,navigation=_ref.navigation;var service=route.params.service;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),salons=_useState2[0],setSalons=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),selectedSalon=_useState4[0],setSelectedSalon=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),barbers=_useState6[0],setBarbers=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),selectedBarber=_useState8[0],setSelectedBarber=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),selectedDate=_useState10[0],setSelectedDate=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),selectedTime=_useState12[0],setSelectedTime=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),availableTimes=_useState14[0],setAvailableTimes=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),allTimeSlots=_useState16[0],setAllTimeSlots=_useState16[1];var _useState17=useState(true),_useState18=_slicedToArray(_useState17,2),loading=_useState18[0],setLoading=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),submitting=_useState20[0],setSubmitting=_useState20[1];var _useState21=useState(null),_useState22=_slicedToArray(_useState21,2),error=_useState22[0],setError=_useState22[1];var _useState23=useState(1),_useState24=_slicedToArray(_useState23,2),step=_useState24[0],setStep=_useState24[1];var _useContext=useContext(AuthContext),userInfo=_useContext.userInfo;var defaultTimeSlots=['09:00','09:30','10:00','10:30','11:00','11:30','12:00','12:30','13:00','13:30','14:00','14:30','15:00','15:30','16:00','16:30','17:00','17:30'];var today=new Date();var formattedToday=format(today,'yyyy-MM-dd');useEffect(function(){fetchSalons();},[]);useEffect(function(){if(selectedSalon){fetchBarbersBySalon(selectedSalon._id);}},[selectedSalon]);useEffect(function(){if(selectedBarber&&selectedDate){fetchAvailableTimes();}else{var timeSlots=[].concat(defaultTimeSlots);setAllTimeSlots(timeSlots);setAvailableTimes([]);}},[selectedBarber,selectedDate]);var fetchSalons=function(){var _ref2=_asyncToGenerator(function*(){try{setLoading(true);setError(null);var response=yield apiClient.get('/salons',{headers:{Authorization:`Bearer ${userInfo==null?void 0:userInfo.token}`}});if(response.data&&response.data.success){setSalons(response.data.salons);console.log(`Loaded ${response.data.salons.length} salons`);}else{throw new Error('Failed to fetch salons');}setLoading(false);}catch(error){console.error('Error fetching salons:',error);setError('Failed to load salons. Please try again.');setLoading(false);Alert.alert('Error','Failed to load salons. Please try again later.');}});return function fetchSalons(){return _ref2.apply(this,arguments);};}();var fetchBarbersBySalon=function(){var _ref3=_asyncToGenerator(function*(salonId){try{setLoading(true);setError(null);console.log(`Fetching barbers for salon ID: ${salonId}`);var salonResponse=yield apiClient.get(`/salons/${salonId}`,{headers:{Authorization:`Bearer ${userInfo==null?void 0:userInfo.token}`}});if(!salonResponse.data||!salonResponse.data.success){throw new Error('Failed to fetch salon details');}var salonData=salonResponse.data.salon;console.log(`Loaded salon: ${salonData.name}`);if(!salonData.staff||!Array.isArray(salonData.staff)||salonData.staff.length===0){console.log('No staff array found in salon data or it is empty');setBarbers([]);setError('No barbers available for this salon. Staff not assigned.');setLoading(false);setStep(2);return;}var staffIds=salonData.staff.map(function(staff){return typeof staff==='object'?staff._id:staff;});console.log(`Found ${salonData.staff.length} staff IDs`);var barberStaff=[];if(salonData.staff.every(function(staff){return typeof staff==='object'&&staff.role;})){console.log('Staff objects are populated with role data, using directly');barberStaff=salonData.staff.filter(function(staff){var roleToCheck=(staff.role||'').toLowerCase();var isBarberRole=roleToCheck==='barber'||roleToCheck.includes('barber')||roleToCheck==='stylist';console.log(`Direct staff member check - ${staff.name}: role=${staff.role}, isBarber=${isBarberRole}`);return isBarberRole;});}else{try{console.log('Using admin endpoint to fetch users');var usersResponse=yield apiClient.get('/admin/users',{headers:{Authorization:`Bearer ${userInfo==null?void 0:userInfo.token}`}});if(!usersResponse.data||!usersResponse.data.success){throw new Error('Failed to fetch users');}var allUsers=usersResponse.data.users||[];console.log(`Fetched ${allUsers.length} total users from admin endpoint`);barberStaff=allUsers.filter(function(user){var isStaffMember=staffIds.includes(user._id);if(!isStaffMember)return false;var roleToCheck=(user.role||'').toLowerCase();var isBarberRole=roleToCheck==='barber'||roleToCheck.includes('barber')||roleToCheck==='stylist';console.log(`Admin staff check - ${user.name}: role=${user.role}, isBarber=${isBarberRole}`);return isBarberRole;});}catch(error){console.error('Error fetching from admin endpoint:',error);try{console.log('Trying direct staff ID lookup');barberStaff=[];for(var staffId of staffIds){try{var userResponse=yield apiClient.get(`/admin/users/${staffId}`,{headers:{Authorization:`Bearer ${userInfo==null?void 0:userInfo.token}`}});if(userResponse.data&&userResponse.data.success){var user=userResponse.data.user;var roleToCheck=(user.role||'').toLowerCase();var isBarberRole=roleToCheck==='barber'||roleToCheck.includes('barber')||roleToCheck==='stylist';if(isBarberRole){barberStaff.push(user);console.log(`Added staff member by ID: ${user.name}, role=${user.role}`);}}}catch(err){console.log(`Error fetching staff ID ${staffId}:`,err);}}}catch(fallbackError){console.error('Error with fallback approach:',fallbackError);}}}console.log(`Found ${barberStaff.length} barbers for this salon`);if(barberStaff.length>0){setBarbers(barberStaff);console.log(`Loaded ${barberStaff.length} barbers for salon ${salonData.name}`);}else{setBarbers([]);setError('No barbers available for this salon. Staff exists but no barber roles found.');Alert.alert('No Barbers','This salon does not have any barbers assigned. Please select another salon or use the debug button to check staff roles.');}setLoading(false);setStep(2);}catch(error){console.error('Error fetching barbers by salon:',error);setError('Failed to load barbers. Please try again.');Alert.alert('Error','Failed to load barbers: '+(error.message||'Unknown error'));setLoading(false);setStep(2);}});return function fetchBarbersBySalon(_x){return _ref3.apply(this,arguments);};}();var fetchAvailableTimes=function(){var _ref4=_asyncToGenerator(function*(){if(!selectedBarber||!selectedDate){return;}try{setLoading(true);var timeSlots=[];var now=new Date();var selectedDateObj=new Date(selectedDate);var isToday=selectedDateObj.getDate()===now.getDate()&&selectedDateObj.getMonth()===now.getMonth()&&selectedDateObj.getFullYear()===now.getFullYear();var currentHour=now.getHours();var currentMinute=now.getMinutes();for(var hour=9;hour<=17;hour++){for(var minute of[0,30]){if(isToday&&(hour<currentHour||hour===currentHour&&minute<=currentMinute)){continue;}var formattedHour=hour.toString().padStart(2,'0');var formattedMinute=minute.toString().padStart(2,'0');timeSlots.push(`${formattedHour}:${formattedMinute}`);}}setAllTimeSlots(timeSlots);try{console.log('Fetching availability for:',{barberId:selectedBarber._id,date:selectedDate,salonId:selectedSalon._id});var response=yield appointmentsApi.getBarberAvailability(selectedBarber._id,selectedDate,selectedSalon._id);console.log('Availability response:',response==null?void 0:response.data);if(response!=null&&response.data&&response.data.success){setAllTimeSlots(timeSlots);var _availableTimes=response.data.availableTimes||[];console.log('Available times from API:',_availableTimes);var filteredTimes=_availableTimes.filter(function(time){return timeSlots.includes(time);});console.log('Filtered times:',filteredTimes);setAvailableTimes(filteredTimes);if(step===4&&filteredTimes.length===0){setSelectedTime(null);}else if(selectedTime&&!filteredTimes.includes(selectedTime)){setSelectedTime(null);}}else{console.error('API error response or no response data:',response==null?void 0:response.data);console.log('Using fallback time slots due to API error');setAllTimeSlots(timeSlots);setAvailableTimes(timeSlots);}}catch(error){console.error('Error fetching barber availability:',error);console.log('Using fallback time slots due to error');setAllTimeSlots(timeSlots);setAvailableTimes(timeSlots);}setLoading(false);}catch(error){console.error('Error in fetchAvailableTimes:',error);setLoading(false);var fallbackTimeSlots=[];for(var _hour=9;_hour<=17;_hour++){fallbackTimeSlots.push(`${_hour}:00`);fallbackTimeSlots.push(`${_hour}:30`);}setAllTimeSlots(fallbackTimeSlots);setAvailableTimes(fallbackTimeSlots);}});return function fetchAvailableTimes(){return _ref4.apply(this,arguments);};}();var formatTimeFromHours=function formatTimeFromHours(decimalHours){var hours=Math.floor(decimalHours);var minutes=Math.round((decimalHours-hours)*60);return`${String(hours).padStart(2,'0')}:${String(minutes).padStart(2,'0')}`;};var getDecimalHours=function getDecimalHours(time){var _time$split$map=time.split(':').map(Number),_time$split$map2=_slicedToArray(_time$split$map,2),hours=_time$split$map2[0],minutes=_time$split$map2[1];return hours+minutes/60;};var getEndTime=function getEndTime(startTime){var _startTime$split$map=startTime.split(':').map(Number),_startTime$split$map2=_slicedToArray(_startTime$split$map,2),hours=_startTime$split$map2[0],minutes=_startTime$split$map2[1];var startHours=hours+minutes/60;var endHours=startHours+service.duration/60;return formatTimeFromHours(endHours);};var handleSalonSelect=function handleSalonSelect(salon){setSelectedSalon(salon);setSelectedBarber(null);setSelectedDate('');setSelectedTime('');};var handleBarberSelect=function handleBarberSelect(barber){setSelectedBarber(barber);setStep(3);};var handleDateSelect=function handleDateSelect(date){var selectedDateObj=new Date(date.dateString);var today=new Date();today.setHours(0,0,0,0);if(selectedDateObj<today){Alert.alert(\"Invalid Date\",\"You cannot book appointments in the past. Please select today or a future date.\");return;}setSelectedDate(date.dateString);setStep(4);};var handleTimeSelect=function handleTimeSelect(time){setSelectedTime(time);};var handleBooking=function(){var _ref5=_asyncToGenerator(function*(){if(!selectedBarber||!selectedDate||!selectedTime||!selectedSalon){Alert.alert('Error','Please complete all booking details');return;}try{var _response$data;setSubmitting(true);console.log(\"Starting booking process...\");var serviceDuration=service.duration||30;var _selectedTime$split$m=selectedTime.split(':').map(Number),_selectedTime$split$m2=_slicedToArray(_selectedTime$split$m,2),hour=_selectedTime$split$m2[0],minute=_selectedTime$split$m2[1];var endHour=hour;var endMinute=minute+serviceDuration;if(endMinute>=60){endHour+=Math.floor(endMinute/60);endMinute=endMinute%60;}var endTime=`${endHour.toString().padStart(2,'0')}:${endMinute.toString().padStart(2,'0')}`;var bookingData={barberId:selectedBarber._id,serviceId:service._id,salonId:selectedSalon._id,date:selectedDate,startTime:selectedTime,endTime:endTime};console.log('Booking data:',bookingData);var response=yield apiClient.post('/appointments',bookingData,{headers:{Authorization:`Bearer ${userInfo==null?void 0:userInfo.token}`}});setSubmitting(false);console.log('BOOKING SUCCESS! Response:',response==null?void 0:response.data);if(response!=null&&(_response$data=response.data)!=null&&_response$data.success){console.log('BOOKING SUCCESS! Response:',response==null?void 0:response.data);var bookingSuccess=true;setTimeout(function(){try{console.log('Navigating back to previous screen');navigation.goBack();setTimeout(function(){Alert.alert('Booking Confirmed!',`Your appointment with ${selectedBarber.name} on ${format(new Date(selectedDate),'MMMM d')} at ${selectedTime} has been booked successfully.`,[{text:'OK'}]);},100);}catch(navError){console.error('Navigation error:',navError);Alert.alert('Booking Confirmed!',`Your appointment with ${selectedBarber.name} on ${format(new Date(selectedDate),'MMMM d')} at ${selectedTime} has been booked successfully.`,[{text:'OK'}]);}},100);}else{var _response$data2;throw new Error((response==null?void 0:(_response$data2=response.data)==null?void 0:_response$data2.message)||'Unknown booking error');}}catch(error){console.error('Booking error:',error);setSubmitting(false);Alert.alert('Error',error.message||'Failed to book appointment. Please try again.');}});return function handleBooking(){return _ref5.apply(this,arguments);};}();var debugSalonAndStaff=function(){var _ref6=_asyncToGenerator(function*(salonId){try{console.log(`Debug: Fetching detailed data for salon ${salonId}`);var salonResponse=yield apiClient.get(`/salons/${salonId}`,{headers:{Authorization:`Bearer ${userInfo==null?void 0:userInfo.token}`}});var salonData=salonResponse.data;console.log('Raw salon data:',JSON.stringify(salonData));var staffIds=[];var staffDetails='';if(salonData.salon&&salonData.salon.staff){console.log('Staff array length:',salonData.salon.staff.length);console.log('Staff array type:',typeof salonData.salon.staff);console.log('Staff array:',JSON.stringify(salonData.salon.staff));staffIds=salonData.salon.staff.map(function(staff){return typeof staff==='object'?staff._id:staff;});salonData.salon.staff.forEach(function(staffMember,idx){console.log(`Staff #${idx}:`,JSON.stringify(staffMember));if(typeof staffMember==='object'){var role=staffMember.role||'unknown';staffDetails+=`${idx+1}. ${staffMember.name}: role=${role}\\n`;}else{staffDetails+=`${idx+1}. ID only: ${staffMember}\\n`;}});}try{var usersResponse=yield apiClient.get('/users',{headers:{Authorization:`Bearer ${userInfo==null?void 0:userInfo.token}`}});var usersData=usersResponse.data;if(usersData.success&&usersData.users){var salonStaff=usersData.users.filter(function(user){return staffIds.includes(user._id);});console.log(`Found ${salonStaff.length} staff members through user lookup`);var potentialBarbers=salonStaff.filter(function(user){var roleCheck=(user.role||'').toLowerCase();var isBarber=roleCheck==='barber'||roleCheck.includes('barber')||roleCheck==='stylist';console.log(`User ${user.name}, role=${user.role}, isBarber=${isBarber}`);return isBarber;});console.log(`Found ${potentialBarbers.length} potential barbers`);salonStaff.forEach(function(staff,idx){var role=staff.role||'unknown';var isValidBarber=role.toLowerCase()==='barber'||role.toLowerCase().includes('barber')||role.toLowerCase()==='stylist';staffDetails+=`${idx+1}. ${staff.name}: role=${role} (${isValidBarber?'Valid Barber':'Not a Barber'})\\n`;});}}catch(userError){console.error('Error fetching users for debug:',userError);staffDetails+='(Error fetching user details)\\n';}Alert.alert('Debug Info',`Salon: ${salonData.salon.name}\\n`+`Staff count: ${salonData.salon.staff?salonData.salon.staff.length:0}\\n\\n`+`Staff:\\n${staffDetails||'No staff details available'}`);}catch(err){console.error('Debug fetch error:',err);Alert.alert('Debug Error',err.toString());}});return function debugSalonAndStaff(_x2){return _ref6.apply(this,arguments);};}();var testNavigation=function testNavigation(){console.log('Testing navigation to Appointments screen');try{navigation.navigate('Appointments');console.log('Navigation successful');}catch(error){console.error('Navigation error:',error);try{console.log('Trying alternative navigation');navigation.reset({index:0,routes:[{name:'Appointments'}]});console.log('Alternative navigation successful');}catch(resetError){console.error('Alternative navigation error:',resetError);Alert.alert('Navigation Failed','Could not navigate to Appointments screen');}}};var renderSalonSelection=function renderSalonSelection(){return _jsxs(View,{style:styles.section,children:[_jsx(Text,{style:styles.sectionTitle,children:\"Select Salon\"}),salons.length===0&&!loading?_jsx(View,{style:styles.emptyContainer,children:_jsx(Text,{style:styles.emptyText,children:\"No salons available.\"})}):_jsx(View,{style:styles.salonList,children:salons.map(function(salon){return _jsxs(TouchableOpacity,{style:[styles.salonCard,selectedSalon&&selectedSalon._id===salon._id?styles.selectedSalonCard:null],onPress:function onPress(){return handleSalonSelect(salon);},children:[_jsx(Avatar.Icon,{size:60,icon:\"store\",backgroundColor:\"#0F4C75\",style:styles.salonIcon}),_jsxs(View,{style:styles.salonInfo,children:[_jsx(Title,{style:styles.salonName,children:salon.name}),_jsx(Paragraph,{style:styles.salonAddress,children:salon.address&&salon.address.street?_jsxs(Text,{children:[salon.address.street,\", \",salon.address.city]}):_jsx(Text,{children:\"Address not available\"})}),_jsx(Paragraph,{style:styles.salonPhone,children:_jsx(Text,{children:salon.phone||'Phone not available'})})]}),selectedSalon&&selectedSalon._id===salon._id&&_jsx(View,{style:styles.selectedIndicator,children:_jsx(Chip,{mode:\"flat\",style:styles.selectedChip,children:\"Selected\"})})]},salon._id);})}),_jsx(View,{style:styles.debugContainer,children:_jsx(Button,{mode:\"outlined\",style:styles.debugButton,onPress:function onPress(){if(salons&&salons.length>0){var salonId=salons[0]._id;debugSalonAndStaff(salonId);}else{Alert.alert('Debug Info','No salons to debug');}},children:\"Debug Salon Data\"})})]});};var renderBarberSelection=function renderBarberSelection(){return _jsxs(View,{style:styles.section,children:[_jsxs(View,{style:styles.sectionHeader,children:[_jsx(Text,{style:styles.sectionTitle,children:\"Select Barber\"}),_jsx(Button,{mode:\"outlined\",onPress:function onPress(){return setStep(1);},compact:true,children:\"Change Salon\"})]}),error?_jsx(View,{style:styles.errorContainer,children:_jsx(Text,{style:styles.errorText,children:error})}):loading?_jsxs(View,{style:styles.centeredContent,children:[_jsx(ActivityIndicator,{size:\"large\",color:\"#0F4C75\"}),_jsx(Text,{style:styles.loadingText,children:\"Loading barbers...\"})]}):barbers.length===0?_jsxs(View,{style:styles.emptyContainer,children:[_jsx(Text,{style:styles.emptyText,children:\"No barbers available for this salon.\"}),_jsx(Button,{mode:\"contained\",onPress:function onPress(){return setStep(1);},style:styles.changeButton,children:\"Select Different Salon\"})]}):_jsx(ScrollView,{horizontal:true,showsHorizontalScrollIndicator:false,style:styles.barberScroll,children:barbers.map(function(barber){var hasWorkSchedule=barber.workSchedule&&barber.workSchedule.length>0;var today=new Date().getDay();var isWorkingToday=hasWorkSchedule&&barber.workSchedule.some(function(schedule){return schedule.day===today&&schedule.isWorking;});var weeklySchedule=[];var weekDays=['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];var _loop=function _loop(i){var isWorking=hasWorkSchedule&&barber.workSchedule.some(function(schedule){return schedule.day===i&&schedule.isWorking;});weeklySchedule.push({day:weekDays[i],isWorking:isWorking});};for(var i=0;i<7;i++){_loop(i);}return _jsxs(TouchableOpacity,{style:[styles.barberCard,selectedBarber&&selectedBarber._id===barber._id?styles.selectedBarberCard:null],onPress:function onPress(){return handleBarberSelect(barber);},children:[_jsx(Avatar.Image,{size:70,source:{uri:barber.profileImage||'https://via.placeholder.com/70'},style:styles.barberImage}),_jsx(Text,{style:styles.barberName,children:barber.name}),_jsxs(View,{style:styles.availabilityContainer,children:[_jsx(View,{style:[styles.availabilityDot,{backgroundColor:isWorkingToday?'#4CAF50':'#F44336'}]}),_jsx(Text,{style:styles.availabilityText,children:isWorkingToday?'Available Today':'Unavailable Today'})]}),_jsx(View,{style:styles.weeklySchedule,children:weeklySchedule.map(function(day,index){return _jsxs(View,{style:styles.dayIndicator,children:[_jsx(Text,{style:styles.dayText,children:day.day}),_jsx(View,{style:[styles.dayDot,{backgroundColor:day.isWorking?'#4CAF50':'#F44336'}]})]},index);})}),barber.specialties&&barber.specialties.length>0&&_jsx(Text,{style:styles.specialties,numberOfLines:1,children:barber.specialties.slice(0,2).join(', ')})]},barber._id);})})]});};var renderDateSelection=function renderDateSelection(){var today=new Date();var currentDateString=today.toISOString().split('T')[0];var markedDates={};if(selectedDate){markedDates[selectedDate]={selected:true,selectedColor:'#0F4C75'};}return _jsxs(View,{style:styles.section,children:[_jsxs(View,{style:styles.sectionHeader,children:[_jsx(Text,{style:styles.sectionTitle,children:\"Select Date\"}),_jsx(Button,{mode:\"outlined\",onPress:function onPress(){return setStep(2);},compact:true,children:\"Change Barber\"})]}),_jsx(Calendar,{current:currentDateString,minDate:currentDateString,onDayPress:handleDateSelect,markedDates:markedDates,theme:{selectedDayBackgroundColor:'#0F4C75',todayTextColor:'#0F4C75',arrowColor:'#0F4C75'}})]});};var renderTimeSelection=function renderTimeSelection(){return _jsxs(View,{style:styles.section,children:[_jsxs(View,{style:styles.sectionHeader,children:[_jsx(Text,{style:styles.sectionTitle,children:\"Select Time\"}),_jsx(Button,{mode:\"outlined\",onPress:function onPress(){return setStep(3);},compact:true,children:\"Change Date\"})]}),loading?_jsxs(View,{style:styles.centeredContent,children:[_jsx(ActivityIndicator,{size:\"large\",color:\"#0F4C75\"}),_jsx(Text,{style:styles.loadingText,children:\"Loading available times...\"})]}):availableTimes.length===0?_jsxs(View,{style:styles.emptyContainer,children:[_jsx(Text,{style:styles.emptyText,children:\"No available time slots for this date.\"}),_jsx(Text,{style:styles.emptySubText,children:\"Try selecting a different date or barber.\"}),_jsx(Button,{mode:\"contained\",onPress:function onPress(){var timeSlots=[].concat(defaultTimeSlots);setAllTimeSlots(timeSlots);setAvailableTimes(timeSlots);},style:styles.changeButton,children:\"Force Show All Time Slots\"}),_jsx(Button,{mode:\"contained\",onPress:function onPress(){return setStep(3);},style:[styles.changeButton,{marginTop:10}],children:\"Select Different Date\"})]}):_jsx(View,{style:styles.timeGrid,children:allTimeSlots.map(function(time){var isAvailable=availableTimes.includes(time);return _jsxs(TouchableOpacity,{style:[styles.timeCard,isAvailable?styles.availableTimeCard:styles.unavailableTimeCard,selectedTime===time?styles.selectedTimeCard:null],onPress:function onPress(){return isAvailable&&handleTimeSelect(time);},disabled:!isAvailable,children:[_jsx(Text,{style:[styles.timeText,isAvailable?styles.availableTimeText:styles.unavailableTimeText,selectedTime===time?styles.selectedTimeText:null],children:time}),_jsx(Text,{style:styles.endTimeText,children:isAvailable?`- ${getEndTime(time)}`:'(Booked)'})]},time);})})]});};var renderBookingSummary=function renderBookingSummary(){return _jsxs(View,{style:styles.section,children:[_jsx(Text,{style:styles.sectionTitle,children:\"Booking Summary\"}),_jsx(Card,{style:styles.summaryCard,children:_jsxs(Card.Content,{children:[_jsxs(View,{style:styles.summaryRow,children:[_jsx(Text,{style:styles.summaryLabel,children:\"Salon:\"}),_jsx(Text,{style:styles.summaryValue,children:selectedSalon.name})]}),_jsx(Divider,{style:styles.divider}),_jsxs(View,{style:styles.summaryRow,children:[_jsx(Text,{style:styles.summaryLabel,children:\"Service:\"}),_jsx(Text,{style:styles.summaryValue,children:service.name})]}),_jsx(Divider,{style:styles.divider}),_jsxs(View,{style:styles.summaryRow,children:[_jsx(Text,{style:styles.summaryLabel,children:\"Barber:\"}),_jsx(Text,{style:styles.summaryValue,children:selectedBarber.name})]}),_jsx(Divider,{style:styles.divider}),_jsxs(View,{style:styles.summaryRow,children:[_jsx(Text,{style:styles.summaryLabel,children:\"Date:\"}),_jsx(Text,{style:styles.summaryValue,children:format(new Date(selectedDate),'MMMM d, yyyy')})]}),_jsx(Divider,{style:styles.divider}),_jsxs(View,{style:styles.summaryRow,children:[_jsx(Text,{style:styles.summaryLabel,children:\"Time:\"}),_jsxs(Text,{style:styles.summaryValue,children:[selectedTime,\" - \",getEndTime(selectedTime)]})]}),_jsx(Divider,{style:styles.divider}),_jsxs(View,{style:styles.summaryRow,children:[_jsx(Text,{style:styles.summaryLabel,children:\"Price:\"}),_jsxs(Text,{style:styles.summaryValue,children:[\"$\",service.price]})]})]})}),_jsx(Button,{mode:\"contained\",style:[styles.bookButton,{backgroundColor:'#3F51B5',height:65,margin:20,borderRadius:10,elevation:10}],contentStyle:{height:65},loading:submitting,disabled:submitting,labelStyle:{fontSize:18,fontWeight:'bold',color:'white'},onPress:handleBooking,children:\"CONFIRM APPOINTMENT\"})]});};if(loading&&salons.length===0){return _jsxs(View,{style:styles.centered,children:[_jsx(ActivityIndicator,{size:\"large\",color:\"#0F4C75\"}),_jsx(Text,{style:{marginTop:10},children:\"Loading salons...\"})]});}return _jsxs(ScrollView,{style:styles.container,children:[_jsx(View,{style:styles.header,children:_jsx(Text,{style:styles.headerTitle,children:\"Book Appointment\"})}),_jsx(Card,{style:styles.serviceCard,children:_jsxs(Card.Content,{children:[_jsx(Title,{children:service.name}),_jsxs(View,{style:styles.serviceDetails,children:[_jsxs(Paragraph,{style:styles.price,children:[\"$\",service.price]}),_jsxs(Paragraph,{style:styles.duration,children:[service.duration,\" min\"]})]}),_jsx(Paragraph,{children:service.description})]})}),_jsxs(View,{style:styles.progressContainer,children:[_jsxs(View,{style:styles.progressItem,children:[_jsx(View,{style:[styles.progressDot,step>=1?styles.progressActive:null],children:_jsx(Text,{style:styles.progressNumber,children:\"1\"})}),_jsx(Text,{style:styles.progressText,children:\"Salon\"})]}),_jsx(View,{style:styles.progressLine}),_jsxs(View,{style:styles.progressItem,children:[_jsx(View,{style:[styles.progressDot,step>=2?styles.progressActive:null],children:_jsx(Text,{style:styles.progressNumber,children:\"2\"})}),_jsx(Text,{style:styles.progressText,children:\"Barber\"})]}),_jsx(View,{style:styles.progressLine}),_jsxs(View,{style:styles.progressItem,children:[_jsx(View,{style:[styles.progressDot,step>=3?styles.progressActive:null],children:_jsx(Text,{style:styles.progressNumber,children:\"3\"})}),_jsx(Text,{style:styles.progressText,children:\"Date\"})]}),_jsx(View,{style:styles.progressLine}),_jsxs(View,{style:styles.progressItem,children:[_jsx(View,{style:[styles.progressDot,step>=4?styles.progressActive:null],children:_jsx(Text,{style:styles.progressNumber,children:\"4\"})}),_jsx(Text,{style:styles.progressText,children:\"Time\"})]})]}),step===1&&renderSalonSelection(),step===2&&renderBarberSelection(),step===3&&renderDateSelection(),step===4&&renderTimeSelection(),selectedSalon&&selectedBarber&&selectedDate&&selectedTime&&renderBookingSummary()]});};var styles=StyleSheet.create({container:{flex:1,backgroundColor:'#f5f5f5'},centered:{flex:1,justifyContent:'center',alignItems:'center',padding:20},header:{backgroundColor:'#0F4C75',padding:20,paddingTop:50,paddingBottom:20},headerTitle:{fontSize:24,fontWeight:'bold',color:'white'},serviceCard:{margin:15,elevation:2},serviceDetails:{flexDirection:'row',marginVertical:10},price:{fontWeight:'bold',marginRight:15},duration:{color:'#666'},progressContainer:{flexDirection:'row',justifyContent:'space-between',alignItems:'center',paddingHorizontal:20,marginVertical:15},progressItem:{alignItems:'center'},progressDot:{width:30,height:30,borderRadius:15,backgroundColor:'#E0E0E0',justifyContent:'center',alignItems:'center',marginBottom:5},progressActive:{backgroundColor:'#0F4C75'},progressNumber:{color:'white',fontWeight:'bold'},progressLine:{flex:1,height:2,backgroundColor:'#E0E0E0',marginHorizontal:5},progressText:{fontSize:12,color:'#666'},section:{padding:15,marginBottom:10},sectionHeader:{flexDirection:'row',justifyContent:'space-between',alignItems:'center',marginBottom:10},sectionTitle:{fontSize:18,fontWeight:'bold',marginBottom:15},salonList:{marginTop:10},salonCard:{flexDirection:'row',backgroundColor:'white',padding:15,borderRadius:10,marginBottom:10,elevation:2,alignItems:'center'},selectedSalonCard:{backgroundColor:'#E1F5FE',borderWidth:1,borderColor:'#0F4C75'},salonIcon:{marginRight:10},salonInfo:{flex:1},salonName:{fontSize:16,fontWeight:'bold'},salonAddress:{fontSize:12,color:'#666',marginBottom:3},salonPhone:{fontSize:12,color:'#666'},selectedIndicator:{marginLeft:10},selectedChip:{backgroundColor:'#0F4C75'},barberScroll:{marginTop:10,paddingBottom:5},barberCard:{width:160,backgroundColor:'white',borderRadius:10,padding:15,marginRight:10,alignItems:'center',elevation:2},selectedBarberCard:{backgroundColor:'#E1F5FE',borderWidth:1,borderColor:'#0F4C75'},barberImage:{marginBottom:10},barberName:{fontWeight:'bold',textAlign:'center',marginBottom:5},availabilityContainer:{flexDirection:'row',alignItems:'center',marginVertical:5},availabilityDot:{width:8,height:8,borderRadius:4,marginRight:5},availabilityText:{fontSize:10,color:'#666'},specialties:{fontSize:10,color:'#666',textAlign:'center'},timeGrid:{flexDirection:'row',flexWrap:'wrap',justifyContent:'space-between',marginTop:10},timeCard:{width:'30%',backgroundColor:'white',padding:15,borderRadius:5,alignItems:'center',marginBottom:10,elevation:1},selectedTimeCard:{backgroundColor:'#0F4C75'},timeText:{color:'#333'},endTimeText:{color:'#666'},availableTimeCard:{backgroundColor:'#4CAF50'},unavailableTimeCard:{backgroundColor:'#F44336'},availableTimeText:{color:'white'},unavailableTimeText:{color:'white'},selectedTimeText:{color:'white',fontWeight:'bold'},noTimesText:{textAlign:'center',color:'#666',marginTop:20},summaryCard:{marginBottom:20},summaryRow:{flexDirection:'row',justifyContent:'space-between',paddingVertical:10},summaryLabel:{fontWeight:'bold'},summaryValue:{textAlign:'right'},divider:{backgroundColor:'#e0e0e0'},bookButton:{padding:10,marginTop:20,borderRadius:8,elevation:8,shadowColor:\"#000\",shadowOffset:{width:0,height:4},shadowOpacity:0.3,shadowRadius:4.65},errorContainer:{padding:10,backgroundColor:'#FFCCCC',borderWidth:1,borderColor:'#FF0000',borderRadius:5,marginBottom:10},errorText:{color:'#FF0000',fontWeight:'bold'},centeredContent:{flex:1,justifyContent:'center',alignItems:'center'},loadingText:{marginTop:10,color:'#666'},emptyContainer:{flex:1,justifyContent:'center',alignItems:'center',padding:20},emptyText:{color:'#666',marginBottom:10},changeButton:{padding:10},debugContainer:{marginTop:10,padding:10,backgroundColor:'#E1F5FE',borderRadius:5},debugButton:{padding:10},weeklySchedule:{flexDirection:'row',justifyContent:'space-between',width:'90%',backgroundColor:'#f5f5f5',borderRadius:5,padding:5,marginTop:10},dayIndicator:{alignItems:'center',padding:2},dayText:{fontSize:10,fontWeight:'bold',color:'#666',marginBottom:3},dayDot:{width:10,height:10,borderRadius:5},emptySubText:{fontSize:14,color:'#888',textAlign:'center',marginTop:5,marginBottom:15},buttonContent:{height:60,paddingVertical:10}});export default BookingScreen;","map":{"version":3,"names":["React","useState","useEffect","useContext","View","StyleSheet","ScrollView","TouchableOpacity","Alert","Text","Card","Button","Title","Paragraph","ActivityIndicator","Divider","Avatar","Chip","Calendar","format","barbersApi","appointmentsApi","servicesApi","AuthContext","apiClient","CommonActions","navigationRef","navigateToTab","jsx","_jsx","jsxs","_jsxs","BookingScreen","_ref","route","navigation","service","params","_useState","_useState2","_slicedToArray","salons","setSalons","_useState3","_useState4","selectedSalon","setSelectedSalon","_useState5","_useState6","barbers","setBarbers","_useState7","_useState8","selectedBarber","setSelectedBarber","_useState9","_useState10","selectedDate","setSelectedDate","_useState11","_useState12","selectedTime","setSelectedTime","_useState13","_useState14","availableTimes","setAvailableTimes","_useState15","_useState16","allTimeSlots","setAllTimeSlots","_useState17","_useState18","loading","setLoading","_useState19","_useState20","submitting","setSubmitting","_useState21","_useState22","error","setError","_useState23","_useState24","step","setStep","_useContext","userInfo","defaultTimeSlots","today","Date","formattedToday","fetchSalons","fetchBarbersBySalon","_id","fetchAvailableTimes","timeSlots","concat","_ref2","_asyncToGenerator","response","get","headers","Authorization","token","data","success","console","log","length","Error","alert","apply","arguments","_ref3","salonId","salonResponse","salonData","salon","name","staff","Array","isArray","staffIds","map","barberStaff","every","role","filter","roleToCheck","toLowerCase","isBarberRole","includes","usersResponse","allUsers","users","user","isStaffMember","staffId","userResponse","push","err","fallbackError","message","_x","_ref4","now","selectedDateObj","isToday","getDate","getMonth","getFullYear","currentHour","getHours","currentMinute","getMinutes","hour","minute","formattedHour","toString","padStart","formattedMinute","barberId","date","getBarberAvailability","filteredTimes","time","fallbackTimeSlots","formatTimeFromHours","decimalHours","hours","Math","floor","minutes","round","String","getDecimalHours","_time$split$map","split","Number","_time$split$map2","getEndTime","startTime","_startTime$split$map","_startTime$split$map2","startHours","endHours","duration","handleSalonSelect","handleBarberSelect","barber","handleDateSelect","dateString","setHours","handleTimeSelect","handleBooking","_ref5","_response$data","serviceDuration","_selectedTime$split$m","_selectedTime$split$m2","endHour","endMinute","endTime","bookingData","serviceId","post","bookingSuccess","setTimeout","goBack","text","navError","_response$data2","debugSalonAndStaff","_ref6","JSON","stringify","staffDetails","forEach","staffMember","idx","usersData","salonStaff","potentialBarbers","roleCheck","isBarber","isValidBarber","userError","_x2","testNavigation","navigate","reset","index","routes","resetError","renderSalonSelection","style","styles","section","children","sectionTitle","emptyContainer","emptyText","salonList","salonCard","selectedSalonCard","onPress","Icon","size","icon","backgroundColor","salonIcon","salonInfo","salonName","salonAddress","address","street","city","salonPhone","phone","selectedIndicator","mode","selectedChip","debugContainer","debugButton","renderBarberSelection","sectionHeader","compact","errorContainer","errorText","centeredContent","color","loadingText","changeButton","horizontal","showsHorizontalScrollIndicator","barberScroll","hasWorkSchedule","workSchedule","getDay","isWorkingToday","some","schedule","day","isWorking","weeklySchedule","weekDays","_loop","i","barberCard","selectedBarberCard","Image","source","uri","profileImage","barberImage","barberName","availabilityContainer","availabilityDot","availabilityText","dayIndicator","dayText","dayDot","specialties","numberOfLines","slice","join","renderDateSelection","currentDateString","toISOString","markedDates","selected","selectedColor","current","minDate","onDayPress","theme","selectedDayBackgroundColor","todayTextColor","arrowColor","renderTimeSelection","emptySubText","marginTop","timeGrid","isAvailable","timeCard","availableTimeCard","unavailableTimeCard","selectedTimeCard","disabled","timeText","availableTimeText","unavailableTimeText","selectedTimeText","endTimeText","renderBookingSummary","summaryCard","Content","summaryRow","summaryLabel","summaryValue","divider","price","bookButton","height","margin","borderRadius","elevation","contentStyle","labelStyle","fontSize","fontWeight","centered","container","header","headerTitle","serviceCard","serviceDetails","description","progressContainer","progressItem","progressDot","progressActive","progressNumber","progressText","progressLine","create","flex","justifyContent","alignItems","padding","paddingTop","paddingBottom","flexDirection","marginVertical","marginRight","paddingHorizontal","width","marginBottom","marginHorizontal","borderWidth","borderColor","marginLeft","textAlign","flexWrap","noTimesText","paddingVertical","shadowColor","shadowOffset","shadowOpacity","shadowRadius","buttonContent"],"sources":["C:/Users/User/Downloads/git_frontend/mobile/screens/customer/BookingScreen.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, StyleSheet, ScrollView, TouchableOpacity, Alert } from 'react-native';\r\nimport { Text, Card, Button, Title, Paragraph, ActivityIndicator, Divider, Avatar, Chip } from 'react-native-paper';\r\nimport { Calendar } from 'react-native-calendars';\r\nimport { format } from 'date-fns';\r\nimport { barbersApi, appointmentsApi, servicesApi } from '../../api/client';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport apiClient from '../../api/client';\r\nimport { CommonActions } from '@react-navigation/native';\r\nimport { navigationRef, navigateToTab } from '../../App';\r\n\r\nconst BookingScreen = ({ route, navigation }) => {\r\n  const { service } = route.params;\r\n  \r\n  const [salons, setSalons] = useState([]);\r\n  const [selectedSalon, setSelectedSalon] = useState(null);\r\n  const [barbers, setBarbers] = useState([]);\r\n  const [selectedBarber, setSelectedBarber] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedTime, setSelectedTime] = useState('');\r\n  const [availableTimes, setAvailableTimes] = useState([]);\r\n  const [allTimeSlots, setAllTimeSlots] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [step, setStep] = useState(1); // 1 = select salon, 2 = select barber, 3 = select date, 4 = select time\r\n  \r\n  const { userInfo } = useContext(AuthContext);\r\n  \r\n  // Time slots from 9 AM to 6 PM\r\n  const defaultTimeSlots = [\r\n    '09:00', '09:30', '10:00', '10:30', '11:00', '11:30',\r\n    '12:00', '12:30', '13:00', '13:30', '14:00', '14:30',\r\n    '15:00', '15:30', '16:00', '16:30', '17:00', '17:30'\r\n  ];\r\n  \r\n  // Get today's date in YYYY-MM-DD format\r\n  const today = new Date();\r\n  const formattedToday = format(today, 'yyyy-MM-dd');\r\n  \r\n  // Fetch salons on component mount\r\n  useEffect(() => {\r\n    fetchSalons();\r\n  }, []);\r\n  \r\n  // Fetch barbers when salon is selected\r\n  useEffect(() => {\r\n    if (selectedSalon) {\r\n      fetchBarbersBySalon(selectedSalon._id);\r\n    }\r\n  }, [selectedSalon]);\r\n  \r\n  // Fetch available time slots when barber or date changes\r\n  useEffect(() => {\r\n    if (selectedBarber && selectedDate) {\r\n      fetchAvailableTimes();\r\n    } else {\r\n      // Reset time slots when barber or date is not selected\r\n      const timeSlots = [...defaultTimeSlots];\r\n      setAllTimeSlots(timeSlots);\r\n      setAvailableTimes([]);\r\n    }\r\n  }, [selectedBarber, selectedDate]);\r\n  \r\n  const fetchSalons = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await apiClient.get('/salons', {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo?.token}`\r\n        }\r\n      });\r\n      \r\n      if (response.data && response.data.success) {\r\n        setSalons(response.data.salons);\r\n        console.log(`Loaded ${response.data.salons.length} salons`);\r\n      } else {\r\n        throw new Error('Failed to fetch salons');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching salons:', error);\r\n      setError('Failed to load salons. Please try again.');\r\n      setLoading(false);\r\n      Alert.alert('Error', 'Failed to load salons. Please try again later.');\r\n    }\r\n  };\r\n  \r\n  const fetchBarbersBySalon = async (salonId) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      console.log(`Fetching barbers for salon ID: ${salonId}`);\r\n      \r\n      // APPROACH: Fetch the full user list first, then filter by the salon's staff IDs\r\n      // This is more reliable than expecting populated staff objects\r\n      \r\n      // Step 1: Get salon details to get staff IDs\r\n      const salonResponse = await apiClient.get(`/salons/${salonId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo?.token}`\r\n        }\r\n      });\r\n      \r\n      if (!salonResponse.data || !salonResponse.data.success) {\r\n        throw new Error('Failed to fetch salon details');\r\n      }\r\n      \r\n      const salonData = salonResponse.data.salon;\r\n      console.log(`Loaded salon: ${salonData.name}`);\r\n      \r\n      // Check if staff property exists\r\n      if (!salonData.staff || !Array.isArray(salonData.staff) || salonData.staff.length === 0) {\r\n        console.log('No staff array found in salon data or it is empty');\r\n        setBarbers([]);\r\n        setError('No barbers available for this salon. Staff not assigned.');\r\n        setLoading(false);\r\n        setStep(2); // Still move to next step to show empty state\r\n        return;\r\n      }\r\n      \r\n      // Step 2: Extract all staff IDs (whether objects or plain IDs)\r\n      const staffIds = salonData.staff.map(staff => \r\n        typeof staff === 'object' ? staff._id : staff\r\n      );\r\n      \r\n      console.log(`Found ${salonData.staff.length} staff IDs`);\r\n      \r\n      // Step 3: Get all users and filter by staff IDs + barber role\r\n      // Use the salon's staff directly if they are populated with user data\r\n      let barberStaff = [];\r\n      \r\n      if (salonData.staff.every(staff => typeof staff === 'object' && staff.role)) {\r\n        console.log('Staff objects are populated with role data, using directly');\r\n        \r\n        // Use the populated staff data directly\r\n        barberStaff = salonData.staff.filter(staff => {\r\n          const roleToCheck = (staff.role || '').toLowerCase();\r\n          const isBarberRole = roleToCheck === 'barber' || \r\n                              roleToCheck.includes('barber') || \r\n                              roleToCheck === 'stylist';\r\n          \r\n          console.log(`Direct staff member check - ${staff.name}: role=${staff.role}, isBarber=${isBarberRole}`);\r\n          return isBarberRole;\r\n        });\r\n      } else {\r\n        // Need to fetch users from the admin endpoint\r\n        try {\r\n          console.log('Using admin endpoint to fetch users');\r\n          const usersResponse = await apiClient.get('/admin/users', {\r\n            headers: {\r\n              Authorization: `Bearer ${userInfo?.token}`\r\n            }\r\n          });\r\n          \r\n          if (!usersResponse.data || !usersResponse.data.success) {\r\n            throw new Error('Failed to fetch users');\r\n          }\r\n          \r\n          const allUsers = usersResponse.data.users || [];\r\n          console.log(`Fetched ${allUsers.length} total users from admin endpoint`);\r\n          \r\n          // Find users who are both in the salon's staff list AND have a barber/stylist role\r\n          barberStaff = allUsers.filter(user => {\r\n            // First check if this user is in the salon's staff list\r\n            const isStaffMember = staffIds.includes(user._id);\r\n            if (!isStaffMember) return false;\r\n            \r\n            // Then check role (with flexible matching)\r\n            const roleToCheck = (user.role || '').toLowerCase();\r\n            const isBarberRole = roleToCheck === 'barber' || \r\n                                roleToCheck.includes('barber') || \r\n                                roleToCheck === 'stylist';\r\n            \r\n            console.log(`Admin staff check - ${user.name}: role=${user.role}, isBarber=${isBarberRole}`);\r\n            return isBarberRole;\r\n          });\r\n        } catch (error) {\r\n          console.error('Error fetching from admin endpoint:', error);\r\n          // Try a direct approach as fallback\r\n          try {\r\n            console.log('Trying direct staff ID lookup');\r\n            // Fetch each staff member directly by ID\r\n            barberStaff = [];\r\n            for (const staffId of staffIds) {\r\n              try {\r\n                const userResponse = await apiClient.get(`/admin/users/${staffId}`, {\r\n                  headers: {\r\n                    Authorization: `Bearer ${userInfo?.token}`\r\n                  }\r\n                });\r\n                \r\n                if (userResponse.data && userResponse.data.success) {\r\n                  const user = userResponse.data.user;\r\n                  const roleToCheck = (user.role || '').toLowerCase();\r\n                  const isBarberRole = roleToCheck === 'barber' || \r\n                                     roleToCheck.includes('barber') || \r\n                                     roleToCheck === 'stylist';\r\n                                      \r\n                  if (isBarberRole) {\r\n                    barberStaff.push(user);\r\n                    console.log(`Added staff member by ID: ${user.name}, role=${user.role}`);\r\n                  }\r\n                }\r\n              } catch (err) {\r\n                console.log(`Error fetching staff ID ${staffId}:`, err);\r\n              }\r\n            }\r\n          } catch (fallbackError) {\r\n            console.error('Error with fallback approach:', fallbackError);\r\n          }\r\n        }\r\n      }\r\n      \r\n      console.log(`Found ${barberStaff.length} barbers for this salon`);\r\n      \r\n      if (barberStaff.length > 0) {\r\n        setBarbers(barberStaff);\r\n        console.log(`Loaded ${barberStaff.length} barbers for salon ${salonData.name}`);\r\n      } else {\r\n        setBarbers([]);\r\n        setError('No barbers available for this salon. Staff exists but no barber roles found.');\r\n        Alert.alert(\r\n          'No Barbers', \r\n          'This salon does not have any barbers assigned. Please select another salon or use the debug button to check staff roles.'\r\n        );\r\n      }\r\n      \r\n      setLoading(false);\r\n      setStep(2); // Move to next step\r\n    } catch (error) {\r\n      console.error('Error fetching barbers by salon:', error);\r\n      setError('Failed to load barbers. Please try again.');\r\n      Alert.alert('Error', 'Failed to load barbers: ' + (error.message || 'Unknown error'));\r\n      setLoading(false);\r\n      setStep(2); // Still move to next step to show error state\r\n    }\r\n  };\r\n  \r\n  const fetchAvailableTimes = async () => {\r\n    if (!selectedBarber || !selectedDate) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Generate time slots from 9 AM to 5 PM\r\n      const timeSlots = [];\r\n      \r\n      // Get current date and selected date for comparison\r\n      const now = new Date();\r\n      const selectedDateObj = new Date(selectedDate);\r\n      const isToday = selectedDateObj.getDate() === now.getDate() && \r\n                      selectedDateObj.getMonth() === now.getMonth() && \r\n                      selectedDateObj.getFullYear() === now.getFullYear();\r\n      \r\n      const currentHour = now.getHours();\r\n      const currentMinute = now.getMinutes();\r\n      \r\n      // Generate times from 9am to 5pm\r\n      for (let hour = 9; hour <= 17; hour++) {\r\n        for (let minute of [0, 30]) {\r\n          // Skip times in the past if it's today\r\n          if (isToday && (hour < currentHour || (hour === currentHour && minute <= currentMinute))) {\r\n            continue;\r\n          }\r\n          \r\n          const formattedHour = hour.toString().padStart(2, '0');\r\n          const formattedMinute = minute.toString().padStart(2, '0');\r\n          timeSlots.push(`${formattedHour}:${formattedMinute}`);\r\n        }\r\n      }\r\n      \r\n      // Set default time slots\r\n      setAllTimeSlots(timeSlots);\r\n      \r\n      // If we have a barber, check their availability\r\n      try {\r\n        console.log('Fetching availability for:', {\r\n          barberId: selectedBarber._id,\r\n          date: selectedDate,\r\n          salonId: selectedSalon._id\r\n        });\r\n        \r\n        // Fetch existing appointments for the barber and date\r\n        const response = await appointmentsApi.getBarberAvailability(\r\n          selectedBarber._id, \r\n          selectedDate,\r\n          selectedSalon._id\r\n        );\r\n        \r\n        console.log('Availability response:', response?.data);\r\n        \r\n        if (response?.data && response.data.success) {\r\n          // Set all time slots for display\r\n          setAllTimeSlots(timeSlots);\r\n          \r\n          // Set available times from API\r\n          const availableTimes = response.data.availableTimes || [];\r\n          \r\n          console.log('Available times from API:', availableTimes);\r\n          \r\n          // Filter availableTimes to ensure they're also in our valid timeSlots\r\n          // (this ensures we don't show past times even if the API returns them)\r\n          const filteredTimes = availableTimes.filter(time => \r\n            timeSlots.includes(time)\r\n          );\r\n          \r\n          console.log('Filtered times:', filteredTimes);\r\n          \r\n          setAvailableTimes(filteredTimes);\r\n          \r\n          // If we were in step 4 (time selection) but no times are available,\r\n          // automatically go back to date selection\r\n          if (step === 4 && filteredTimes.length === 0) {\r\n            setSelectedTime(null);\r\n          }\r\n          // If we had a selected time but it's no longer available, clear it\r\n          else if (selectedTime && !filteredTimes.includes(selectedTime)) {\r\n            setSelectedTime(null);\r\n          }\r\n        } else {\r\n          console.error('API error response or no response data:', response?.data);\r\n          // FALLBACK: Use all time slots if API fails to return available times\r\n          console.log('Using fallback time slots due to API error');\r\n          setAllTimeSlots(timeSlots);\r\n          setAvailableTimes(timeSlots);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching barber availability:', error);\r\n        console.log('Using fallback time slots due to error');\r\n        // FALLBACK: Use all time slots if API call fails\r\n        setAllTimeSlots(timeSlots);\r\n        setAvailableTimes(timeSlots);\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error in fetchAvailableTimes:', error);\r\n      setLoading(false);\r\n      \r\n      // FALLBACK: Generate time slots locally as a last resort\r\n      const fallbackTimeSlots = [];\r\n      for (let hour = 9; hour <= 17; hour++) {\r\n        fallbackTimeSlots.push(`${hour}:00`);\r\n        fallbackTimeSlots.push(`${hour}:30`);\r\n      }\r\n      setAllTimeSlots(fallbackTimeSlots);\r\n      setAvailableTimes(fallbackTimeSlots);\r\n    }\r\n  };\r\n  \r\n  // Helper function to convert decimal hours to HH:MM format\r\n  const formatTimeFromHours = (decimalHours) => {\r\n    const hours = Math.floor(decimalHours);\r\n    const minutes = Math.round((decimalHours - hours) * 60);\r\n    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\r\n  };\r\n  \r\n  // Helper function to convert HH:MM to decimal hours\r\n  const getDecimalHours = (time) => {\r\n    const [hours, minutes] = time.split(':').map(Number);\r\n    return hours + (minutes / 60);\r\n  };\r\n  \r\n  // Calculate end time based on selected time and service duration\r\n  const getEndTime = (startTime) => {\r\n    const [hours, minutes] = startTime.split(':').map(Number);\r\n    const startHours = hours + (minutes / 60);\r\n    const endHours = startHours + (service.duration / 60);\r\n    return formatTimeFromHours(endHours);\r\n  };\r\n  \r\n  const handleSalonSelect = (salon) => {\r\n    setSelectedSalon(salon);\r\n    setSelectedBarber(null);\r\n    setSelectedDate('');\r\n    setSelectedTime('');\r\n    // Next step will be triggered by useEffect when barbers are loaded\r\n  };\r\n  \r\n  const handleBarberSelect = (barber) => {\r\n    setSelectedBarber(barber);\r\n    setStep(3); // Move to date selection\r\n  };\r\n  \r\n  const handleDateSelect = (date) => {\r\n    // Check if the selected date is not in the past\r\n    const selectedDateObj = new Date(date.dateString);\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0); // Set to start of day for accurate comparison\r\n    \r\n    if (selectedDateObj < today) {\r\n      Alert.alert(\r\n        \"Invalid Date\", \r\n        \"You cannot book appointments in the past. Please select today or a future date.\"\r\n      );\r\n      return;\r\n    }\r\n    \r\n    setSelectedDate(date.dateString);\r\n    setStep(4); // Move to time selection\r\n  };\r\n  \r\n  const handleTimeSelect = (time) => {\r\n    setSelectedTime(time);\r\n  };\r\n  \r\n  const handleBooking = async () => {\r\n    // Basic validation\r\n    if (!selectedBarber || !selectedDate || !selectedTime || !selectedSalon) {\r\n      Alert.alert('Error', 'Please complete all booking details');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSubmitting(true);\r\n      console.log(\"Starting booking process...\");\r\n      \r\n      // Calculate end time\r\n      const serviceDuration = service.duration || 30;\r\n      const [hour, minute] = selectedTime.split(':').map(Number);\r\n      let endHour = hour;\r\n      let endMinute = minute + serviceDuration;\r\n      \r\n      // Adjust hour if minutes overflow\r\n      if (endMinute >= 60) {\r\n        endHour += Math.floor(endMinute / 60);\r\n        endMinute = endMinute % 60;\r\n      }\r\n      \r\n      const endTime = `${endHour.toString().padStart(2, '0')}:${endMinute.toString().padStart(2, '0')}`;\r\n      \r\n      // Format booking data\r\n      const bookingData = {\r\n        barberId: selectedBarber._id,\r\n        serviceId: service._id,\r\n        salonId: selectedSalon._id,\r\n        date: selectedDate,\r\n        startTime: selectedTime,\r\n        endTime: endTime\r\n      };\r\n      \r\n      console.log('Booking data:', bookingData);\r\n      \r\n      // Simple direct API call\r\n      const response = await apiClient.post('/appointments', bookingData, {\r\n        headers: { Authorization: `Bearer ${userInfo?.token}` }\r\n      });\r\n      \r\n      setSubmitting(false);\r\n      \r\n      console.log('BOOKING SUCCESS! Response:', response?.data);\r\n      \r\n      if (response?.data?.success) {\r\n        console.log('BOOKING SUCCESS! Response:', response?.data);\r\n        \r\n        // Set a flag for successful booking\r\n        const bookingSuccess = true;\r\n        \r\n        // First just go back - this is the most reliable approach\r\n        setTimeout(() => {\r\n          try {\r\n            console.log('Navigating back to previous screen');\r\n            navigation.goBack();\r\n            \r\n            // Then show success alert\r\n            setTimeout(() => {\r\n              Alert.alert(\r\n                'Booking Confirmed!',\r\n                `Your appointment with ${selectedBarber.name} on ${format(new Date(selectedDate), 'MMMM d')} at ${selectedTime} has been booked successfully.`,\r\n                [{ text: 'OK' }]\r\n              );\r\n            }, 100);\r\n          } catch (navError) {\r\n            console.error('Navigation error:', navError);\r\n            // If navigation fails, at least show the success message\r\n            Alert.alert(\r\n              'Booking Confirmed!',\r\n              `Your appointment with ${selectedBarber.name} on ${format(new Date(selectedDate), 'MMMM d')} at ${selectedTime} has been booked successfully.`,\r\n              [{ text: 'OK' }]\r\n            );\r\n          }\r\n        }, 100);\r\n      } else {\r\n        throw new Error(response?.data?.message || 'Unknown booking error');\r\n      }\r\n    } catch (error) {\r\n      console.error('Booking error:', error);\r\n      setSubmitting(false);\r\n      Alert.alert('Error', error.message || 'Failed to book appointment. Please try again.');\r\n    }\r\n  };\r\n  \r\n  // Debug button\r\n  const debugSalonAndStaff = async (salonId) => {\r\n    try {\r\n      console.log(`Debug: Fetching detailed data for salon ${salonId}`);\r\n      \r\n      // Fetch salon details\r\n      const salonResponse = await apiClient.get(`/salons/${salonId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo?.token}`\r\n        }\r\n      });\r\n      \r\n      const salonData = salonResponse.data;\r\n      console.log('Raw salon data:', JSON.stringify(salonData));\r\n      \r\n      // Get staff IDs\r\n      let staffIds = [];\r\n      let staffDetails = '';\r\n      \r\n      if (salonData.salon && salonData.salon.staff) {\r\n        console.log('Staff array length:', salonData.salon.staff.length);\r\n        console.log('Staff array type:', typeof salonData.salon.staff);\r\n        console.log('Staff array:', JSON.stringify(salonData.salon.staff));\r\n        \r\n        // Extract staff IDs\r\n        staffIds = salonData.salon.staff.map(staff => \r\n          typeof staff === 'object' ? staff._id : staff\r\n        );\r\n        \r\n        // Log staff members\r\n        salonData.salon.staff.forEach((staffMember, idx) => {\r\n          console.log(`Staff #${idx}:`, JSON.stringify(staffMember));\r\n          if (typeof staffMember === 'object') {\r\n            const role = staffMember.role || 'unknown';\r\n            staffDetails += `${idx+1}. ${staffMember.name}: role=${role}\\n`;\r\n          } else {\r\n            staffDetails += `${idx+1}. ID only: ${staffMember}\\n`;\r\n          }\r\n        });\r\n      }\r\n      \r\n      // Always fetch all users to compare\r\n      try {\r\n        const usersResponse = await apiClient.get('/users', {\r\n          headers: {\r\n            Authorization: `Bearer ${userInfo?.token}`\r\n          }\r\n        });\r\n        \r\n        const usersData = usersResponse.data;\r\n        \r\n        if (usersData.success && usersData.users) {\r\n          // Find users who are in this salon's staff\r\n          const salonStaff = usersData.users.filter(user => \r\n            staffIds.includes(user._id)\r\n          );\r\n          \r\n          console.log(`Found ${salonStaff.length} staff members through user lookup`);\r\n          \r\n          // Count barbers specifically\r\n          const potentialBarbers = salonStaff.filter(user => {\r\n            const roleCheck = (user.role || '').toLowerCase();\r\n            const isBarber = roleCheck === 'barber' || \r\n                           roleCheck.includes('barber') || \r\n                           roleCheck === 'stylist';\r\n            console.log(`User ${user.name}, role=${user.role}, isBarber=${isBarber}`);\r\n            return isBarber;\r\n          });\r\n          \r\n          console.log(`Found ${potentialBarbers.length} potential barbers`);\r\n          \r\n          salonStaff.forEach((staff, idx) => {\r\n            const role = staff.role || 'unknown';\r\n            const isValidBarber = (role.toLowerCase() === 'barber' || \r\n                                 role.toLowerCase().includes('barber') || \r\n                                 role.toLowerCase() === 'stylist');\r\n            staffDetails += `${idx+1}. ${staff.name}: role=${role} (${isValidBarber ? 'Valid Barber' : 'Not a Barber'})\\n`;\r\n          });\r\n        }\r\n      } catch (userError) {\r\n        console.error('Error fetching users for debug:', userError);\r\n        staffDetails += '(Error fetching user details)\\n';\r\n      }\r\n      \r\n      // Show alert with details\r\n      Alert.alert(\r\n        'Debug Info', \r\n        `Salon: ${salonData.salon.name}\\n` +\r\n        `Staff count: ${salonData.salon.staff ? salonData.salon.staff.length : 0}\\n\\n` +\r\n        `Staff:\\n${staffDetails || 'No staff details available'}`\r\n      );\r\n    } catch (err) {\r\n      console.error('Debug fetch error:', err);\r\n      Alert.alert('Debug Error', err.toString());\r\n    }\r\n  };\r\n  \r\n  // Test navigation function\r\n  const testNavigation = () => {\r\n    console.log('Testing navigation to Appointments screen');\r\n    try {\r\n      navigation.navigate('Appointments');\r\n      console.log('Navigation successful');\r\n    } catch (error) {\r\n      console.error('Navigation error:', error);\r\n      \r\n      // Try alternative navigation\r\n      try {\r\n        console.log('Trying alternative navigation');\r\n        navigation.reset({\r\n          index: 0,\r\n          routes: [{ name: 'Appointments' }],\r\n        });\r\n        console.log('Alternative navigation successful');\r\n      } catch (resetError) {\r\n        console.error('Alternative navigation error:', resetError);\r\n        Alert.alert('Navigation Failed', 'Could not navigate to Appointments screen');\r\n      }\r\n    }\r\n  };\r\n  \r\n  const renderSalonSelection = () => (\r\n    <View style={styles.section}>\r\n      <Text style={styles.sectionTitle}>Select Salon</Text>\r\n      {salons.length === 0 && !loading ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyText}>No salons available.</Text>\r\n        </View>\r\n      ) : (\r\n        <View style={styles.salonList}>\r\n          {salons.map(salon => (\r\n            <TouchableOpacity\r\n              key={salon._id}\r\n              style={[\r\n                styles.salonCard,\r\n                selectedSalon && selectedSalon._id === salon._id ? styles.selectedSalonCard : null\r\n              ]}\r\n              onPress={() => handleSalonSelect(salon)}\r\n            >\r\n              <Avatar.Icon \r\n                size={60} \r\n                icon=\"store\" \r\n                backgroundColor=\"#0F4C75\" \r\n                style={styles.salonIcon}\r\n              />\r\n              <View style={styles.salonInfo}>\r\n                <Title style={styles.salonName}>{salon.name}</Title>\r\n                <Paragraph style={styles.salonAddress}>\r\n                  {salon.address && salon.address.street ? (\r\n                    <Text>{salon.address.street}, {salon.address.city}</Text>\r\n                  ) : (\r\n                    <Text>Address not available</Text>\r\n                  )}\r\n                </Paragraph>\r\n                <Paragraph style={styles.salonPhone}>\r\n                  <Text>{salon.phone || 'Phone not available'}</Text>\r\n                </Paragraph>\r\n              </View>\r\n              {selectedSalon && selectedSalon._id === salon._id && (\r\n                <View style={styles.selectedIndicator}>\r\n                  <Chip mode=\"flat\" style={styles.selectedChip}>Selected</Chip>\r\n                </View>\r\n              )}\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n      )}\r\n      \r\n      {/* Debug button */}\r\n      <View style={styles.debugContainer}>\r\n        <Button\r\n          mode=\"outlined\"\r\n          style={styles.debugButton}\r\n          onPress={() => {\r\n            if (salons && salons.length > 0) {\r\n              const salonId = salons[0]._id;\r\n              debugSalonAndStaff(salonId);\r\n            } else {\r\n              Alert.alert('Debug Info', 'No salons to debug');\r\n            }\r\n          }}\r\n        >\r\n          Debug Salon Data\r\n        </Button>\r\n      </View>\r\n    </View>\r\n  );\r\n  \r\n  const renderBarberSelection = () => (\r\n    <View style={styles.section}>\r\n      <View style={styles.sectionHeader}>\r\n        <Text style={styles.sectionTitle}>Select Barber</Text>\r\n        <Button \r\n          mode=\"outlined\" \r\n          onPress={() => setStep(1)}\r\n          compact\r\n        >\r\n          Change Salon\r\n        </Button>\r\n      </View>\r\n      \r\n      {error ? (\r\n        <View style={styles.errorContainer}>\r\n          <Text style={styles.errorText}>{error}</Text>\r\n        </View>\r\n      ) : loading ? (\r\n        <View style={styles.centeredContent}>\r\n          <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n          <Text style={styles.loadingText}>Loading barbers...</Text>\r\n        </View>\r\n      ) : barbers.length === 0 ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyText}>No barbers available for this salon.</Text>\r\n          <Button \r\n            mode=\"contained\" \r\n            onPress={() => setStep(1)}\r\n            style={styles.changeButton}\r\n          >\r\n            Select Different Salon\r\n          </Button>\r\n        </View>\r\n      ) : (\r\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.barberScroll}>\r\n          {barbers.map(barber => {\r\n            // Calculate barber availability status\r\n            const hasWorkSchedule = barber.workSchedule && barber.workSchedule.length > 0;\r\n            const today = new Date().getDay(); // 0 = Sunday, 1 = Monday, etc.\r\n            const isWorkingToday = hasWorkSchedule && \r\n              barber.workSchedule.some(schedule => \r\n                schedule.day === today && schedule.isWorking\r\n              );\r\n            \r\n            // Calculate barber's weekly schedule\r\n            const weeklySchedule = [];\r\n            const weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n            \r\n            for (let i = 0; i < 7; i++) {\r\n              const isWorking = hasWorkSchedule && \r\n                barber.workSchedule.some(schedule => \r\n                  schedule.day === i && schedule.isWorking\r\n                );\r\n              \r\n              weeklySchedule.push({\r\n                day: weekDays[i],\r\n                isWorking\r\n              });\r\n            }\r\n            \r\n            return (\r\n              <TouchableOpacity\r\n                key={barber._id}\r\n                style={[\r\n                  styles.barberCard,\r\n                  selectedBarber && selectedBarber._id === barber._id ? styles.selectedBarberCard : null\r\n                ]}\r\n                onPress={() => handleBarberSelect(barber)}\r\n              >\r\n                <Avatar.Image \r\n                  size={70} \r\n                  source={{ uri: barber.profileImage || 'https://via.placeholder.com/70' }} \r\n                  style={styles.barberImage}\r\n                />\r\n                <Text style={styles.barberName}>{barber.name}</Text>\r\n                \r\n                {/* Availability indicator */}\r\n                <View style={styles.availabilityContainer}>\r\n                  <View \r\n                    style={[\r\n                      styles.availabilityDot, \r\n                      { backgroundColor: isWorkingToday ? '#4CAF50' : '#F44336' }\r\n                    ]} \r\n                  />\r\n                  <Text style={styles.availabilityText}>\r\n                    {isWorkingToday ? 'Available Today' : 'Unavailable Today'}\r\n                  </Text>\r\n                </View>\r\n                \r\n                {/* Weekly availability */}\r\n                <View style={styles.weeklySchedule}>\r\n                  {weeklySchedule.map((day, index) => (\r\n                    <View key={index} style={styles.dayIndicator}>\r\n                      <Text style={styles.dayText}>{day.day}</Text>\r\n                      <View \r\n                        style={[\r\n                          styles.dayDot, \r\n                          { backgroundColor: day.isWorking ? '#4CAF50' : '#F44336' }\r\n                        ]} \r\n                      />\r\n                    </View>\r\n                  ))}\r\n                </View>\r\n                \r\n                {/* Specialties */}\r\n                {barber.specialties && barber.specialties.length > 0 && (\r\n                  <Text style={styles.specialties} numberOfLines={1}>\r\n                    {barber.specialties.slice(0, 2).join(', ')}\r\n                  </Text>\r\n                )}\r\n              </TouchableOpacity>\r\n            );\r\n          })}\r\n        </ScrollView>\r\n      )}\r\n    </View>\r\n  );\r\n  \r\n  const renderDateSelection = () => {\r\n    // Get current date to disable past dates\r\n    const today = new Date();\r\n    const currentDateString = today.toISOString().split('T')[0];\r\n    \r\n    // Generate marked dates object - disable past dates\r\n    const markedDates = {};\r\n    \r\n    // Mark selected date if there is one\r\n    if (selectedDate) {\r\n      markedDates[selectedDate] = { selected: true, selectedColor: '#0F4C75' };\r\n    }\r\n    \r\n    return (\r\n      <View style={styles.section}>\r\n        <View style={styles.sectionHeader}>\r\n          <Text style={styles.sectionTitle}>Select Date</Text>\r\n          <Button \r\n            mode=\"outlined\" \r\n            onPress={() => setStep(2)}\r\n            compact\r\n          >\r\n            Change Barber\r\n          </Button>\r\n        </View>\r\n        \r\n        <Calendar\r\n          current={currentDateString}\r\n          minDate={currentDateString}\r\n          onDayPress={handleDateSelect}\r\n          markedDates={markedDates}\r\n          theme={{\r\n            selectedDayBackgroundColor: '#0F4C75',\r\n            todayTextColor: '#0F4C75',\r\n            arrowColor: '#0F4C75',\r\n          }}\r\n        />\r\n      </View>\r\n    );\r\n  };\r\n  \r\n  const renderTimeSelection = () => (\r\n    <View style={styles.section}>\r\n      <View style={styles.sectionHeader}>\r\n        <Text style={styles.sectionTitle}>Select Time</Text>\r\n        <Button \r\n          mode=\"outlined\" \r\n          onPress={() => setStep(3)}\r\n          compact\r\n        >\r\n          Change Date\r\n        </Button>\r\n      </View>\r\n      \r\n      {loading ? (\r\n        <View style={styles.centeredContent}>\r\n          <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n          <Text style={styles.loadingText}>Loading available times...</Text>\r\n        </View>\r\n      ) : availableTimes.length === 0 ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyText}>No available time slots for this date.</Text>\r\n          <Text style={styles.emptySubText}>Try selecting a different date or barber.</Text>\r\n          <Button \r\n            mode=\"contained\" \r\n            onPress={() => {\r\n              // Force refresh time slots with fallback\r\n              const timeSlots = [...defaultTimeSlots];\r\n              setAllTimeSlots(timeSlots);\r\n              setAvailableTimes(timeSlots);\r\n            }}\r\n            style={styles.changeButton}\r\n          >\r\n            Force Show All Time Slots\r\n          </Button>\r\n          <Button \r\n            mode=\"contained\" \r\n            onPress={() => setStep(3)}\r\n            style={[styles.changeButton, { marginTop: 10 }]}\r\n          >\r\n            Select Different Date\r\n          </Button>\r\n        </View>\r\n      ) : (\r\n        <View style={styles.timeGrid}>\r\n          {allTimeSlots.map(time => {\r\n            const isAvailable = availableTimes.includes(time);\r\n            \r\n            return (\r\n              <TouchableOpacity\r\n                key={time}\r\n                style={[\r\n                  styles.timeCard,\r\n                  isAvailable ? styles.availableTimeCard : styles.unavailableTimeCard,\r\n                  selectedTime === time ? styles.selectedTimeCard : null\r\n                ]}\r\n                onPress={() => isAvailable && handleTimeSelect(time)}\r\n                disabled={!isAvailable}\r\n              >\r\n                <Text \r\n                  style={[\r\n                    styles.timeText,\r\n                    isAvailable ? styles.availableTimeText : styles.unavailableTimeText,\r\n                    selectedTime === time ? styles.selectedTimeText : null\r\n                  ]}\r\n                >\r\n                  {time}\r\n                </Text>\r\n                <Text style={styles.endTimeText}>\r\n                  {isAvailable ? `- ${getEndTime(time)}` : '(Booked)'}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            );\r\n          })}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n  \r\n  const renderBookingSummary = () => (\r\n    <View style={styles.section}>\r\n      <Text style={styles.sectionTitle}>Booking Summary</Text>\r\n      <Card style={styles.summaryCard}>\r\n        <Card.Content>\r\n          <View style={styles.summaryRow}>\r\n            <Text style={styles.summaryLabel}>Salon:</Text>\r\n            <Text style={styles.summaryValue}>{selectedSalon.name}</Text>\r\n          </View>\r\n          <Divider style={styles.divider} />\r\n          <View style={styles.summaryRow}>\r\n            <Text style={styles.summaryLabel}>Service:</Text>\r\n            <Text style={styles.summaryValue}>{service.name}</Text>\r\n          </View>\r\n          <Divider style={styles.divider} />\r\n          <View style={styles.summaryRow}>\r\n            <Text style={styles.summaryLabel}>Barber:</Text>\r\n            <Text style={styles.summaryValue}>{selectedBarber.name}</Text>\r\n          </View>\r\n          <Divider style={styles.divider} />\r\n          <View style={styles.summaryRow}>\r\n            <Text style={styles.summaryLabel}>Date:</Text>\r\n            <Text style={styles.summaryValue}>{format(new Date(selectedDate), 'MMMM d, yyyy')}</Text>\r\n          </View>\r\n          <Divider style={styles.divider} />\r\n          <View style={styles.summaryRow}>\r\n            <Text style={styles.summaryLabel}>Time:</Text>\r\n            <Text style={styles.summaryValue}>{selectedTime} - {getEndTime(selectedTime)}</Text>\r\n          </View>\r\n          <Divider style={styles.divider} />\r\n          <View style={styles.summaryRow}>\r\n            <Text style={styles.summaryLabel}>Price:</Text>\r\n            <Text style={styles.summaryValue}>${service.price}</Text>\r\n          </View>\r\n        </Card.Content>\r\n      </Card>\r\n      \r\n      <Button \r\n        mode=\"contained\" \r\n        style={[\r\n          styles.bookButton, \r\n          { \r\n            backgroundColor: '#3F51B5', \r\n            height: 65, \r\n            margin: 20,\r\n            borderRadius: 10,\r\n            elevation: 10\r\n          }\r\n        ]}\r\n        contentStyle={{ height: 65 }}\r\n        loading={submitting}\r\n        disabled={submitting}\r\n        labelStyle={{ fontSize: 18, fontWeight: 'bold', color: 'white' }}\r\n        onPress={handleBooking}\r\n      >\r\n        CONFIRM APPOINTMENT\r\n      </Button>\r\n    </View>\r\n  );\r\n  \r\n  if (loading && salons.length === 0) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <ActivityIndicator size=\"large\" color=\"#0F4C75\" />\r\n        <Text style={{ marginTop: 10 }}>Loading salons...</Text>\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Book Appointment</Text>\r\n      </View>\r\n      \r\n      {/* Service Details */}\r\n      <Card style={styles.serviceCard}>\r\n        <Card.Content>\r\n          <Title>{service.name}</Title>\r\n          <View style={styles.serviceDetails}>\r\n            <Paragraph style={styles.price}>${service.price}</Paragraph>\r\n            <Paragraph style={styles.duration}>{service.duration} min</Paragraph>\r\n          </View>\r\n          <Paragraph>{service.description}</Paragraph>\r\n        </Card.Content>\r\n      </Card>\r\n      \r\n      {/* Booking progress indicator */}\r\n      <View style={styles.progressContainer}>\r\n        <View style={styles.progressItem}>\r\n          <View style={[styles.progressDot, step >= 1 ? styles.progressActive : null]}>\r\n            <Text style={styles.progressNumber}>1</Text>\r\n          </View>\r\n          <Text style={styles.progressText}>Salon</Text>\r\n        </View>\r\n        <View style={styles.progressLine} />\r\n        <View style={styles.progressItem}>\r\n          <View style={[styles.progressDot, step >= 2 ? styles.progressActive : null]}>\r\n            <Text style={styles.progressNumber}>2</Text>\r\n          </View>\r\n          <Text style={styles.progressText}>Barber</Text>\r\n        </View>\r\n        <View style={styles.progressLine} />\r\n        <View style={styles.progressItem}>\r\n          <View style={[styles.progressDot, step >= 3 ? styles.progressActive : null]}>\r\n            <Text style={styles.progressNumber}>3</Text>\r\n          </View>\r\n          <Text style={styles.progressText}>Date</Text>\r\n        </View>\r\n        <View style={styles.progressLine} />\r\n        <View style={styles.progressItem}>\r\n          <View style={[styles.progressDot, step >= 4 ? styles.progressActive : null]}>\r\n            <Text style={styles.progressNumber}>4</Text>\r\n          </View>\r\n          <Text style={styles.progressText}>Time</Text>\r\n        </View>\r\n      </View>\r\n      \r\n      {/* Current step content */}\r\n      {step === 1 && renderSalonSelection()}\r\n      {step === 2 && renderBarberSelection()}\r\n      {step === 3 && renderDateSelection()}\r\n      {step === 4 && renderTimeSelection()}\r\n      \r\n      {/* Booking Summary & Confirmation */}\r\n      {selectedSalon && selectedBarber && selectedDate && selectedTime && renderBookingSummary()}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  header: {\r\n    backgroundColor: '#0F4C75',\r\n    padding: 20,\r\n    paddingTop: 50,\r\n    paddingBottom: 20,\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  serviceCard: {\r\n    margin: 15,\r\n    elevation: 2,\r\n  },\r\n  serviceDetails: {\r\n    flexDirection: 'row',\r\n    marginVertical: 10,\r\n  },\r\n  price: {\r\n    fontWeight: 'bold',\r\n    marginRight: 15,\r\n  },\r\n  duration: {\r\n    color: '#666',\r\n  },\r\n  // Progress indicator styles\r\n  progressContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n    marginVertical: 15,\r\n  },\r\n  progressItem: {\r\n    alignItems: 'center',\r\n  },\r\n  progressDot: {\r\n    width: 30,\r\n    height: 30,\r\n    borderRadius: 15,\r\n    backgroundColor: '#E0E0E0',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: 5,\r\n  },\r\n  progressActive: {\r\n    backgroundColor: '#0F4C75',\r\n  },\r\n  progressNumber: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n  progressLine: {\r\n    flex: 1,\r\n    height: 2,\r\n    backgroundColor: '#E0E0E0',\r\n    marginHorizontal: 5,\r\n  },\r\n  progressText: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  },\r\n  section: {\r\n    padding: 15,\r\n    marginBottom: 10,\r\n  },\r\n  sectionHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 15,\r\n  },\r\n  // Salon selection styles\r\n  salonList: {\r\n    marginTop: 10,\r\n  },\r\n  salonCard: {\r\n    flexDirection: 'row',\r\n    backgroundColor: 'white',\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n    elevation: 2,\r\n    alignItems: 'center',\r\n  },\r\n  selectedSalonCard: {\r\n    backgroundColor: '#E1F5FE',\r\n    borderWidth: 1,\r\n    borderColor: '#0F4C75',\r\n  },\r\n  salonIcon: {\r\n    marginRight: 10,\r\n  },\r\n  salonInfo: {\r\n    flex: 1,\r\n  },\r\n  salonName: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  salonAddress: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n    marginBottom: 3,\r\n  },\r\n  salonPhone: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  },\r\n  selectedIndicator: {\r\n    marginLeft: 10,\r\n  },\r\n  selectedChip: {\r\n    backgroundColor: '#0F4C75',\r\n  },\r\n  // Barber selection styles\r\n  barberScroll: {\r\n    marginTop: 10,\r\n    paddingBottom: 5,\r\n  },\r\n  barberCard: {\r\n    width: 160,\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginRight: 10,\r\n    alignItems: 'center',\r\n    elevation: 2,\r\n  },\r\n  selectedBarberCard: {\r\n    backgroundColor: '#E1F5FE',\r\n    borderWidth: 1,\r\n    borderColor: '#0F4C75',\r\n  },\r\n  barberImage: {\r\n    marginBottom: 10,\r\n  },\r\n  barberName: {\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    marginBottom: 5,\r\n  },\r\n  availabilityContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginVertical: 5,\r\n  },\r\n  availabilityDot: {\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: 4,\r\n    marginRight: 5,\r\n  },\r\n  availabilityText: {\r\n    fontSize: 10,\r\n    color: '#666',\r\n  },\r\n  specialties: {\r\n    fontSize: 10,\r\n    color: '#666',\r\n    textAlign: 'center',\r\n  },\r\n  // Time selection styles\r\n  timeGrid: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n    marginTop: 10,\r\n  },\r\n  timeCard: {\r\n    width: '30%',\r\n    backgroundColor: 'white',\r\n    padding: 15,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n    elevation: 1,\r\n  },\r\n  selectedTimeCard: {\r\n    backgroundColor: '#0F4C75',\r\n  },\r\n  timeText: {\r\n    color: '#333',\r\n  },\r\n  endTimeText: {\r\n    color: '#666',\r\n  },\r\n  availableTimeCard: {\r\n    backgroundColor: '#4CAF50',\r\n  },\r\n  unavailableTimeCard: {\r\n    backgroundColor: '#F44336',\r\n  },\r\n  availableTimeText: {\r\n    color: 'white',\r\n  },\r\n  unavailableTimeText: {\r\n    color: 'white',\r\n  },\r\n  selectedTimeText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n  noTimesText: {\r\n    textAlign: 'center',\r\n    color: '#666',\r\n    marginTop: 20,\r\n  },\r\n  // Summary styles\r\n  summaryCard: {\r\n    marginBottom: 20,\r\n  },\r\n  summaryRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    paddingVertical: 10,\r\n  },\r\n  summaryLabel: {\r\n    fontWeight: 'bold',\r\n  },\r\n  summaryValue: {\r\n    textAlign: 'right',\r\n  },\r\n  divider: {\r\n    backgroundColor: '#e0e0e0',\r\n  },\r\n  bookButton: {\r\n    padding: 10,\r\n    marginTop: 20,\r\n    borderRadius: 8,\r\n    elevation: 8,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 4,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 4.65,\r\n  },\r\n  errorContainer: {\r\n    padding: 10,\r\n    backgroundColor: '#FFCCCC',\r\n    borderWidth: 1,\r\n    borderColor: '#FF0000',\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n  },\r\n  errorText: {\r\n    color: '#FF0000',\r\n    fontWeight: 'bold',\r\n  },\r\n  centeredContent: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    color: '#666',\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  emptyText: {\r\n    color: '#666',\r\n    marginBottom: 10,\r\n  },\r\n  changeButton: {\r\n    padding: 10,\r\n  },\r\n  debugContainer: {\r\n    marginTop: 10,\r\n    padding: 10,\r\n    backgroundColor: '#E1F5FE',\r\n    borderRadius: 5,\r\n  },\r\n  debugButton: {\r\n    padding: 10,\r\n  },\r\n  weeklySchedule: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    width: '90%',\r\n    backgroundColor: '#f5f5f5',\r\n    borderRadius: 5,\r\n    padding: 5,\r\n    marginTop: 10,\r\n  },\r\n  dayIndicator: {\r\n    alignItems: 'center',\r\n    padding: 2,\r\n  },\r\n  dayText: {\r\n    fontSize: 10,\r\n    fontWeight: 'bold',\r\n    color: '#666',\r\n    marginBottom: 3,\r\n  },\r\n  dayDot: {\r\n    width: 10,\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  emptySubText: {\r\n    fontSize: 14,\r\n    color: '#888',\r\n    textAlign: 'center',\r\n    marginTop: 5,\r\n    marginBottom: 15,\r\n  },\r\n  buttonContent: {\r\n    height: 60,\r\n    paddingVertical: 10,\r\n  },\r\n});\r\n\r\nexport default BookingScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}