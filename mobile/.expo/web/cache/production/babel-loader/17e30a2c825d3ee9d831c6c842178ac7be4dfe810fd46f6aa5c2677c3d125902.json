{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _callSuper(t,o,e){return o=_getPrototypeOf(o),_possibleConstructorReturn(t,_isNativeReflectConstruct()?Reflect.construct(o,e||[],_getPrototypeOf(t).constructor):o.apply(t,e));}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}import*as Font from'expo-font';import React from'react';import Text from\"react-native-web/dist/exports/Text\";import createIconSet from'./vendor/react-native-vector-icons/lib/create-icon-set';import createIconButtonComponent from'./vendor/react-native-vector-icons/lib/icon-button';import{jsx as _jsx}from\"react/jsx-runtime\";export{DEFAULT_ICON_COLOR,DEFAULT_ICON_SIZE}from'./vendor/react-native-vector-icons/lib/create-icon-set';export default function(glyphMap,fontName,expoAssetId,fontStyle){var _Icon;var font=_defineProperty({},fontName,expoAssetId);var RNVIconComponent=createIconSet(glyphMap,fontName,null,fontStyle);return _Icon=function(_React$Component){function Icon(){var _this;_classCallCheck(this,Icon);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_callSuper(this,Icon,[].concat(args));_this._mounted=false;_this.state={fontIsLoaded:Font.isLoaded(fontName)};return _this;}_inherits(Icon,_React$Component);return _createClass(Icon,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(function*(){this._mounted=true;if(!this.state.fontIsLoaded){yield Font.loadAsync(font);this._mounted&&this.setState({fontIsLoaded:true});}});function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._mounted=false;}},{key:\"setNativeProps\",value:function setNativeProps(props){if(this._icon){this._icon.setNativeProps(props);}}},{key:\"render\",value:function render(){var _this2=this;if(false&&this.props.name&&!(this.props.name in glyphMap)){console.warn(`\"${this.props.name}\" is not a valid icon name for family \"${fontName}\"`);}if(!this.state.fontIsLoaded){return _jsx(Text,{});}return _jsx(RNVIconComponent,_objectSpread({ref:function ref(view){_this2._icon=view;}},this.props));}}]);}(React.Component),_Icon.defaultProps=RNVIconComponent.defaultProps,_Icon.Button=createIconButtonComponent(_Icon),_Icon.glyphMap=glyphMap,_Icon.getRawGlyphMap=function(){return glyphMap;},_Icon.getFontFamily=function(){return fontName;},_Icon.loadFont=function(){return Font.loadAsync(font);},_Icon.font=font,_Icon;}","map":{"version":3,"names":["Font","React","Text","createIconSet","createIconButtonComponent","jsx","_jsx","DEFAULT_ICON_COLOR","DEFAULT_ICON_SIZE","glyphMap","fontName","expoAssetId","fontStyle","_Icon","font","_defineProperty","RNVIconComponent","_React$Component","Icon","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_mounted","state","fontIsLoaded","isLoaded","_inherits","_createClass","key","value","_componentDidMount","_asyncToGenerator","loadAsync","setState","componentDidMount","apply","componentWillUnmount","setNativeProps","props","_icon","render","_this2","name","console","warn","_objectSpread","ref","view","Component","defaultProps","Button","getRawGlyphMap","getFontFamily","loadFont"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\@expo\\vector-icons\\src\\createIconSet.tsx"],"sourcesContent":["import * as Font from 'expo-font';\nimport React, { ComponentClass } from 'react';\nimport {\n  Text,\n  TextProps,\n  TouchableHighlightProps,\n  ViewProps,\n  OpaqueColorValue,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\n\nimport createIconSet from './vendor/react-native-vector-icons/lib/create-icon-set';\nimport createIconButtonComponent from './vendor/react-native-vector-icons/lib/icon-button';\n\nexport {\n  DEFAULT_ICON_COLOR,\n  DEFAULT_ICON_SIZE,\n} from './vendor/react-native-vector-icons/lib/create-icon-set';\n\nexport interface IconProps<GLYPHS extends string> extends TextProps {\n  /**\n   * Size of the icon, can also be passed as fontSize in the style object.\n   *\n   * @default 12\n   */\n  size?: number;\n\n  /**\n   * Name of the icon to show\n   *\n   * See Icon Explorer app\n   * {@link https://expo.github.io/vector-icons/}\n   */\n  name: GLYPHS;\n\n  /**\n   * Color of the icon. Can be a string or OpaqueColorValue (returned from\n   * PlatformColor(..))\n   *\n   */\n  color?: string | OpaqueColorValue;\n}\n\nexport interface IconButtonProps<GLYPHS extends string>\n  extends IconProps<GLYPHS>,\n    ViewProps,\n    TouchableHighlightProps {\n  /**\n   * Text and icon color\n   * Use iconStyle or nest a Text component if you need different colors.\n   * Can be a string or OpaqueColorValue (returned from PlatformColor(..))\n   *\n   *  @default 'white'\n   */\n  color?: string | OpaqueColorValue;\n\n  /**\n   * Border radius of the button\n   * Set to 0 to disable.\n   *\n   * @default 5\n   */\n  borderRadius?: number;\n\n  /**\n   * Styles applied to the icon only\n   * Good for setting margins or a different color.\n   *\n   * @default {marginRight: 10}\n   */\n  iconStyle?: TextStyle;\n\n  /**\n   * Style prop inherited from TextProps and TouchableWithoutFeedbackProperties\n   * Only exist here so we can have ViewStyle or TextStyle\n   *\n   */\n  style?: ViewStyle | TextStyle;\n\n  /**\n   * Background color of the button. Can be a string or OpaqueColorValue (returned from\n   * PlatformColor(..))\n   *\n   * @default '#007AFF'\n   */\n  backgroundColor?: string | OpaqueColorValue;\n}\n\nexport type GlyphMap<G extends string> = { [K in G]: number | string };\n\nexport interface Icon<G extends string, FN extends string> {\n  defaultProps: any;\n  Button: ComponentClass<IconButtonProps<G>>;\n  glyphMap: GlyphMap<G>;\n  getRawGlyphMap: () => GlyphMap<G>;\n  getFontFamily: () => FN;\n  loadFont: () => Promise<void>;\n  font: { [x: string]: any };\n  new (props: IconProps<G>): React.Component<IconProps<G>>;\n}\n\nexport default function <G extends string, FN extends string>(\n  glyphMap: GlyphMap<G>,\n  fontName: FN,\n  expoAssetId,\n  fontStyle?: any\n): Icon<G, FN> {\n  const font = { [fontName]: expoAssetId };\n  const RNVIconComponent = createIconSet(glyphMap, fontName, null, fontStyle);\n\n  return class Icon extends React.Component<IconProps<G>> {\n    static defaultProps = RNVIconComponent.defaultProps;\n    static Button = createIconButtonComponent(Icon);\n    static glyphMap = glyphMap;\n    static getRawGlyphMap = () => glyphMap;\n    static getFontFamily = () => fontName;\n    static loadFont = () => Font.loadAsync(font);\n    static font = font;\n\n    _mounted = false;\n    _icon?: any;\n\n    state = {\n      fontIsLoaded: Font.isLoaded(fontName),\n    };\n\n    async componentDidMount() {\n      this._mounted = true;\n      if (!this.state.fontIsLoaded) {\n        await Font.loadAsync(font);\n        /* eslint-disable react/no-did-mount-set-state */\n        this._mounted && this.setState({ fontIsLoaded: true });\n      }\n    }\n\n    componentWillUnmount() {\n      this._mounted = false;\n    }\n\n    setNativeProps(props) {\n      if (this._icon) {\n        this._icon.setNativeProps(props);\n      }\n    }\n\n    render() {\n      if (__DEV__ && this.props.name && !(this.props.name in glyphMap)) {\n        console.warn(`\"${this.props.name}\" is not a valid icon name for family \"${fontName}\"`);\n      }\n\n      if (!this.state.fontIsLoaded) {\n        return <Text />;\n      }\n\n      return (\n        <RNVIconComponent\n          ref={(view) => {\n            this._icon = view;\n          }}\n          {...this.props}\n        />\n      );\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}