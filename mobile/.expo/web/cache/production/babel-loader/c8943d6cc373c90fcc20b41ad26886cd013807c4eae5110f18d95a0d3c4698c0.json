{"ast":null,"code":"import Platform from\"react-native-web/dist/exports/Platform\";import createMultiStyleIconSet from'./createMultiStyleIconSet';export var FA5Style={regular:'regular',light:'light',solid:'solid',brand:'brand'};export function createFA5iconSet(glyphMap){var metadata=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var fonts=arguments.length>2?arguments[2]:undefined;var pro=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;var metadataKeys=Object.keys(metadata);var fontFamily=`FontAwesome5${pro?'Pro':'Free'}`;function fallbackFamily(glyph){for(var i=0;i<metadataKeys.length;i+=1){var family=metadataKeys[i];if(metadata[family].indexOf(glyph)!==-1){return family==='brands'?'brand':family;}}return'regular';}function glyphValidator(glyph,style){var family=style==='brand'?'brands':style;if(metadataKeys.indexOf(family)===-1)return false;return metadata[family].indexOf(glyph)!==-1;}function createFontAwesomeStyle(styleName,fontWeight){var family=arguments.length>2&&arguments[2]!==undefined?arguments[2]:fontFamily;var fontFile=fonts[styleName];return{fontFamily:`${family}-${styleName}`,fontFile:fontFile,fontStyle:{},glyphMap:glyphMap};}var brandIcons=createFontAwesomeStyle('Brand','400');var lightIcons=createFontAwesomeStyle('Light','100');var regularIcons=createFontAwesomeStyle('Regular','400');var solidIcons=createFontAwesomeStyle('Solid','700');var Icon=createMultiStyleIconSet({brand:brandIcons,light:lightIcons,regular:regularIcons,solid:solidIcons},{defaultStyle:'regular',fallbackFamily:fallbackFamily,glyphValidator:glyphValidator});return Icon;}","map":{"version":3,"names":["createMultiStyleIconSet","FA5Style","regular","light","solid","brand","createFA5iconSet","glyphMap","metadata","arguments","length","undefined","fonts","pro","metadataKeys","Object","keys","fontFamily","fallbackFamily","glyph","i","family","indexOf","glyphValidator","style","createFontAwesomeStyle","styleName","fontWeight","fontFile","fontStyle","brandIcons","lightIcons","regularIcons","solidIcons","Icon","defaultStyle"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\@expo\\vector-icons\\src\\createIconSetFromFontAwesome5.ts"],"sourcesContent":["import { Platform } from 'react-native';\n\nimport createMultiStyleIconSet from './createMultiStyleIconSet';\n\nexport const FA5Style = {\n  regular: 'regular',\n  light: 'light',\n  solid: 'solid',\n  brand: 'brand',\n};\n\nexport function createFA5iconSet(glyphMap, metadata = {}, fonts, pro = false) {\n  const metadataKeys = Object.keys(metadata);\n  const fontFamily = `FontAwesome5${pro ? 'Pro' : 'Free'}`;\n\n  function fallbackFamily(glyph) {\n    for (let i = 0; i < metadataKeys.length; i += 1) {\n      const family = metadataKeys[i];\n      if (metadata[family].indexOf(glyph) !== -1) {\n        return family === 'brands' ? 'brand' : family;\n      }\n    }\n\n    return 'regular';\n  }\n\n  function glyphValidator(glyph, style) {\n    const family = style === 'brand' ? 'brands' : style;\n    if (metadataKeys.indexOf(family) === -1) return false;\n    return metadata[family].indexOf(glyph) !== -1;\n  }\n\n  function createFontAwesomeStyle(styleName, fontWeight, family = fontFamily) {\n    const fontFile = fonts[styleName];\n\n    return {\n      fontFamily: `${family}-${styleName}`,\n      fontFile,\n      fontStyle: Platform.select({\n        ios: {\n          fontWeight,\n        },\n        default: {},\n      }),\n      glyphMap,\n    };\n  }\n\n  const brandIcons = createFontAwesomeStyle('Brand', '400');\n  const lightIcons = createFontAwesomeStyle('Light', '100');\n  const regularIcons = createFontAwesomeStyle('Regular', '400');\n  const solidIcons = createFontAwesomeStyle('Solid', '700');\n  const Icon = createMultiStyleIconSet(\n    {\n      brand: brandIcons,\n      light: lightIcons,\n      regular: regularIcons,\n      solid: solidIcons,\n    },\n    {\n      defaultStyle: 'regular',\n      fallbackFamily,\n      glyphValidator,\n    }\n  );\n\n  return Icon;\n}\n"],"mappings":"6DAEA,MAAO,CAAAA,uBAAuB,KAAM,2BAA2B,CAE/D,MAAO,IAAM,CAAAC,QAAQ,CAAG,CACtBC,OAAO,CAAE,SAAS,CAClBC,KAAK,CAAE,OAAO,CACdC,KAAK,CAAE,OAAO,CACdC,KAAK,CAAE,O,CACR,CAED,MAAM,SAAU,CAAAC,gBAAgBA,CAACC,QAAQ,CAAmC,IAAjC,CAAAC,QAAQ,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,IAAE,CAAAG,KAAK,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,IAAE,CAAAE,GAAG,CAAAJ,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,KAAK,CAC1E,GAAM,CAAAK,YAAY,CAAGC,MAAM,CAACC,IAAI,CAACR,QAAQ,CAAC,CAC1C,GAAM,CAAAS,UAAU,CAAG,eAAeJ,GAAG,CAAG,KAAK,CAAG,MAAM,EAAE,CAExD,QAAS,CAAAK,cAAcA,CAACC,KAAK,EAC3B,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGN,YAAY,CAACJ,MAAM,CAAEU,CAAC,EAAI,CAAC,CAAE,CAC/C,GAAM,CAAAC,MAAM,CAAGP,YAAY,CAACM,CAAC,CAAC,CAC9B,GAAIZ,QAAQ,CAACa,MAAM,CAAC,CAACC,OAAO,CAACH,KAAK,CAAC,GAAK,CAAC,CAAC,CAAE,CAC1C,MAAO,CAAAE,MAAM,GAAK,QAAQ,CAAG,OAAO,CAAGA,MAAM,CAC/C,CACF,CAEA,MAAO,SAAS,CAClB,CAEA,QAAS,CAAAE,cAAcA,CAACJ,KAAK,CAAEK,KAAK,EAClC,GAAM,CAAAH,MAAM,CAAGG,KAAK,GAAK,OAAO,CAAG,QAAQ,CAAGA,KAAK,CACnD,GAAIV,YAAY,CAACQ,OAAO,CAACD,MAAM,CAAC,GAAK,CAAC,CAAC,CAAE,MAAO,MAAK,CACrD,MAAO,CAAAb,QAAQ,CAACa,MAAM,CAAC,CAACC,OAAO,CAACH,KAAK,CAAC,GAAK,CAAC,CAAC,CAC/C,CAEA,QAAS,CAAAM,sBAAsBA,CAACC,SAAS,CAAEC,UAAU,CAAqB,IAAnB,CAAAN,MAAM,CAAAZ,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGQ,UAAU,CACxE,GAAM,CAAAW,QAAQ,CAAGhB,KAAK,CAACc,SAAS,CAAC,CAEjC,MAAO,CACLT,UAAU,CAAE,GAAGI,MAAM,IAAIK,SAAS,EAAE,CACpCE,QAAQ,CAARA,QAAQ,CACRC,SAAS,CAIE,EACT,CACFtB,QAAQ,CAARA,Q,CACD,CACH,CAEA,GAAM,CAAAuB,UAAU,CAAGL,sBAAsB,CAAC,OAAO,CAAE,KAAK,CAAC,CACzD,GAAM,CAAAM,UAAU,CAAGN,sBAAsB,CAAC,OAAO,CAAE,KAAK,CAAC,CACzD,GAAM,CAAAO,YAAY,CAAGP,sBAAsB,CAAC,SAAS,CAAE,KAAK,CAAC,CAC7D,GAAM,CAAAQ,UAAU,CAAGR,sBAAsB,CAAC,OAAO,CAAE,KAAK,CAAC,CACzD,GAAM,CAAAS,IAAI,CAAGlC,uBAAuB,CAClC,CACEK,KAAK,CAAEyB,UAAU,CACjB3B,KAAK,CAAE4B,UAAU,CACjB7B,OAAO,CAAE8B,YAAY,CACrB5B,KAAK,CAAE6B,U,CACR,CACD,CACEE,YAAY,CAAE,SAAS,CACvBjB,cAAc,CAAdA,cAAc,CACdK,cAAc,CAAdA,c,CACD,CACF,CAED,MAAO,CAAAW,IAAI,CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}