{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"id\",\"initialRouteName\",\"backBehavior\",\"children\",\"screenListeners\",\"screenOptions\",\"sceneContainerStyle\"],_excluded2=[\"lazy\",\"tabBarOptions\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{createNavigatorFactory,TabRouter,useNavigationBuilder}from'@react-navigation/native';import*as React from'react';import warnOnce from'warn-once';import BottomTabView from'../views/BottomTabView';function BottomTabNavigator(_ref){var id=_ref.id,initialRouteName=_ref.initialRouteName,backBehavior=_ref.backBehavior,children=_ref.children,screenListeners=_ref.screenListeners,screenOptions=_ref.screenOptions,sceneContainerStyle=_ref.sceneContainerStyle,restWithDeprecated=_objectWithoutProperties(_ref,_excluded);var lazy=restWithDeprecated.lazy,tabBarOptions=restWithDeprecated.tabBarOptions,rest=_objectWithoutProperties(restWithDeprecated,_excluded2);var defaultScreenOptions={};if(tabBarOptions){var _tabBarOptions$labelP;Object.assign(defaultScreenOptions,{tabBarHideOnKeyboard:tabBarOptions.keyboardHidesTabBar,tabBarActiveTintColor:tabBarOptions.activeTintColor,tabBarInactiveTintColor:tabBarOptions.inactiveTintColor,tabBarActiveBackgroundColor:tabBarOptions.activeBackgroundColor,tabBarInactiveBackgroundColor:tabBarOptions.inactiveBackgroundColor,tabBarAllowFontScaling:tabBarOptions.allowFontScaling,tabBarShowLabel:tabBarOptions.showLabel,tabBarLabelStyle:tabBarOptions.labelStyle,tabBarIconStyle:tabBarOptions.iconStyle,tabBarItemStyle:tabBarOptions.tabStyle,tabBarLabelPosition:(_tabBarOptions$labelP=tabBarOptions.labelPosition)!=null?_tabBarOptions$labelP:tabBarOptions.adaptive===false?'below-icon':undefined,tabBarStyle:[{display:tabBarOptions.tabBarVisible?'none':'flex'},defaultScreenOptions.tabBarStyle]});Object.keys(defaultScreenOptions).forEach(function(key){if(defaultScreenOptions[key]===undefined){delete defaultScreenOptions[key];}});warnOnce(tabBarOptions,`Bottom Tab Navigator: 'tabBarOptions' is deprecated. Migrate the options to 'screenOptions' instead.\\n\\nPlace the following in 'screenOptions' in your code to keep current behavior:\\n\\n${JSON.stringify(defaultScreenOptions,null,2)}\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator#options for more details.`);}if(typeof lazy==='boolean'){defaultScreenOptions.lazy=lazy;warnOnce(true,`Bottom Tab Navigator: 'lazy' in props is deprecated. Move it to 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator/#lazy for more details.`);}var _useNavigationBuilder=useNavigationBuilder(TabRouter,{id:id,initialRouteName:initialRouteName,backBehavior:backBehavior,children:children,screenListeners:screenListeners,screenOptions:screenOptions,defaultScreenOptions:defaultScreenOptions}),state=_useNavigationBuilder.state,descriptors=_useNavigationBuilder.descriptors,navigation=_useNavigationBuilder.navigation,NavigationContent=_useNavigationBuilder.NavigationContent;return React.createElement(NavigationContent,null,React.createElement(BottomTabView,_extends({},rest,{state:state,navigation:navigation,descriptors:descriptors,sceneContainerStyle:sceneContainerStyle})));}export default createNavigatorFactory(BottomTabNavigator);","map":{"version":3,"names":["createNavigatorFactory","TabRouter","useNavigationBuilder","React","warnOnce","BottomTabView","BottomTabNavigator","_ref","id","initialRouteName","backBehavior","children","screenListeners","screenOptions","sceneContainerStyle","restWithDeprecated","_objectWithoutProperties","_excluded","lazy","tabBarOptions","rest","_excluded2","defaultScreenOptions","_tabBarOptions$labelP","Object","assign","tabBarHideOnKeyboard","keyboardHidesTabBar","tabBarActiveTintColor","activeTintColor","tabBarInactiveTintColor","inactiveTintColor","tabBarActiveBackgroundColor","activeBackgroundColor","tabBarInactiveBackgroundColor","inactiveBackgroundColor","tabBarAllowFontScaling","allowFontScaling","tabBarShowLabel","showLabel","tabBarLabelStyle","labelStyle","tabBarIconStyle","iconStyle","tabBarItemStyle","tabStyle","tabBarLabelPosition","labelPosition","adaptive","undefined","tabBarStyle","display","tabBarVisible","keys","forEach","key","JSON","stringify","_useNavigationBuilder","state","descriptors","navigation","NavigationContent","createElement","_extends"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\@react-navigation\\bottom-tabs\\src\\navigators\\createBottomTabNavigator.tsx"],"sourcesContent":["import {\n  createNavigatorFactory,\n  DefaultNavigatorOptions,\n  ParamListBase,\n  TabActionHelpers,\n  TabNavigationState,\n  TabRouter,\n  TabRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport warnOnce from 'warn-once';\n\nimport type {\n  BottomTabNavigationConfig,\n  BottomTabNavigationEventMap,\n  BottomTabNavigationOptions,\n} from '../types';\nimport BottomTabView from '../views/BottomTabView';\n\ntype Props = DefaultNavigatorOptions<\n  ParamListBase,\n  TabNavigationState<ParamListBase>,\n  BottomTabNavigationOptions,\n  BottomTabNavigationEventMap\n> &\n  TabRouterOptions &\n  BottomTabNavigationConfig;\n\nfunction BottomTabNavigator({\n  id,\n  initialRouteName,\n  backBehavior,\n  children,\n  screenListeners,\n  screenOptions,\n  sceneContainerStyle,\n  ...restWithDeprecated\n}: Props) {\n  const {\n    // @ts-expect-error: lazy is deprecated\n    lazy,\n    // @ts-expect-error: tabBarOptions is deprecated\n    tabBarOptions,\n    ...rest\n  } = restWithDeprecated;\n\n  let defaultScreenOptions: BottomTabNavigationOptions = {};\n\n  if (tabBarOptions) {\n    Object.assign(defaultScreenOptions, {\n      tabBarHideOnKeyboard: tabBarOptions.keyboardHidesTabBar,\n      tabBarActiveTintColor: tabBarOptions.activeTintColor,\n      tabBarInactiveTintColor: tabBarOptions.inactiveTintColor,\n      tabBarActiveBackgroundColor: tabBarOptions.activeBackgroundColor,\n      tabBarInactiveBackgroundColor: tabBarOptions.inactiveBackgroundColor,\n      tabBarAllowFontScaling: tabBarOptions.allowFontScaling,\n      tabBarShowLabel: tabBarOptions.showLabel,\n      tabBarLabelStyle: tabBarOptions.labelStyle,\n      tabBarIconStyle: tabBarOptions.iconStyle,\n      tabBarItemStyle: tabBarOptions.tabStyle,\n      tabBarLabelPosition:\n        tabBarOptions.labelPosition ??\n        (tabBarOptions.adaptive === false ? 'below-icon' : undefined),\n      tabBarStyle: [\n        { display: tabBarOptions.tabBarVisible ? 'none' : 'flex' },\n        defaultScreenOptions.tabBarStyle,\n      ],\n    });\n\n    (\n      Object.keys(defaultScreenOptions) as (keyof BottomTabNavigationOptions)[]\n    ).forEach((key) => {\n      if (defaultScreenOptions[key] === undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete defaultScreenOptions[key];\n      }\n    });\n\n    warnOnce(\n      tabBarOptions,\n      `Bottom Tab Navigator: 'tabBarOptions' is deprecated. Migrate the options to 'screenOptions' instead.\\n\\nPlace the following in 'screenOptions' in your code to keep current behavior:\\n\\n${JSON.stringify(\n        defaultScreenOptions,\n        null,\n        2\n      )}\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator#options for more details.`\n    );\n  }\n\n  if (typeof lazy === 'boolean') {\n    defaultScreenOptions.lazy = lazy;\n\n    warnOnce(\n      true,\n      `Bottom Tab Navigator: 'lazy' in props is deprecated. Move it to 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator/#lazy for more details.`\n    );\n  }\n\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      TabNavigationState<ParamListBase>,\n      TabRouterOptions,\n      TabActionHelpers<ParamListBase>,\n      BottomTabNavigationOptions,\n      BottomTabNavigationEventMap\n    >(TabRouter, {\n      id,\n      initialRouteName,\n      backBehavior,\n      children,\n      screenListeners,\n      screenOptions,\n      defaultScreenOptions,\n    });\n\n  return (\n    <NavigationContent>\n      <BottomTabView\n        {...rest}\n        state={state}\n        navigation={navigation}\n        descriptors={descriptors}\n        sceneContainerStyle={sceneContainerStyle}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  TabNavigationState<ParamListBase>,\n  BottomTabNavigationOptions,\n  BottomTabNavigationEventMap,\n  typeof BottomTabNavigator\n>(BottomTabNavigator);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}