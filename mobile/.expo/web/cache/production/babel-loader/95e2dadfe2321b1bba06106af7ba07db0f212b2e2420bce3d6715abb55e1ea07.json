{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import React,{useRef,useMemo,useCallback}from'react';import Text from\"react-native-web/dist/exports/Text\";import{toMarkingFormat}from'../interface';import{extractCalendarProps}from'../componentUpdater';import styleConstructor from'./style';import Calendar from'../calendar';import{jsx as _jsx}from\"react/jsx-runtime\";var CalendarListItem=React.memo(function(props){var item=props.item,theme=props.theme,scrollToMonth=props.scrollToMonth,horizontal=props.horizontal,calendarHeight=props.calendarHeight,calendarWidth=props.calendarWidth,propsStyle=props.style,headerStyle=props.headerStyle,onPressArrowLeft=props.onPressArrowLeft,onPressArrowRight=props.onPressArrowRight,visible=props.visible;var style=useRef(styleConstructor(theme));var calendarProps=extractCalendarProps(props);var dateString=toMarkingFormat(item);var calendarStyle=useMemo(function(){return[{width:calendarWidth,minHeight:calendarHeight},style.current.calendar,propsStyle];},[calendarWidth,calendarHeight,propsStyle]);var textStyle=useMemo(function(){return[calendarStyle,style.current.placeholderText];},[calendarStyle]);var _onPressArrowLeft=useCallback(function(method,month){var monthClone=month==null?void 0:month.clone();if(monthClone){if(onPressArrowLeft){onPressArrowLeft(method,monthClone);}else if(scrollToMonth){var currentMonth=monthClone.getMonth();monthClone.addMonths(-1);while(monthClone.getMonth()===currentMonth){monthClone.setDate(monthClone.getDate()-1);}scrollToMonth(monthClone);}}},[onPressArrowLeft,scrollToMonth]);var _onPressArrowRight=useCallback(function(method,month){var monthClone=month==null?void 0:month.clone();if(monthClone){if(onPressArrowRight){onPressArrowRight(method,monthClone);}else if(scrollToMonth){monthClone.addMonths(1);scrollToMonth(monthClone);}}},[onPressArrowRight,scrollToMonth]);if(!visible){return _jsx(Text,{style:textStyle,children:dateString});}return _jsx(Calendar,_objectSpread(_objectSpread({hideArrows:true,hideExtraDays:true},calendarProps),{},{current:dateString,style:calendarStyle,headerStyle:horizontal?headerStyle:undefined,disableMonthChange:true,onPressArrowLeft:horizontal?_onPressArrowLeft:onPressArrowLeft,onPressArrowRight:horizontal?_onPressArrowRight:onPressArrowRight}));});export default CalendarListItem;CalendarListItem.displayName='CalendarListItem';","map":{"version":3,"names":["React","useRef","useMemo","useCallback","Text","toMarkingFormat","extractCalendarProps","styleConstructor","Calendar","jsx","_jsx","CalendarListItem","memo","props","item","theme","scrollToMonth","horizontal","calendarHeight","calendarWidth","propsStyle","style","headerStyle","onPressArrowLeft","onPressArrowRight","visible","calendarProps","dateString","calendarStyle","width","minHeight","current","calendar","textStyle","placeholderText","_onPressArrowLeft","method","month","monthClone","clone","currentMonth","getMonth","addMonths","setDate","getDate","_onPressArrowRight","children","_objectSpread","hideArrows","hideExtraDays","undefined","disableMonthChange","displayName"],"sources":["C:/Users/User/Downloads/git_frontend/mobile/node_modules/react-native-calendars/src/calendar-list/item.js"],"sourcesContent":["import React, { useRef, useMemo, useCallback } from 'react';\nimport { Text } from 'react-native';\nimport { toMarkingFormat } from '../interface';\nimport { extractCalendarProps } from '../componentUpdater';\nimport styleConstructor from './style';\nimport Calendar from '../calendar';\nconst CalendarListItem = React.memo((props) => {\n    const { item, theme, scrollToMonth, horizontal, calendarHeight, calendarWidth, style: propsStyle, headerStyle, onPressArrowLeft, onPressArrowRight, visible } = props;\n    const style = useRef(styleConstructor(theme));\n    const calendarProps = extractCalendarProps(props);\n    const dateString = toMarkingFormat(item);\n    const calendarStyle = useMemo(() => {\n        return [\n            {\n                width: calendarWidth,\n                minHeight: calendarHeight\n            },\n            style.current.calendar,\n            propsStyle\n        ];\n    }, [calendarWidth, calendarHeight, propsStyle]);\n    const textStyle = useMemo(() => {\n        return [calendarStyle, style.current.placeholderText];\n    }, [calendarStyle]);\n    const _onPressArrowLeft = useCallback((method, month) => {\n        const monthClone = month?.clone();\n        if (monthClone) {\n            if (onPressArrowLeft) {\n                onPressArrowLeft(method, monthClone);\n            }\n            else if (scrollToMonth) {\n                const currentMonth = monthClone.getMonth();\n                monthClone.addMonths(-1);\n                // Make sure we actually get the previous month, not just 30 days before currentMonth.\n                while (monthClone.getMonth() === currentMonth) {\n                    monthClone.setDate(monthClone.getDate() - 1);\n                }\n                scrollToMonth(monthClone);\n            }\n        }\n    }, [onPressArrowLeft, scrollToMonth]);\n    const _onPressArrowRight = useCallback((method, month) => {\n        const monthClone = month?.clone();\n        if (monthClone) {\n            if (onPressArrowRight) {\n                onPressArrowRight(method, monthClone);\n            }\n            else if (scrollToMonth) {\n                monthClone.addMonths(1);\n                scrollToMonth(monthClone);\n            }\n        }\n    }, [onPressArrowRight, scrollToMonth]);\n    if (!visible) {\n        return (<Text style={textStyle}>{dateString}</Text>);\n    }\n    return (<Calendar hideArrows={true} hideExtraDays={true} {...calendarProps} current={dateString} style={calendarStyle} headerStyle={horizontal ? headerStyle : undefined} disableMonthChange onPressArrowLeft={horizontal ? _onPressArrowLeft : onPressArrowLeft} onPressArrowRight={horizontal ? _onPressArrowRight : onPressArrowRight}/>);\n});\nexport default CalendarListItem;\nCalendarListItem.displayName = 'CalendarListItem';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}