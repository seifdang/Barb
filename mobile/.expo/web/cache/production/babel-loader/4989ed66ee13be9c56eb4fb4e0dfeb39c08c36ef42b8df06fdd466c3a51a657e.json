{"ast":null,"code":"import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import RadioButton from'./RadioButton';import RadioButtonAndroid from'./RadioButtonAndroid';import{RadioButtonContext}from'./RadioButtonGroup';import RadioButtonIOS from'./RadioButtonIOS';import{handlePress,isChecked}from'./utils';import{useInternalTheme}from'../../core/theming';import TouchableRipple from'../TouchableRipple/TouchableRipple';import Text from'../Typography/Text';var RadioButtonItem=function RadioButtonItem(_ref){var value=_ref.value,label=_ref.label,style=_ref.style,labelStyle=_ref.labelStyle,_onPress=_ref.onPress,onLongPress=_ref.onLongPress,disabled=_ref.disabled,color=_ref.color,uncheckedColor=_ref.uncheckedColor,rippleColor=_ref.rippleColor,status=_ref.status,themeOverrides=_ref.theme,background=_ref.background,_ref$accessibilityLab=_ref.accessibilityLabel,accessibilityLabel=_ref$accessibilityLab===void 0?label:_ref$accessibilityLab,testID=_ref.testID,mode=_ref.mode,_ref$position=_ref.position,position=_ref$position===void 0?'trailing':_ref$position,_ref$labelVariant=_ref.labelVariant,labelVariant=_ref$labelVariant===void 0?'bodyLarge':_ref$labelVariant,labelMaxFontSizeMultiplier=_ref.labelMaxFontSizeMultiplier;var theme=useInternalTheme(themeOverrides);var radioButtonProps={value:value,disabled:disabled,status:status,color:color,theme:theme,uncheckedColor:uncheckedColor};var isLeading=position==='leading';var radioButton;if(mode==='android'){radioButton=React.createElement(RadioButtonAndroid,radioButtonProps);}else if(mode==='ios'){radioButton=React.createElement(RadioButtonIOS,radioButtonProps);}else{radioButton=React.createElement(RadioButton,radioButtonProps);}var textColor=theme.isV3?theme.colors.onSurface:theme.colors.text;var disabledTextColor=theme.isV3?theme.colors.onSurfaceDisabled:theme.colors.disabled;var textAlign=isLeading?'right':'left';var computedStyle={color:disabled?disabledTextColor:textColor,textAlign:textAlign};return React.createElement(RadioButtonContext.Consumer,null,function(context){var checked=isChecked({contextValue:context===null||context===void 0?void 0:context.value,status:status,value:value})==='checked';return React.createElement(TouchableRipple,{onPress:function onPress(event){return handlePress({onPress:_onPress,onValueChange:context===null||context===void 0?void 0:context.onValueChange,value:value,event:event});},onLongPress:onLongPress,accessibilityLabel:accessibilityLabel,accessibilityRole:\"radio\",accessibilityState:{checked:checked,disabled:disabled},testID:testID,disabled:disabled,background:background,theme:theme,rippleColor:rippleColor},React.createElement(View,{style:[styles.container,style],pointerEvents:\"none\"},isLeading&&radioButton,React.createElement(Text,{variant:labelVariant,style:[styles.label,!theme.isV3&&styles.font,computedStyle,labelStyle],maxFontSizeMultiplier:labelMaxFontSizeMultiplier},label),!isLeading&&radioButton));});};RadioButtonItem.displayName='RadioButton.Item';export default RadioButtonItem;export{RadioButtonItem};var styles=StyleSheet.create({container:{flexDirection:'row',alignItems:'center',justifyContent:'space-between',paddingVertical:8,paddingHorizontal:16},label:{flexShrink:1,flexGrow:1},font:{fontSize:16}});","map":{"version":3,"names":["React","StyleSheet","View","RadioButton","RadioButtonAndroid","RadioButtonContext","RadioButtonIOS","handlePress","isChecked","useInternalTheme","TouchableRipple","Text","RadioButtonItem","_ref","value","label","style","labelStyle","onPress","onLongPress","disabled","color","uncheckedColor","rippleColor","status","themeOverrides","theme","background","_ref$accessibilityLab","accessibilityLabel","testID","mode","_ref$position","position","_ref$labelVariant","labelVariant","labelMaxFontSizeMultiplier","radioButtonProps","isLeading","radioButton","createElement","textColor","isV3","colors","onSurface","text","disabledTextColor","onSurfaceDisabled","textAlign","computedStyle","Consumer","context","checked","contextValue","event","onValueChange","accessibilityRole","accessibilityState","styles","container","pointerEvents","variant","font","maxFontSizeMultiplier","displayName","create","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal","flexShrink","flexGrow","fontSize"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\react-native-paper\\src\\components\\RadioButton\\RadioButtonItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  ColorValue,\n  GestureResponderEvent,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport RadioButton from './RadioButton';\nimport RadioButtonAndroid from './RadioButtonAndroid';\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport RadioButtonIOS from './RadioButtonIOS';\nimport { handlePress, isChecked } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp, MD3TypescaleKey } from '../../types';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = {\n  /**\n   * Value of the radio button.\n   */\n  value: string;\n  /**\n   * Label to be displayed on the item.\n   */\n  label: string;\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Accessibility label for the touchable. This is read by the screen reader when the user taps the touchable.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Additional styles for container View.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Label text variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  labelVariant?: keyof typeof MD3TypescaleKey;\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n  /**\n   * Whether `<RadioButton.Android />` or `<RadioButton.IOS />` should be used.\n   * Left undefined `<RadioButton />` will be used.\n   */\n  mode?: 'android' | 'ios';\n  /**\n   * Radio button control position.\n   */\n  position?: 'leading' | 'trailing';\n};\n\n/**\n * RadioButton.Item allows you to press the whole row (item) instead of only the RadioButton.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { RadioButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('first');\n *\n *   return (\n *     <RadioButton.Group onValueChange={value => setValue(value)} value={value}>\n *       <RadioButton.Item label=\"First item\" value=\"first\" />\n *       <RadioButton.Item label=\"Second item\" value=\"second\" />\n *     </RadioButton.Group>\n *   );\n * };\n *\n * export default MyComponent;\n *```\n */\nconst RadioButtonItem = ({\n  value,\n  label,\n  style,\n  labelStyle,\n  onPress,\n  onLongPress,\n  disabled,\n  color,\n  uncheckedColor,\n  rippleColor,\n  status,\n  theme: themeOverrides,\n  background,\n  accessibilityLabel = label,\n  testID,\n  mode,\n  position = 'trailing',\n  labelVariant = 'bodyLarge',\n  labelMaxFontSizeMultiplier,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const radioButtonProps = {\n    value,\n    disabled,\n    status,\n    color,\n    theme,\n    uncheckedColor,\n  };\n  const isLeading = position === 'leading';\n  let radioButton: any;\n\n  if (mode === 'android') {\n    radioButton = <RadioButtonAndroid {...radioButtonProps} />;\n  } else if (mode === 'ios') {\n    radioButton = <RadioButtonIOS {...radioButtonProps} />;\n  } else {\n    radioButton = <RadioButton {...radioButtonProps} />;\n  }\n\n  const textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n  const disabledTextColor = theme.isV3\n    ? theme.colors.onSurfaceDisabled\n    : theme.colors.disabled;\n  const textAlign = isLeading ? 'right' : 'left';\n\n  const computedStyle = {\n    color: disabled ? disabledTextColor : textColor,\n    textAlign,\n  } as TextStyle;\n\n  return (\n    <RadioButtonContext.Consumer>\n      {(context?: RadioButtonContextType) => {\n        const checked =\n          isChecked({\n            contextValue: context?.value,\n            status,\n            value,\n          }) === 'checked';\n        return (\n          <TouchableRipple\n            onPress={(event) =>\n              handlePress({\n                onPress: onPress,\n                onValueChange: context?.onValueChange,\n                value,\n                event,\n              })\n            }\n            onLongPress={onLongPress}\n            accessibilityLabel={accessibilityLabel}\n            accessibilityRole=\"radio\"\n            accessibilityState={{\n              checked,\n              disabled,\n            }}\n            testID={testID}\n            disabled={disabled}\n            background={background}\n            theme={theme}\n            rippleColor={rippleColor}\n          >\n            <View style={[styles.container, style]} pointerEvents=\"none\">\n              {isLeading && radioButton}\n              <Text\n                variant={labelVariant}\n                style={[\n                  styles.label,\n                  !theme.isV3 && styles.font,\n                  computedStyle,\n                  labelStyle,\n                ]}\n                maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n              >\n                {label}\n              </Text>\n              {!isLeading && radioButton}\n            </View>\n          </TouchableRipple>\n        );\n      }}\n    </RadioButtonContext.Consumer>\n  );\n};\n\nRadioButtonItem.displayName = 'RadioButton.Item';\n\nexport default RadioButtonItem;\n\n// @component-docs ignore-next-line\nexport { RadioButtonItem };\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  label: {\n    flexShrink: 1,\n    flexGrow: 1,\n  },\n  font: {\n    fontSize: 16,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}