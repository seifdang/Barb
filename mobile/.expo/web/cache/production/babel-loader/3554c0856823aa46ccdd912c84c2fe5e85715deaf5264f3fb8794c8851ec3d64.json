{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"style\",\"theme\",\"variant\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{useInternalTheme}from'../../core/theming';import{forwardRef}from'../../utils/forwardRef';var AnimatedText=forwardRef(function AnimatedText(_ref,ref){var style=_ref.style,themeOverrides=_ref.theme,variant=_ref.variant,rest=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);var writingDirection=I18nManager.getConstants().isRTL?'rtl':'ltr';if(theme.isV3&&variant){var font=theme.fonts[variant];if(typeof font!=='object'){throw new Error(`Variant ${variant} was not provided properly. Valid variants are ${Object.keys(theme.fonts).join(', ')}.`);}return React.createElement(Animated.Text,_extends({ref:ref},rest,{style:[font,styles.text,{writingDirection:writingDirection,color:theme.colors.onSurface},style]}));}else{var _font=!theme.isV3?theme.fonts.regular:theme.fonts.bodyMedium;var textStyle=_objectSpread(_objectSpread({},_font),{},{color:theme.isV3?theme.colors.onSurface:theme.colors.text});return React.createElement(Animated.Text,_extends({ref:ref},rest,{style:[styles.text,textStyle,{writingDirection:writingDirection},style]}));}});var styles=StyleSheet.create({text:{textAlign:'left'}});export var customAnimatedText=function customAnimatedText(){return AnimatedText;};export default AnimatedText;","map":{"version":3,"names":["React","Animated","I18nManager","StyleSheet","useInternalTheme","forwardRef","AnimatedText","_ref","ref","style","themeOverrides","theme","variant","rest","_objectWithoutProperties","_excluded","writingDirection","getConstants","isRTL","isV3","font","fonts","Error","Object","keys","join","createElement","Text","_extends","styles","text","color","colors","onSurface","regular","bodyMedium","textStyle","_objectSpread","create","textAlign","customAnimatedText"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\react-native-paper\\src\\components\\Typography\\AnimatedText.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  Text,\n} from 'react-native';\n\nimport type { VariantProp } from './types';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport { forwardRef } from '../../utils/forwardRef';\n\ntype Props<T> = React.ComponentPropsWithRef<typeof Animated.Text> & {\n  /**\n   * Variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  variant?: VariantProp<T>;\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * Animated text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nconst AnimatedText = forwardRef<Text & HTMLElement, Props<never>>(\n  function AnimatedText(\n    { style, theme: themeOverrides, variant, ...rest },\n    ref\n  ) {\n    const theme = useInternalTheme(themeOverrides);\n    const writingDirection = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr';\n\n    if (theme.isV3 && variant) {\n      const font = theme.fonts[variant];\n      if (typeof font !== 'object') {\n        throw new Error(\n          `Variant ${variant} was not provided properly. Valid variants are ${Object.keys(\n            theme.fonts\n          ).join(', ')}.`\n        );\n      }\n\n      return (\n        <Animated.Text\n          ref={ref}\n          {...rest}\n          style={[\n            font,\n            styles.text,\n            { writingDirection, color: theme.colors.onSurface },\n            style,\n          ]}\n        />\n      );\n    } else {\n      const font = !theme.isV3 ? theme.fonts.regular : theme.fonts.bodyMedium;\n      const textStyle = {\n        ...font,\n        color: theme.isV3 ? theme.colors.onSurface : theme.colors.text,\n      };\n      return (\n        <Animated.Text\n          ref={ref}\n          {...rest}\n          style={[\n            styles.text,\n            textStyle,\n            {\n              writingDirection,\n            },\n            style,\n          ]}\n        />\n      );\n    }\n  }\n);\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport const customAnimatedText = <T,>() =>\n  AnimatedText as (props: Props<T>) => JSX.Element;\n\nexport default AnimatedText;\n"],"mappings":"ylCAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,QAAA,qDAAAC,WAAA,wDAAAC,UAAA,gDAW9B,OAASC,gBAAgB,KAAQ,oBAAoB,CAErD,OAASC,UAAU,KAAQ,wBAAwB,CA8BnD,GAAM,CAAAC,YAAY,CAAGD,UAAU,CAC7B,QAAS,CAAAC,YAAYA,CAAAC,IAAA,CAEnBC,GAAG,CACH,IAFE,CAAAC,KAAK,CAA2CF,IAAA,CAAhDE,KAAK,CAASC,cAAc,CAAoBH,IAAA,CAAzCI,KAAK,CAAkBC,OAAO,CAAWL,IAAA,CAAlBK,OAAO,CAAKC,IAAA,CAAAC,wBAAA,CAAMP,IAAA,CAAAQ,SAAA,EAGlD,GAAM,CAAAJ,KAAK,CAAGP,gBAAgB,CAACM,cAAc,CAAC,CAC9C,GAAM,CAAAM,gBAAgB,CAAGd,WAAW,CAACe,YAAY,CAAC,CAAC,CAACC,KAAK,CAAG,KAAK,CAAG,KAAK,CAEzE,GAAIP,KAAK,CAACQ,IAAI,EAAIP,OAAO,CAAE,CACzB,GAAM,CAAAQ,IAAI,CAAGT,KAAK,CAACU,KAAK,CAACT,OAAO,CAAC,CACjC,GAAI,MAAO,CAAAQ,IAAI,GAAK,QAAQ,CAAE,CAC5B,KAAM,IAAI,CAAAE,KAAK,CACZ,WAAUV,OAAQ,kDAAiDW,MAAM,CAACC,IAAI,CAC7Eb,KAAK,CAACU,KACR,CAAC,CAACI,IAAI,CAAC,IAAI,CAAE,GACf,CAAC,CACH,CAEA,MACE,CAAAzB,KAAA,CAAA0B,aAAA,CAACzB,QAAQ,CAAC0B,IAAI,CAAAC,QAAA,EACZpB,GAAG,CAAEA,GAAI,EACLK,IAAI,EACRJ,KAAK,CAAE,CACLW,IAAI,CACJS,MAAM,CAACC,IAAI,CACX,CAAEd,gBAAgB,CAAhBA,gBAAgB,CAAEe,KAAK,CAAEpB,KAAK,CAACqB,MAAM,CAACC,SAAU,CAAC,CACnDxB,KAAK,CACL,EACH,CAAC,CAEN,CAAC,IAAM,CACL,GAAM,CAAAW,KAAI,CAAG,CAACT,KAAK,CAACQ,IAAI,CAAGR,KAAK,CAACU,KAAK,CAACa,OAAO,CAAGvB,KAAK,CAACU,KAAK,CAACc,UAAU,CACvE,GAAM,CAAAC,SAAS,CAAAC,aAAA,CAAAA,aAAA,IACVjB,KAAI,MACPW,KAAK,CAAEpB,KAAK,CAACQ,IAAI,CAAGR,KAAK,CAACqB,MAAM,CAACC,SAAS,CAAGtB,KAAK,CAACqB,MAAM,CAACF,IAAA,EAC3D,CACD,MACE,CAAA9B,KAAA,CAAA0B,aAAA,CAACzB,QAAQ,CAAC0B,IAAI,CAAAC,QAAA,EACZpB,GAAG,CAAEA,GAAI,EACLK,IAAI,EACRJ,KAAK,CAAE,CACLoB,MAAM,CAACC,IAAI,CACXM,SAAS,CACT,CACEpB,gBAAA,CAAAA,gBACF,CAAC,CACDP,KAAK,CACL,EACH,CAAC,CAEN,CACF,CACF,CAAC,CAED,GAAM,CAAAoB,MAAM,CAAG1B,UAAU,CAACmC,MAAM,CAAC,CAC/BR,IAAI,CAAE,CACJS,SAAS,CAAE,MACb,CACF,CAAC,CAAC,CAEF,MAAO,IAAM,CAAAC,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAA,QAC7B,CAAAlC,YAAgD,GAElD,cAAe,CAAAA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}