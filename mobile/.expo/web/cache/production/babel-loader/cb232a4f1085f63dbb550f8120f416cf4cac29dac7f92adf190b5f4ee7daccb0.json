{"ast":null,"code":"export function splitStyles(styles){for(var _len=arguments.length,filters=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){filters[_key-1]=arguments[_key];}if(\"production\"!=='production'&&filters.length===0){console.error('No filters were passed when calling splitStyles');}var newStyles=filters.map(function(){return[];});var rest=[];outer:for(var item of Object.entries(styles)){for(var i=0;i<filters.length;i++){if(filters[i](item[0])){newStyles[i].push(item);continue outer;}}rest.push(item);}newStyles.unshift(rest);return newStyles.map(function(styles){return Object.fromEntries(styles);});}","map":{"version":3,"names":["splitStyles","styles","_len","arguments","length","filters","Array","_key","console","error","newStyles","map","rest","outer","item","Object","entries","i","push","unshift","fromEntries"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\react-native-paper\\src\\utils\\splitStyles.ts"],"sourcesContent":["import type { ViewStyle } from 'react-native';\n\ntype FiltersArray = readonly ((style: keyof ViewStyle) => boolean)[];\n\ntype MappedTuple<Tuple extends FiltersArray> = {\n  [Index in keyof Tuple]: ViewStyle;\n} & { length: Tuple['length'] };\n\ntype Style = ViewStyle[keyof ViewStyle];\ntype Entry = [keyof ViewStyle, Style];\n\n/**\n * Utility function to extract styles in separate objects\n *\n * @param styles The style object you want to filter\n * @param filters The filters by which you want to split the styles\n * @returns An array of filtered style objects:\n * - The first style object contains the properties that didn't match any filter\n * - After that there will be a style object for each filter you passed in the same order as the matching filters\n * - A style property will exist in a single style object, the first filter it matched\n */\nexport function splitStyles<Tuple extends FiltersArray>(\n  styles: ViewStyle,\n  ...filters: Tuple\n) {\n  if (process.env.NODE_ENV !== 'production' && filters.length === 0) {\n    console.error('No filters were passed when calling splitStyles');\n  }\n\n  // `Object.entries` will be used to iterate over the styles and `Object.fromEntries` will be called before returning\n  // Entries which match the given filters will be temporarily stored in `newStyles`\n  const newStyles = filters.map(() => [] as Entry[]);\n\n  // Entries which match no filter\n  const rest: Entry[] = [];\n\n  // Iterate every style property\n  outer: for (const item of Object.entries(styles) as Entry[]) {\n    // Check each filter\n    for (let i = 0; i < filters.length; i++) {\n      // Check if filter matches\n      if (filters[i](item[0])) {\n        newStyles[i].push(item); // Push to temporary filtered entries array\n        continue outer; // Skip to checking next style property\n      }\n    }\n\n    // Adds to rest styles if not filtered\n    rest.push(item);\n  }\n\n  // Put unmatched styles in the beginning\n  newStyles.unshift(rest);\n\n  // Convert arrays of entries into objects\n  return newStyles.map((styles) => Object.fromEntries(styles)) as unknown as [\n    ViewStyle,\n    ...MappedTuple<Tuple>\n  ];\n}\n"],"mappings":"AAqBA,MAAO,SAAS,CAAAA,WAAWA,CACzBC,MAAiB,CAEjB,SAAAC,IAAA,CAAAC,SAAA,CAAAC,MAAA,CADGC,OAAO,KAAAC,KAAA,CAAAJ,IAAA,GAAAA,IAAA,MAAAK,IAAA,GAAAA,IAAA,CAAAL,IAAA,CAAAK,IAAA,IAAPF,OAAO,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA,GAEV,GAAI,eAAyB,YAAY,EAAIF,OAAO,CAACD,MAAM,GAAK,CAAC,CAAE,CACjEI,OAAO,CAACC,KAAK,CAAC,iDAAiD,CAAC,CAClE,CAIA,GAAM,CAAAC,SAAS,CAAGL,OAAO,CAACM,GAAG,CAAC,iBAAM,EAAa,GAAC,CAGlD,GAAM,CAAAC,IAAa,CAAG,EAAE,CAGxBC,KAAK,CAAE,IAAK,GAAM,CAAAC,IAAI,GAAI,CAAAC,MAAM,CAACC,OAAO,CAACf,MAAM,CAAC,CAAa,CAE3D,IAAK,GAAI,CAAAgB,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGZ,OAAO,CAACD,MAAM,CAAEa,CAAC,EAAE,CAAE,CAEvC,GAAIZ,OAAO,CAACY,CAAC,CAAC,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE,CACvBJ,SAAS,CAACO,CAAC,CAAC,CAACC,IAAI,CAACJ,IAAI,CAAC,CACvB,QAAS,CAAAD,KAAK,CAChB,CACF,CAGAD,IAAI,CAACM,IAAI,CAACJ,IAAI,CAAC,CACjB,CAGAJ,SAAS,CAACS,OAAO,CAACP,IAAI,CAAC,CAGvB,MAAO,CAAAF,SAAS,CAACC,GAAG,CAAE,SAAAV,MAAM,QAAK,CAAAc,MAAM,CAACK,WAAW,CAACnB,MAAM,CAAC,GAAC,CAI9D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}