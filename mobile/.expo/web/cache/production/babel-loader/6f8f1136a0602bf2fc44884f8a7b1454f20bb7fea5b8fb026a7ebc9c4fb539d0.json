{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";var _excluded=[\"icon\",\"onPress\",\"forceTextInputFocus\",\"color\",\"theme\",\"rippleColor\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{getIconColor}from'./utils';import{useInternalTheme}from'../../../core/theming';import IconButton from'../../IconButton/IconButton';import{ICON_SIZE}from'../constants';import{getConstants}from'../helpers';var StyleContext=React.createContext({style:{},isTextInputFocused:false,forceFocus:function forceFocus(){},testID:''});var IconAdornment=function IconAdornment(_ref){var icon=_ref.icon,topPosition=_ref.topPosition,side=_ref.side,isTextInputFocused=_ref.isTextInputFocused,forceFocus=_ref.forceFocus,testID=_ref.testID,themeOverrides=_ref.theme,disabled=_ref.disabled;var _useInternalTheme=useInternalTheme(themeOverrides),isV3=_useInternalTheme.isV3;var _getConstants=getConstants(isV3),ICON_OFFSET=_getConstants.ICON_OFFSET;var style=_defineProperty({top:topPosition},side,ICON_OFFSET);var contextState={style:style,isTextInputFocused:isTextInputFocused,forceFocus:forceFocus,testID:testID,disabled:disabled};return React.createElement(StyleContext.Provider,{value:contextState},icon);};var TextInputIcon=function TextInputIcon(_ref2){var icon=_ref2.icon,onPress=_ref2.onPress,_ref2$forceTextInputF=_ref2.forceTextInputFocus,forceTextInputFocus=_ref2$forceTextInputF===void 0?true:_ref2$forceTextInputF,customColor=_ref2.color,themeOverrides=_ref2.theme,rippleColor=_ref2.rippleColor,rest=_objectWithoutProperties(_ref2,_excluded);var _React$useContext=React.useContext(StyleContext),style=_React$useContext.style,isTextInputFocused=_React$useContext.isTextInputFocused,forceFocus=_React$useContext.forceFocus,testID=_React$useContext.testID,disabled=_React$useContext.disabled;var onPressWithFocusControl=React.useCallback(function(e){if(forceTextInputFocus&&!isTextInputFocused){forceFocus();}onPress===null||onPress===void 0?void 0:onPress(e);},[forceTextInputFocus,forceFocus,isTextInputFocused,onPress]);var theme=useInternalTheme(themeOverrides);var iconColor=getIconColor({theme:theme,disabled:disabled,isTextInputFocused:isTextInputFocused,customColor:customColor});return React.createElement(View,{style:[styles.container,style]},React.createElement(IconButton,_extends({icon:icon,style:styles.iconButton,size:ICON_SIZE,onPress:onPressWithFocusControl,iconColor:iconColor,testID:testID,theme:themeOverrides,rippleColor:rippleColor},rest)));};TextInputIcon.displayName='TextInput.Icon';var styles=StyleSheet.create({container:{position:'absolute',width:ICON_SIZE,height:ICON_SIZE,justifyContent:'center',alignItems:'center'},iconButton:{margin:0}});export default TextInputIcon;export{IconAdornment};","map":{"version":3,"names":["React","StyleSheet","View","getIconColor","useInternalTheme","IconButton","ICON_SIZE","getConstants","StyleContext","createContext","style","isTextInputFocused","forceFocus","testID","IconAdornment","_ref","icon","topPosition","side","themeOverrides","theme","disabled","_useInternalTheme","isV3","_getConstants","ICON_OFFSET","_defineProperty","top","contextState","createElement","Provider","value","TextInputIcon","_ref2","onPress","_ref2$forceTextInputF","forceTextInputFocus","customColor","color","rippleColor","rest","_objectWithoutProperties","_excluded","_React$useContext","useContext","onPressWithFocusControl","useCallback","e","iconColor","styles","container","_extends","iconButton","size","displayName","create","position","width","height","justifyContent","alignItems","margin"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\react-native-paper\\src\\components\\TextInput\\Adornment\\TextInputIcon.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  ColorValue,\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { getIconColor } from './utils';\nimport { useInternalTheme } from '../../../core/theming';\nimport type { $Omit, ThemeProp } from '../../../types';\nimport type { IconSource } from '../../Icon';\nimport IconButton from '../../IconButton/IconButton';\nimport { ICON_SIZE } from '../constants';\nimport { getConstants } from '../helpers';\n\nexport type Props = $Omit<\n  React.ComponentProps<typeof IconButton>,\n  'icon' | 'theme' | 'color' | 'iconColor'\n> & {\n  /**\n   * @renamed Renamed from 'name' to 'icon` in v5.x\n   * Icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Whether the TextInput will focus after onPress.\n   */\n  forceTextInputFocus?: boolean;\n  /**\n   * Color of the icon or a function receiving a boolean indicating whether the TextInput is focused and returning the color.\n   */\n  color?: ((isTextInputFocused: boolean) => string | undefined) | string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\ntype StyleContextType = {\n  style: StyleProp<ViewStyle>;\n  isTextInputFocused: boolean;\n  forceFocus: () => void;\n  testID: string;\n  disabled?: boolean;\n};\n\nconst StyleContext = React.createContext<StyleContextType>({\n  style: {},\n  isTextInputFocused: false,\n  forceFocus: () => {},\n  testID: '',\n});\n\nconst IconAdornment: React.FunctionComponent<\n  {\n    testID: string;\n    icon: React.ReactNode;\n    topPosition: number;\n    side: 'left' | 'right';\n    theme?: ThemeProp;\n    disabled?: boolean;\n  } & Omit<StyleContextType, 'style'>\n> = ({\n  icon,\n  topPosition,\n  side,\n  isTextInputFocused,\n  forceFocus,\n  testID,\n  theme: themeOverrides,\n  disabled,\n}) => {\n  const { isV3 } = useInternalTheme(themeOverrides);\n  const { ICON_OFFSET } = getConstants(isV3);\n\n  const style = {\n    top: topPosition,\n    [side]: ICON_OFFSET,\n  };\n  const contextState = {\n    style,\n    isTextInputFocused,\n    forceFocus,\n    testID,\n    disabled,\n  };\n\n  return (\n    <StyleContext.Provider value={contextState}>{icon}</StyleContext.Provider>\n  );\n};\n\n/**\n * A component to render a leading / trailing icon in the TextInput\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *   return (\n *     <TextInput\n *       label=\"Password\"\n *       secureTextEntry\n *       right={<TextInput.Icon icon=\"eye\" />}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst TextInputIcon = ({\n  icon,\n  onPress,\n  forceTextInputFocus = true,\n  color: customColor,\n  theme: themeOverrides,\n  rippleColor,\n  ...rest\n}: Props) => {\n  const { style, isTextInputFocused, forceFocus, testID, disabled } =\n    React.useContext(StyleContext);\n\n  const onPressWithFocusControl = React.useCallback(\n    (e: GestureResponderEvent) => {\n      if (forceTextInputFocus && !isTextInputFocused) {\n        forceFocus();\n      }\n\n      onPress?.(e);\n    },\n    [forceTextInputFocus, forceFocus, isTextInputFocused, onPress]\n  );\n\n  const theme = useInternalTheme(themeOverrides);\n\n  const iconColor = getIconColor({\n    theme,\n    disabled,\n    isTextInputFocused,\n    customColor,\n  });\n\n  return (\n    <View style={[styles.container, style]}>\n      <IconButton\n        icon={icon}\n        style={styles.iconButton}\n        size={ICON_SIZE}\n        onPress={onPressWithFocusControl}\n        iconColor={iconColor}\n        testID={testID}\n        theme={themeOverrides}\n        rippleColor={rippleColor}\n        {...rest}\n      />\n    </View>\n  );\n};\nTextInputIcon.displayName = 'TextInput.Icon';\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    width: ICON_SIZE,\n    height: ICON_SIZE,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  iconButton: {\n    margin: 0,\n  },\n});\n\nexport default TextInputIcon;\n\n// @component-docs ignore-next-line\nexport { IconAdornment };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}