{"ast":null,"code":"import color from'color';export function getTextColor(_ref){var _theme$colors;var theme=_ref.theme,disabled=_ref.disabled;if(theme.isV3){if(disabled){return theme.colors.onSurfaceDisabled;}return theme.colors.onSurfaceVariant;}return color((_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.text).alpha(theme.dark?0.7:0.54).rgb().string();}export function getIconColor(_ref2){var theme=_ref2.theme,isTextInputFocused=_ref2.isTextInputFocused,disabled=_ref2.disabled,customColor=_ref2.customColor;if(typeof customColor==='function'){return customColor(isTextInputFocused);}if(customColor){return customColor;}if(!theme.isV3){return theme.colors.text;}if(disabled){return theme.colors.onSurfaceDisabled;}return theme.colors.onSurfaceVariant;}","map":{"version":3,"names":["color","getTextColor","_ref","_theme$colors","theme","disabled","isV3","colors","onSurfaceDisabled","onSurfaceVariant","text","alpha","dark","rgb","string","getIconColor","_ref2","isTextInputFocused","customColor"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\react-native-paper\\src\\components\\TextInput\\Adornment\\utils.ts"],"sourcesContent":["import color from 'color';\n\nimport type { InternalTheme } from '../../../types';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n};\n\nexport function getTextColor({ theme, disabled }: BaseProps) {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.onSurfaceVariant;\n  }\n  return color(theme.colors?.text)\n    .alpha(theme.dark ? 0.7 : 0.54)\n    .rgb()\n    .string();\n}\n\nexport function getIconColor({\n  theme,\n  isTextInputFocused,\n  disabled,\n  customColor,\n}: BaseProps & {\n  isTextInputFocused: boolean;\n  customColor?: ((isTextInputFocused: boolean) => string | undefined) | string;\n}) {\n  if (typeof customColor === 'function') {\n    return customColor(isTextInputFocused);\n  }\n  if (customColor) {\n    return customColor;\n  }\n\n  if (!theme.isV3) {\n    return theme.colors.text;\n  }\n\n  if (disabled) {\n    return theme.colors.onSurfaceDisabled;\n  }\n\n  return theme.colors.onSurfaceVariant;\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CASzB,MAAO,SAAS,CAAAC,YAAYA,CAAAC,IAAA,CAAiC,KAAAC,aAAA,IAA9B,CAAAC,KAAK,CAAuBF,IAAA,CAA5BE,KAAK,CAAEC,QAAA,CAAqBH,IAAA,CAArBG,QAAA,CACpC,GAAID,KAAK,CAACE,IAAI,CAAE,CACd,GAAID,QAAQ,CAAE,CACZ,MAAO,CAAAD,KAAK,CAACG,MAAM,CAACC,iBAAiB,CACvC,CACA,MAAO,CAAAJ,KAAK,CAACG,MAAM,CAACE,gBAAgB,CACtC,CACA,MAAO,CAAAT,KAAK,EAAAG,aAAA,CAACC,KAAK,CAACG,MAAM,UAAAJ,aAAA,iBAAZA,aAAA,CAAcO,IAAI,CAAC,CAC7BC,KAAK,CAACP,KAAK,CAACQ,IAAI,CAAG,GAAG,CAAG,IAAI,CAAC,CAC9BC,GAAG,CAAC,CAAC,CACLC,MAAM,CAAC,CAAC,CACb,CAEA,MAAO,SAAS,CAAAC,YAAYA,CAAAC,KAAA,CAQzB,IAPD,CAAAZ,KAAK,CAONY,KAAA,CAPCZ,KAAK,CACLa,kBAAkB,CAMnBD,KAAA,CANCC,kBAAkB,CAClBZ,QAAQ,CAKTW,KAAA,CALCX,QAAQ,CACRa,WAAA,CAIDF,KAAA,CAJCE,WAAA,CAKA,GAAI,MAAO,CAAAA,WAAW,GAAK,UAAU,CAAE,CACrC,MAAO,CAAAA,WAAW,CAACD,kBAAkB,CAAC,CACxC,CACA,GAAIC,WAAW,CAAE,CACf,MAAO,CAAAA,WAAW,CACpB,CAEA,GAAI,CAACd,KAAK,CAACE,IAAI,CAAE,CACf,MAAO,CAAAF,KAAK,CAACG,MAAM,CAACG,IAAI,CAC1B,CAEA,GAAIL,QAAQ,CAAE,CACZ,MAAO,CAAAD,KAAK,CAACG,MAAM,CAACC,iBAAiB,CACvC,CAEA,MAAO,CAAAJ,KAAK,CAACG,MAAM,CAACE,gBAAgB,CACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}