{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"textStyle\",\"style\",\"numeric\",\"maxFontSizeMultiplier\",\"testID\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableRipple from'../TouchableRipple/TouchableRipple';import Text from'../Typography/Text';var DataTableCell=function DataTableCell(_ref){var children=_ref.children,textStyle=_ref.textStyle,style=_ref.style,numeric=_ref.numeric,maxFontSizeMultiplier=_ref.maxFontSizeMultiplier,testID=_ref.testID,rest=_objectWithoutProperties(_ref,_excluded);return React.createElement(TouchableRipple,_extends({},rest,{testID:testID,style:[styles.container,numeric&&styles.right,style]}),React.createElement(CellContent,{textStyle:textStyle,testID:testID,maxFontSizeMultiplier:maxFontSizeMultiplier},children));};var CellContent=function CellContent(_ref2){var children=_ref2.children,textStyle=_ref2.textStyle,maxFontSizeMultiplier=_ref2.maxFontSizeMultiplier,testID=_ref2.testID;if(React.isValidElement(children)){return children;}return React.createElement(Text,{style:textStyle,numberOfLines:1,maxFontSizeMultiplier:maxFontSizeMultiplier,testID:`${testID}-text-container`},children);};DataTableCell.displayName='DataTable.Cell';var styles=StyleSheet.create({container:{flex:1,flexDirection:'row',alignItems:'center'},right:{justifyContent:'flex-end'}});export default DataTableCell;","map":{"version":3,"names":["React","StyleSheet","TouchableRipple","Text","DataTableCell","_ref","children","textStyle","style","numeric","maxFontSizeMultiplier","testID","rest","_objectWithoutProperties","_excluded","createElement","_extends","styles","container","right","CellContent","_ref2","isValidElement","numberOfLines","displayName","create","flex","flexDirection","alignItems","justifyContent"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\react-native-paper\\src\\components\\DataTable\\DataTableCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n  GestureResponderEvent,\n} from 'react-native';\n\nimport type { $RemoveChildren } from '../../types';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableCell`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Text content style of the `DataTableCell`.\n   */\n  textStyle?: StyleProp<TextStyle>;\n  /**\n   * Specifies the largest possible scale a text font can reach.\n   */\n  maxFontSizeMultiplier?: number;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * A component to show a single cell inside of a table.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * If you want to support multiline text, please use View instead, as multiline text doesn't comply with\n * MD Guidelines (https://github.com/callstack/react-native-paper/issues/2381).\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst DataTableCell = ({\n  children,\n  textStyle,\n  style,\n  numeric,\n  maxFontSizeMultiplier,\n  testID,\n  ...rest\n}: Props) => {\n  return (\n    <TouchableRipple\n      {...rest}\n      testID={testID}\n      style={[styles.container, numeric && styles.right, style]}\n    >\n      <CellContent\n        textStyle={textStyle}\n        testID={testID}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n      >\n        {children}\n      </CellContent>\n    </TouchableRipple>\n  );\n};\n\nconst CellContent = ({\n  children,\n  textStyle,\n  maxFontSizeMultiplier,\n  testID,\n}: Pick<\n  Props,\n  'children' | 'textStyle' | 'testID' | 'maxFontSizeMultiplier'\n>) => {\n  if (React.isValidElement(children)) {\n    return children;\n  }\n\n  return (\n    <Text\n      style={textStyle}\n      numberOfLines={1}\n      maxFontSizeMultiplier={maxFontSizeMultiplier}\n      testID={`${testID}-text-container`}\n    >\n      {children}\n    </Text>\n  );\n};\n\nDataTableCell.displayName = 'DataTable.Cell';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n});\n\nexport default DataTableCell;\n"],"mappings":"0dAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,UAAA,gDAU9B,MAAO,CAAAC,eAAe,KAAM,oCAAoC,CAChE,MAAO,CAAAC,IAAI,KAAM,oBAAoB,CAuDrC,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAGC,IAAA,CAQT,IAPX,CAAAC,QAAQ,CAOFD,IAAA,CAPNC,QAAQ,CACRC,SAAS,CAMHF,IAAA,CANNE,SAAS,CACTC,KAAK,CAKCH,IAAA,CALNG,KAAK,CACLC,OAAO,CAIDJ,IAAA,CAJNI,OAAO,CACPC,qBAAqB,CAGfL,IAAA,CAHNK,qBAAqB,CACrBC,MAAM,CAEAN,IAAA,CAFNM,MAAM,CACHC,IAAA,CAAAC,wBAAA,CACGR,IAAA,CAAAS,SAAA,EACN,MACE,CAAAd,KAAA,CAAAe,aAAA,CAACb,eAAe,CAAAc,QAAA,IACVJ,IAAI,EACRD,MAAM,CAAEA,MAAO,CACfH,KAAK,CAAE,CAACS,MAAM,CAACC,SAAS,CAAET,OAAO,EAAIQ,MAAM,CAACE,KAAK,CAAEX,KAAK,CAAE,GAE1DR,KAAA,CAAAe,aAAA,CAACK,WAAW,EACVb,SAAS,CAAEA,SAAU,CACrBI,MAAM,CAAEA,MAAO,CACfD,qBAAqB,CAAEA,qBAAsB,EAE5CJ,QACU,CACE,CAAC,CAEtB,CAAC,CAED,GAAM,CAAAc,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAGC,KAAA,CAQd,IAPJ,CAAAf,QAAQ,CAOTe,KAAA,CAPCf,QAAQ,CACRC,SAAS,CAMVc,KAAA,CANCd,SAAS,CACTG,qBAAqB,CAKtBW,KAAA,CALCX,qBAAqB,CACrBC,MAAA,CAIDU,KAAA,CAJCV,MAAA,CAKA,GAAIX,KAAK,CAACsB,cAAc,CAAChB,QAAQ,CAAC,CAAE,CAClC,MAAO,CAAAA,QAAQ,CACjB,CAEA,MACE,CAAAN,KAAA,CAAAe,aAAA,CAACZ,IAAI,EACHK,KAAK,CAAED,SAAU,CACjBgB,aAAa,CAAE,CAAE,CACjBb,qBAAqB,CAAEA,qBAAsB,CAC7CC,MAAM,CAAG,GAAEA,MAAO,iBAAiB,EAElCL,QACG,CAAC,CAEX,CAAC,CAEDF,aAAa,CAACoB,WAAW,CAAG,gBAAgB,CAE5C,GAAM,CAAAP,MAAM,CAAGhB,UAAU,CAACwB,MAAM,CAAC,CAC/BP,SAAS,CAAE,CACTQ,IAAI,CAAE,CAAC,CACPC,aAAa,CAAE,KAAK,CACpBC,UAAU,CAAE,QACd,CAAC,CAEDT,KAAK,CAAE,CACLU,cAAc,CAAE,UAClB,CACF,CAAC,CAAC,CAEF,cAAe,CAAAzB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}