{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect,createContext}from'react';import{LightTheme,DarkTheme}from'../theme';import AsyncStorage from'@react-native-async-storage/async-storage';import{jsx as _jsx}from\"react/jsx-runtime\";export var ThemeContext=createContext();export var ThemeProvider=function ThemeProvider(_ref){var children=_ref.children;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isDarkMode=_useState2[0],setIsDarkMode=_useState2[1];var _useState3=useState(LightTheme),_useState4=_slicedToArray(_useState3,2),theme=_useState4[0],setTheme=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];useEffect(function(){var loadThemePreference=function(){var _ref2=_asyncToGenerator(function*(){try{setIsLoading(true);var themePreference=yield AsyncStorage.getItem('themePreference');if(themePreference==='dark'){setIsDarkMode(true);setTheme(DarkTheme);}else{setIsDarkMode(false);setTheme(LightTheme);}}catch(error){console.error('Erreur lors du chargement des préférences de thème:',error);setIsDarkMode(false);setTheme(LightTheme);}finally{setIsLoading(false);}});return function loadThemePreference(){return _ref2.apply(this,arguments);};}();loadThemePreference();},[]);var toggleTheme=function(){var _ref3=_asyncToGenerator(function*(){try{var newIsDarkMode=!isDarkMode;setIsDarkMode(newIsDarkMode);setTheme(newIsDarkMode?DarkTheme:LightTheme);yield AsyncStorage.setItem('themePreference',newIsDarkMode?'dark':'light');}catch(error){console.error('Erreur lors de la sauvegarde des préférences de thème:',error);}});return function toggleTheme(){return _ref3.apply(this,arguments);};}();var setThemeMode=function(){var _ref4=_asyncToGenerator(function*(mode){try{var isDark=mode==='dark';setIsDarkMode(isDark);setTheme(isDark?DarkTheme:LightTheme);yield AsyncStorage.setItem('themePreference',mode);}catch(error){console.error('Erreur lors de la sauvegarde des préférences de thème:',error);}});return function setThemeMode(_x){return _ref4.apply(this,arguments);};}();return _jsx(ThemeContext.Provider,{value:{theme:theme,isDarkMode:isDarkMode,toggleTheme:toggleTheme,setThemeMode:setThemeMode,isLoading:isLoading},children:children});};","map":{"version":3,"names":["React","useState","useEffect","createContext","LightTheme","DarkTheme","AsyncStorage","jsx","_jsx","ThemeContext","ThemeProvider","_ref","children","_useState","_useState2","_slicedToArray","isDarkMode","setIsDarkMode","_useState3","_useState4","theme","setTheme","_useState5","_useState6","isLoading","setIsLoading","loadThemePreference","_ref2","_asyncToGenerator","themePreference","getItem","error","console","apply","arguments","toggleTheme","_ref3","newIsDarkMode","setItem","setThemeMode","_ref4","mode","isDark","_x","Provider","value"],"sources":["C:/Users/User/Downloads/git_frontend/mobile/context/ThemeContext.js"],"sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\nimport { LightTheme, DarkTheme } from '../theme';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n// Création du contexte de thème\nexport const ThemeContext = createContext();\n\n// Provider du thème\nexport const ThemeProvider = ({ children }) => {\n  // État pour le thème actuel\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [theme, setTheme] = useState(LightTheme);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Charger les préférences de thème au démarrage\n  useEffect(() => {\n    const loadThemePreference = async () => {\n      try {\n        setIsLoading(true);\n        const themePreference = await AsyncStorage.getItem('themePreference');\n        \n        if (themePreference === 'dark') {\n          setIsDarkMode(true);\n          setTheme(DarkTheme);\n        } else {\n          setIsDarkMode(false);\n          setTheme(LightTheme);\n        }\n      } catch (error) {\n        console.error('Erreur lors du chargement des préférences de thème:', error);\n        // Par défaut, utiliser le thème clair\n        setIsDarkMode(false);\n        setTheme(LightTheme);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadThemePreference();\n  }, []);\n\n  // Fonction pour basculer entre les thèmes\n  const toggleTheme = async () => {\n    try {\n      const newIsDarkMode = !isDarkMode;\n      setIsDarkMode(newIsDarkMode);\n      setTheme(newIsDarkMode ? DarkTheme : LightTheme);\n      \n      // Sauvegarder la préférence\n      await AsyncStorage.setItem('themePreference', newIsDarkMode ? 'dark' : 'light');\n    } catch (error) {\n      console.error('Erreur lors de la sauvegarde des préférences de thème:', error);\n    }\n  };\n\n  // Fonction pour définir un thème spécifique\n  const setThemeMode = async (mode) => {\n    try {\n      const isDark = mode === 'dark';\n      setIsDarkMode(isDark);\n      setTheme(isDark ? DarkTheme : LightTheme);\n      \n      // Sauvegarder la préférence\n      await AsyncStorage.setItem('themePreference', mode);\n    } catch (error) {\n      console.error('Erreur lors de la sauvegarde des préférences de thème:', error);\n    }\n  };\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        theme,\n        isDarkMode,\n        toggleTheme,\n        setThemeMode,\n        isLoading\n      }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}