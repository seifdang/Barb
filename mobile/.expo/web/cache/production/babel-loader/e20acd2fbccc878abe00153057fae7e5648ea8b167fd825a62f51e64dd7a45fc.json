{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _excluded=[\"active\",\"activityState\",\"style\",\"enabled\"];function _callSuper(t,o,e){return o=_getPrototypeOf(o),_possibleConstructorReturn(t,_isNativeReflectConstruct()?Reflect.construct(o,e||[],_getPrototypeOf(t).constructor):o.apply(t,e));}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import Image from\"react-native-web/dist/exports/Image\";export*from'./types';export{default as useTransitionProgress}from'./useTransitionProgress';export{isSearchBarAvailableForCurrentPlatform,executeNativeBackPress}from'./utils';var ENABLE_SCREENS=true;export function enableScreens(){var shouldEnableScreens=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;ENABLE_SCREENS=shouldEnableScreens;}export function screensEnabled(){return ENABLE_SCREENS;}export function enableFreeze(){var shouldEnableReactFreeze=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;}export var NativeScreen=function(_React$Component){function NativeScreen(){_classCallCheck(this,NativeScreen);return _callSuper(this,NativeScreen,arguments);}_inherits(NativeScreen,_React$Component);return _createClass(NativeScreen,[{key:\"render\",value:function render(){var _this$props=this.props,active=_this$props.active,activityState=_this$props.activityState,style=_this$props.style,_this$props$enabled=_this$props.enabled,enabled=_this$props$enabled===void 0?ENABLE_SCREENS:_this$props$enabled,rest=_objectWithoutProperties(_this$props,_excluded);if(enabled){if(active!==undefined&&activityState===undefined){activityState=active!==0?2:0;}return React.createElement(View,_extends({hidden:activityState===0,style:[style,{display:activityState!==0?'flex':'none'}]},rest));}return React.createElement(View,rest);}}]);}(React.Component);export var Screen=Animated.createAnimatedComponent(NativeScreen);export var InnerScreen=View;export var ScreenContext=React.createContext(Screen);export var ScreenContainer=View;export var NativeScreenContainer=View;export var NativeScreenNavigationContainer=View;export var ScreenStack=View;export var FullWindowOverlay=View;export var ScreenStackHeaderBackButtonImage=function ScreenStackHeaderBackButtonImage(props){return React.createElement(View,null,React.createElement(Image,_extends({resizeMode:\"center\",fadeDuration:0},props)));};export var ScreenStackHeaderRightView=function ScreenStackHeaderRightView(props){return React.createElement(View,props);};export var ScreenStackHeaderLeftView=function ScreenStackHeaderLeftView(props){return React.createElement(View,props);};export var ScreenStackHeaderCenterView=function ScreenStackHeaderCenterView(props){return React.createElement(View,props);};export var ScreenStackHeaderSearchBarView=function ScreenStackHeaderSearchBarView(props){return React.createElement(View,props);};export var ScreenStackHeaderConfig=View;export var SearchBar=View;export var ScreenStackHeaderSubview=View;export var shouldUseActivityState=true;","map":{"version":3,"names":["React","Animated","View","Image","default","useTransitionProgress","isSearchBarAvailableForCurrentPlatform","executeNativeBackPress","ENABLE_SCREENS","enableScreens","shouldEnableScreens","arguments","length","undefined","screensEnabled","enableFreeze","shouldEnableReactFreeze","NativeScreen","_React$Component","_classCallCheck","_callSuper","_inherits","_createClass","key","value","render","_this$props","props","active","activityState","style","_this$props$enabled","enabled","rest","_objectWithoutProperties","_excluded","createElement","_extends","hidden","display","Component","Screen","createAnimatedComponent","InnerScreen","ScreenContext","createContext","ScreenContainer","NativeScreenContainer","NativeScreenNavigationContainer","ScreenStack","FullWindowOverlay","ScreenStackHeaderBackButtonImage","resizeMode","fadeDuration","ScreenStackHeaderRightView","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","ScreenStackHeaderSearchBarView","ScreenStackHeaderConfig","SearchBar","ScreenStackHeaderSubview","shouldUseActivityState"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\react-native-screens\\lib\\module\\index.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport { Animated, View, ViewProps, ImageProps, Image } from 'react-native';\nimport {\n  ScreenProps,\n  ScreenContainerProps,\n  ScreenStackProps,\n  ScreenStackHeaderConfigProps,\n  HeaderSubviewTypes,\n  SearchBarProps,\n} from './types';\n\nexport * from './types';\nexport { default as useTransitionProgress } from './useTransitionProgress';\nexport {\n  isSearchBarAvailableForCurrentPlatform,\n  executeNativeBackPress,\n} from './utils';\n\nlet ENABLE_SCREENS = true;\n\nexport function enableScreens(shouldEnableScreens = true): void {\n  ENABLE_SCREENS = shouldEnableScreens;\n}\n\nexport function screensEnabled(): boolean {\n  return ENABLE_SCREENS;\n}\n\n// @ts-ignore function stub, freezing logic is located in index.native.tsx\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function enableFreeze(shouldEnableReactFreeze = true): void {\n  // noop\n}\n\nexport class NativeScreen extends React.Component<ScreenProps> {\n  render(): JSX.Element {\n    let {\n      active,\n      activityState,\n      style,\n      enabled = ENABLE_SCREENS,\n      ...rest\n    } = this.props;\n\n    if (enabled) {\n      if (active !== undefined && activityState === undefined) {\n        activityState = active !== 0 ? 2 : 0; // change taken from index.native.tsx\n      }\n      return (\n        <View\n          // @ts-expect-error: hidden exists on web, but not in React Native\n          hidden={activityState === 0}\n          style={[style, { display: activityState !== 0 ? 'flex' : 'none' }]}\n          {...rest}\n        />\n      );\n    }\n\n    return <View {...rest} />;\n  }\n}\n\nexport const Screen = Animated.createAnimatedComponent(NativeScreen);\n\nexport const InnerScreen = View;\n\nexport const ScreenContext = React.createContext(Screen);\n\nexport const ScreenContainer: React.ComponentType<ScreenContainerProps> = View;\n\nexport const NativeScreenContainer: React.ComponentType<ScreenContainerProps> =\n  View;\n\nexport const NativeScreenNavigationContainer: React.ComponentType<ScreenContainerProps> =\n  View;\n\nexport const ScreenStack: React.ComponentType<ScreenStackProps> = View;\n\nexport const FullWindowOverlay = View as React.ComponentType<{\n  children: ReactNode;\n}>;\n\nexport const ScreenStackHeaderBackButtonImage = (\n  props: ImageProps\n): JSX.Element => (\n  <View>\n    <Image resizeMode=\"center\" fadeDuration={0} {...props} />\n  </View>\n);\n\nexport const ScreenStackHeaderRightView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderLeftView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderCenterView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderSearchBarView = (\n  props: React.PropsWithChildren<SearchBarProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderConfig: React.ComponentType<ScreenStackHeaderConfigProps> =\n  View;\n\n// @ts-expect-error: search bar props have no common props with View\nexport const SearchBar: React.ComponentType<SearchBarProps> = View;\n\nexport const ScreenStackHeaderSubview: React.ComponentType<\n  React.PropsWithChildren<ViewProps & { type?: HeaderSubviewTypes }>\n> = View;\n\nexport const shouldUseActivityState = true;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}