{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"status\",\"disabled\",\"onPress\",\"theme\",\"testID\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{getSelectionControlIOSColor}from'./utils';import{useInternalTheme}from'../../core/theming';import MaterialCommunityIcon from'../MaterialCommunityIcon';import TouchableRipple from'../TouchableRipple/TouchableRipple';var CheckboxIOS=function CheckboxIOS(_ref){var status=_ref.status,disabled=_ref.disabled,onPress=_ref.onPress,themeOverrides=_ref.theme,testID=_ref.testID,rest=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);var checked=status==='checked';var indeterminate=status==='indeterminate';var _getSelectionControlI=getSelectionControlIOSColor({theme:theme,disabled:disabled,customColor:rest.color}),checkedColor=_getSelectionControlI.checkedColor,rippleColor=_getSelectionControlI.rippleColor;var icon=indeterminate?'minus':'check';var opacity=indeterminate||checked?1:0;return React.createElement(TouchableRipple,_extends({},rest,{borderless:true,rippleColor:rippleColor,onPress:onPress,disabled:disabled,accessibilityRole:\"checkbox\",accessibilityState:{disabled:disabled,checked:checked},accessibilityLiveRegion:\"polite\",style:styles.container,testID:testID,theme:theme}),React.createElement(View,{style:{opacity:opacity}},React.createElement(MaterialCommunityIcon,{allowFontScaling:false,name:icon,size:24,color:checkedColor,direction:\"ltr\"})));};CheckboxIOS.displayName='Checkbox.IOS';var styles=StyleSheet.create({container:{borderRadius:18,padding:6}});export default CheckboxIOS;export{CheckboxIOS};","map":{"version":3,"names":["React","StyleSheet","View","getSelectionControlIOSColor","useInternalTheme","MaterialCommunityIcon","TouchableRipple","CheckboxIOS","_ref","status","disabled","onPress","themeOverrides","theme","testID","rest","_objectWithoutProperties","_excluded","checked","indeterminate","_getSelectionControlI","customColor","color","checkedColor","rippleColor","icon","opacity","createElement","_extends","borderless","accessibilityRole","accessibilityState","accessibilityLiveRegion","style","styles","container","allowFontScaling","name","size","direction","displayName","create","borderRadius","padding"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\react-native-paper\\src\\components\\Checkbox\\CheckboxIOS.tsx"],"sourcesContent":["import * as React from 'react';\nimport { GestureResponderEvent, StyleSheet, View } from 'react-native';\n\nimport { getSelectionControlIOSColor } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n * This component follows platform guidelines for iOS, but can be used\n * on any platform.\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst CheckboxIOS = ({\n  status,\n  disabled,\n  onPress,\n  theme: themeOverrides,\n  testID,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const checked = status === 'checked';\n  const indeterminate = status === 'indeterminate';\n\n  const { checkedColor, rippleColor } = getSelectionControlIOSColor({\n    theme,\n    disabled,\n    customColor: rest.color,\n  });\n\n  const icon = indeterminate ? 'minus' : 'check';\n  const opacity = indeterminate || checked ? 1 : 0;\n\n  return (\n    <TouchableRipple\n      {...rest}\n      borderless\n      rippleColor={rippleColor}\n      onPress={onPress}\n      disabled={disabled}\n      accessibilityRole=\"checkbox\"\n      accessibilityState={{ disabled, checked }}\n      accessibilityLiveRegion=\"polite\"\n      style={styles.container}\n      testID={testID}\n      theme={theme}\n    >\n      <View style={{ opacity }}>\n        <MaterialCommunityIcon\n          allowFontScaling={false}\n          name={icon}\n          size={24}\n          color={checkedColor}\n          direction=\"ltr\"\n        />\n      </View>\n    </TouchableRipple>\n  );\n};\n\nCheckboxIOS.displayName = 'Checkbox.IOS';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    padding: 6,\n  },\n});\n\nexport default CheckboxIOS;\n\n// @component-docs ignore-next-line\nexport { CheckboxIOS };\n"],"mappings":"+bAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,UAAA,uDAAAC,IAAA,0CAG9B,OAASC,2BAA2B,KAAQ,SAAS,CACrD,OAASC,gBAAgB,KAAQ,oBAAoB,CAErD,MAAO,CAAAC,qBAAqB,KAAM,0BAA0B,CAC5D,MAAO,CAAAC,eAAe,KAAM,oCAAoC,CAoChE,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAGC,IAAA,CAOP,IANX,CAAAC,MAAM,CAMAD,IAAA,CANNC,MAAM,CACNC,QAAQ,CAKFF,IAAA,CALNE,QAAQ,CACRC,OAAO,CAIDH,IAAA,CAJNG,OAAO,CACAC,cAAc,CAGfJ,IAAA,CAHNK,KAAK,CACLC,MAAM,CAEAN,IAAA,CAFNM,MAAM,CACHC,IAAA,CAAAC,wBAAA,CACGR,IAAA,CAAAS,SAAA,EACN,GAAM,CAAAJ,KAAK,CAAGT,gBAAgB,CAACQ,cAAc,CAAC,CAC9C,GAAM,CAAAM,OAAO,CAAGT,MAAM,GAAK,SAAS,CACpC,GAAM,CAAAU,aAAa,CAAGV,MAAM,GAAK,eAAe,CAEhD,IAAAW,qBAAA,CAAsCjB,2BAA2B,CAAC,CAChEU,KAAK,CAALA,KAAK,CACLH,QAAQ,CAARA,QAAQ,CACRW,WAAW,CAAEN,IAAI,CAACO,KACpB,CAAC,CAAC,CAJMC,YAAY,CAAAH,qBAAA,CAAZG,YAAY,CAAEC,WAAA,CAAAJ,qBAAA,CAAAI,WAAA,CAMtB,GAAM,CAAAC,IAAI,CAAGN,aAAa,CAAG,OAAO,CAAG,OAAO,CAC9C,GAAM,CAAAO,OAAO,CAAGP,aAAa,EAAID,OAAO,CAAG,CAAC,CAAG,CAAC,CAEhD,MACE,CAAAlB,KAAA,CAAA2B,aAAA,CAACrB,eAAe,CAAAsB,QAAA,IACVb,IAAI,EACRc,UAAU,MACVL,WAAW,CAAEA,WAAY,CACzBb,OAAO,CAAEA,OAAQ,CACjBD,QAAQ,CAAEA,QAAS,CACnBoB,iBAAiB,CAAC,UAAU,CAC5BC,kBAAkB,CAAE,CAAErB,QAAQ,CAARA,QAAQ,CAAEQ,OAAA,CAAAA,OAAQ,CAAE,CAC1Cc,uBAAuB,CAAC,QAAQ,CAChCC,KAAK,CAAEC,MAAM,CAACC,SAAU,CACxBrB,MAAM,CAAEA,MAAO,CACfD,KAAK,CAAEA,KAAM,GAEbb,KAAA,CAAA2B,aAAA,CAACzB,IAAI,EAAC+B,KAAK,CAAE,CAAEP,OAAA,CAAAA,OAAQ,CAAE,EACvB1B,KAAA,CAAA2B,aAAA,CAACtB,qBAAqB,EACpB+B,gBAAgB,CAAE,KAAM,CACxBC,IAAI,CAAEZ,IAAK,CACXa,IAAI,CAAE,EAAG,CACThB,KAAK,CAAEC,YAAa,CACpBgB,SAAS,CAAC,KAAK,CAChB,CACG,CACS,CAAC,CAEtB,CAAC,CAEDhC,WAAW,CAACiC,WAAW,CAAG,cAAc,CAExC,GAAM,CAAAN,MAAM,CAAGjC,UAAU,CAACwC,MAAM,CAAC,CAC/BN,SAAS,CAAE,CACTO,YAAY,CAAE,EAAE,CAChBC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CAEF,cAAe,CAAApC,WAAW,CAG1B,OAASA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}