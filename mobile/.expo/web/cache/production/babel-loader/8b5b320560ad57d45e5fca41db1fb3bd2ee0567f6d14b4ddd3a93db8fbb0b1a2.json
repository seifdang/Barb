{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import axios from'axios';import AsyncStorage from'@react-native-async-storage/async-storage';import config from'../config';var BASE_URLS=Array.isArray(config.API_URL)?config.API_URL:[config.API_URL].concat(_toConsumableArray(config.API_URL_ALTERNATIVES||[]));var BASE_URL=BASE_URLS[0];var apiClient=axios.create({baseURL:BASE_URL,headers:{'Content-Type':'application/json'},timeout:config.TIMEOUT||10000,validateStatus:function validateStatus(status){return status>=200&&status<500;}});var MAX_RETRIES=config.MAX_RETRIES||3;var RETRY_DELAY=1000;var retryRequest=function(){var _ref=_asyncToGenerator(function*(error){var config=error.config;config.retryCount=config.retryCount||0;if(config.retryCount>=MAX_RETRIES*BASE_URLS.length){return Promise.reject(error);}if(error.code==='ECONNABORTED'||!error.response){var urlIndex=Math.floor(config.retryCount/MAX_RETRIES)%BASE_URLS.length;config.baseURL=BASE_URLS[urlIndex];console.log(`Trying different base URL: ${config.baseURL}`);}config.retryCount+=1;yield new Promise(function(resolve){return setTimeout(resolve,RETRY_DELAY*(config.retryCount%MAX_RETRIES+1));});return apiClient(config);});return function retryRequest(_x){return _ref.apply(this,arguments);};}();apiClient.interceptors.request.use(function(){var _ref2=_asyncToGenerator(function*(config){try{var token=yield AsyncStorage.getItem('userToken');if(!token){var userInfoString=yield AsyncStorage.getItem('userInfo');if(userInfoString){var userInfo=JSON.parse(userInfoString);token=userInfo.token;}}if(token){config.headers.Authorization=`Bearer ${token}`;console.log(`Adding auth token to request: ${token.substring(0,15)}...`);}else{console.log('No auth token available for request');}console.log(`API Request: ${config.method.toUpperCase()} ${config.baseURL}${config.url}`);return config;}catch(error){console.error('Error in request interceptor:',error);return config;}});return function(_x2){return _ref2.apply(this,arguments);};}(),function(error){console.error('Request interceptor error:',error);return Promise.reject(error);});apiClient.interceptors.response.use(function(response){return response;},function(){var _ref3=_asyncToGenerator(function*(error){var _error$response,_error$response2;console.error('API Error:',((_error$response=error.response)==null?void 0:_error$response.data)||error.message);if(!error.response||error.code==='ECONNABORTED'){var _error$config;console.log(`Retrying request (${((_error$config=error.config)==null?void 0:_error$config.retryCount)||0+1}/${MAX_RETRIES})`);return retryRequest(error);}if(((_error$response2=error.response)==null?void 0:_error$response2.status)===401){console.log('Unauthorized - clearing token');yield AsyncStorage.removeItem('userToken');yield AsyncStorage.removeItem('userInfo');}return Promise.reject(error);});return function(_x3){return _ref3.apply(this,arguments);};}());export var servicesApi={getServices:function getServices(){return apiClient.get('/services');},getService:function getService(id){return apiClient.get(`/services/${id}`);}};export var appointmentsApi={getUserAppointments:function getUserAppointments(){return apiClient.get('/appointments');},getAppointment:function getAppointment(id){return apiClient.get(`/appointments/${id}`);},createAppointment:function createAppointment(data){return apiClient.post('/appointments',data);},updateAppointment:function updateAppointment(id,data){return apiClient.put(`/appointments/${id}`,data);},cancelAppointment:function cancelAppointment(id){var data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};console.log(`Making DELETE request to /appointments/${id} with data:`,data);return apiClient.delete(`/appointments/${id}`,{data:data});},deleteAppointment:function deleteAppointment(id){console.log(`Deleting appointment permanently: /appointments/${id}/delete`);return apiClient.delete(`/appointments/${id}/delete`);},completeAppointment:function completeAppointment(id){return apiClient.put(`/appointments/${id}/complete`);},getBarberAvailability:function getBarberAvailability(barberId,date,salonId){var encodedDate=encodeURIComponent(date);var encodedSalonId=encodeURIComponent(salonId);return apiClient.get(`/appointments/availability/${barberId}?date=${encodedDate}&salonId=${encodedSalonId}`);}};export var barbersApi={getBarbers:function getBarbers(){return apiClient.get('/users/barbers');}};export default apiClient;","map":{"version":3,"names":["axios","AsyncStorage","config","BASE_URLS","Array","isArray","API_URL","concat","_toConsumableArray","API_URL_ALTERNATIVES","BASE_URL","apiClient","create","baseURL","headers","timeout","TIMEOUT","validateStatus","status","MAX_RETRIES","RETRY_DELAY","retryRequest","_ref","_asyncToGenerator","error","retryCount","length","Promise","reject","code","response","urlIndex","Math","floor","console","log","resolve","setTimeout","_x","apply","arguments","interceptors","request","use","_ref2","token","getItem","userInfoString","userInfo","JSON","parse","Authorization","substring","method","toUpperCase","url","_x2","_ref3","_error$response","_error$response2","data","message","_error$config","removeItem","_x3","servicesApi","getServices","get","getService","id","appointmentsApi","getUserAppointments","getAppointment","createAppointment","post","updateAppointment","put","cancelAppointment","undefined","delete","deleteAppointment","completeAppointment","getBarberAvailability","barberId","date","salonId","encodedDate","encodeURIComponent","encodedSalonId","barbersApi","getBarbers"],"sources":["C:/Users/User/Downloads/git_frontend/mobile/api/client.js"],"sourcesContent":["import axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport config from '../config';\n\n// API base URL configuration\n// Utiliser la configuration centralisÃ©e\nconst BASE_URLS = Array.isArray(config.API_URL) \n  ? config.API_URL \n  : [config.API_URL, ...(config.API_URL_ALTERNATIVES || [])];\n\n// Default to first URL initially\nconst BASE_URL = BASE_URLS[0];\n\n// Create axios instance with timeout and retry configuration\nconst apiClient = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: config.TIMEOUT || 10000, // Utiliser le timeout de la configuration\n  validateStatus: function (status) {\n    return status >= 200 && status < 500; // Handle only 5xx errors as errors\n  },\n});\n\n// Retry configuration\nconst MAX_RETRIES = config.MAX_RETRIES || 3;\nconst RETRY_DELAY = 1000; // 1 second\n\n// Modified retry logic to try different base URLs\nconst retryRequest = async (error) => {\n  const config = error.config;\n  config.retryCount = config.retryCount || 0;\n  \n  if (config.retryCount >= MAX_RETRIES * BASE_URLS.length) {\n    return Promise.reject(error);\n  }\n  \n  // Try different base URLs if connection fails\n  if (error.code === 'ECONNABORTED' || !error.response) {\n    const urlIndex = Math.floor(config.retryCount / MAX_RETRIES) % BASE_URLS.length;\n    config.baseURL = BASE_URLS[urlIndex];\n    console.log(`Trying different base URL: ${config.baseURL}`);\n  }\n  \n  config.retryCount += 1;\n  await new Promise(resolve => setTimeout(resolve, RETRY_DELAY * (config.retryCount % MAX_RETRIES + 1)));\n  return apiClient(config);\n};\n\n// Request interceptor for adding the auth token\napiClient.interceptors.request.use(\n  async (config) => {\n    try {\n      // First try to get token from AsyncStorage\n      let token = await AsyncStorage.getItem('userToken');\n      \n      // If token doesn't exist in AsyncStorage, try to get userInfo\n      if (!token) {\n        const userInfoString = await AsyncStorage.getItem('userInfo');\n        if (userInfoString) {\n          const userInfo = JSON.parse(userInfoString);\n          token = userInfo.token;\n        }\n      }\n      \n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n        console.log(`Adding auth token to request: ${token.substring(0, 15)}...`);\n      } else {\n        console.log('No auth token available for request');\n      }\n      \n      console.log(`API Request: ${config.method.toUpperCase()} ${config.baseURL}${config.url}`);\n      return config;\n    } catch (error) {\n      console.error('Error in request interceptor:', error);\n      return config;\n    }\n  },\n  (error) => {\n    console.error('Request interceptor error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for global error handling\napiClient.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  async (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    \n    // Network errors or timeout - attempt retry\n    if (!error.response || error.code === 'ECONNABORTED') {\n      console.log(`Retrying request (${error.config?.retryCount || 0 + 1}/${MAX_RETRIES})`);\n      return retryRequest(error);\n    }\n\n    if (error.response?.status === 401) {\n      // Handle unauthorized errors (token expired, etc.)\n      console.log('Unauthorized - clearing token');\n      await AsyncStorage.removeItem('userToken');\n      await AsyncStorage.removeItem('userInfo');\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Services API\nexport const servicesApi = {\n  getServices: () => apiClient.get('/services'),\n  getService: (id) => apiClient.get(`/services/${id}`),\n};\n\n// Appointments API\nexport const appointmentsApi = {\n  getUserAppointments: () => apiClient.get('/appointments'),\n  getAppointment: (id) => apiClient.get(`/appointments/${id}`),\n  createAppointment: (data) => apiClient.post('/appointments', data),\n  updateAppointment: (id, data) => apiClient.put(`/appointments/${id}`, data),\n  cancelAppointment: (id, data = {}) => {\n    console.log(`Making DELETE request to /appointments/${id} with data:`, data);\n    return apiClient.delete(`/appointments/${id}`, { data });\n  },\n  deleteAppointment: (id) => {\n    console.log(`Deleting appointment permanently: /appointments/${id}/delete`);\n    return apiClient.delete(`/appointments/${id}/delete`);\n  },\n  completeAppointment: (id) => apiClient.put(`/appointments/${id}/complete`),\n  getBarberAvailability: (barberId, date, salonId) => {\n    const encodedDate = encodeURIComponent(date);\n    const encodedSalonId = encodeURIComponent(salonId);\n    return apiClient.get(`/appointments/availability/${barberId}?date=${encodedDate}&salonId=${encodedSalonId}`);\n  },\n};\n\n// Barbers API\nexport const barbersApi = {\n  // Get all barbers\n  getBarbers: () => apiClient.get('/users/barbers'),\n};\n\nexport default apiClient;\n\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}