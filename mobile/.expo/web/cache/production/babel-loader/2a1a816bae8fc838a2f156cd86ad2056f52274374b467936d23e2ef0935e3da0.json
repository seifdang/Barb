{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import{Platform}from'expo-modules-core';import PixelRatio from\"react-native-web/dist/exports/PixelRatio\";import NativeModules from\"react-native-web/dist/exports/NativeModules\";import AssetSourceResolver from'./AssetSourceResolver';import{getManifest,getManifest2,manifestBaseUrl}from'./PlatformUtils';var assetMapOverride=getManifest().assetMapOverride;export function selectAssetSource(meta){var _meta$fileHashes$inde,_meta$fileUris$index,_manifest2$extra,_manifest2$extra$expo;if(assetMapOverride&&assetMapOverride.hasOwnProperty(meta.hash)){meta=_objectSpread(_objectSpread({},meta),assetMapOverride[meta.hash]);}var scale=AssetSourceResolver.pickScale(meta.scales,PixelRatio.get());var index=meta.scales.findIndex(function(s){return s===scale;});var hash=meta.fileHashes?(_meta$fileHashes$inde=meta.fileHashes[index])!=null?_meta$fileHashes$inde:meta.fileHashes[0]:meta.hash;var uri=meta.fileUris?(_meta$fileUris$index=meta.fileUris[index])!=null?_meta$fileUris$index:meta.fileUris[0]:meta.uri;if(uri){return{uri:resolveUri(uri),hash:hash};}var assetUrlOverride=getManifest().assetUrlOverride;if(assetUrlOverride){var _uri=pathJoin(assetUrlOverride,hash);return{uri:resolveUri(_uri),hash:hash};}var fileScale=scale===1?'':`@${scale}x`;var fileExtension=meta.type?`.${encodeURIComponent(meta.type)}`:'';var suffix=`/${encodeURIComponent(meta.name)}${fileScale}${fileExtension}`;var params=new URLSearchParams({platform:\"web\",hash:meta.hash});if(/^https?:\\/\\//.test(meta.httpServerLocation)){var _uri2=meta.httpServerLocation+suffix+'?'+params;return{uri:_uri2,hash:hash};}var manifest2=getManifest2();var devServerUrl=manifest2!=null&&(_manifest2$extra=manifest2.extra)!=null&&(_manifest2$extra$expo=_manifest2$extra.expoGo)!=null&&_manifest2$extra$expo.developer?'http://'+manifest2.extra.expoGo.debuggerHost:getManifest().developer?getManifest().bundleUrl:null;if(devServerUrl){var baseUrl=new URL(meta.httpServerLocation+suffix,devServerUrl);baseUrl.searchParams.set('platform',\"web\");baseUrl.searchParams.set('hash',meta.hash);return{uri:baseUrl.href,hash:hash};}if(NativeModules.ExponentKernel){return{uri:`https://classic-assets.eascdn.net/~assets/${encodeURIComponent(hash)}`,hash:hash};}return{uri:'',hash:hash};}export function resolveUri(uri){return manifestBaseUrl?new URL(uri,manifestBaseUrl).href:uri;}export function pathJoin(){for(var _len=arguments.length,paths=new Array(_len),_key=0;_key<_len;_key++){paths[_key]=arguments[_key];}var combined=paths.map(function(part,index){if(index===0){return part.trim().replace(/\\/*$/,'');}return part.trim().replace(/(^\\/*|\\/*$)/g,'');}).filter(function(part){return part.length>0;}).join('/').split('/');var resolved=[];for(var part of combined){if(part==='..'){resolved.pop();}else if(part!=='.'){resolved.push(part);}}return resolved.join('/');}","map":{"version":3,"names":["Platform","PixelRatio","NativeModules","AssetSourceResolver","getManifest","getManifest2","manifestBaseUrl","assetMapOverride","selectAssetSource","meta","_meta$fileHashes$inde","_meta$fileUris$index","_manifest2$extra","_manifest2$extra$expo","hasOwnProperty","hash","_objectSpread","scale","pickScale","scales","get","index","findIndex","s","fileHashes","uri","fileUris","resolveUri","assetUrlOverride","pathJoin","fileScale","fileExtension","type","encodeURIComponent","suffix","name","params","URLSearchParams","platform","test","httpServerLocation","manifest2","devServerUrl","extra","expoGo","developer","debuggerHost","bundleUrl","baseUrl","URL","searchParams","set","href","ExponentKernel","_len","arguments","length","paths","Array","_key","combined","map","part","trim","replace","filter","join","split","resolved","pop","push"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\expo-asset\\src\\AssetSources.ts"],"sourcesContent":["import type { PackagerAsset } from '@react-native/assets-registry/registry';\nimport { Platform } from 'expo-modules-core';\nimport { PixelRatio, NativeModules } from 'react-native';\n\nimport AssetSourceResolver from './AssetSourceResolver';\nimport { getManifest, getManifest2, manifestBaseUrl } from './PlatformUtils';\n\n// @docsMissing\nexport type AssetMetadata = Pick<\n  PackagerAsset,\n  'httpServerLocation' | 'name' | 'hash' | 'type' | 'scales' | 'width' | 'height'\n> & {\n  uri?: string;\n  fileHashes?: string[];\n  fileUris?: string[];\n};\n\nexport type AssetSource = {\n  uri: string;\n  hash: string;\n};\n\n// Fast lookup check if asset map has any overrides in the manifest.\n// This value will always be either null or an absolute URL, e.g. `https://expo.dev/`\nconst assetMapOverride = getManifest().assetMapOverride;\n\n/**\n * Selects the best file for the given asset (ex: choosing the best scale for images) and returns\n * a { uri, hash } pair for the specific asset file.\n *\n * If the asset isn't an image with multiple scales, the first file is selected.\n */\nexport function selectAssetSource(meta: AssetMetadata): AssetSource {\n  // Override with the asset map in manifest if available\n  if (assetMapOverride && assetMapOverride.hasOwnProperty(meta.hash)) {\n    meta = { ...meta, ...assetMapOverride[meta.hash] };\n  }\n\n  // This logic is based on that of AssetSourceResolver, with additional support for file hashes and\n  // explicitly provided URIs\n  const scale = AssetSourceResolver.pickScale(meta.scales, PixelRatio.get());\n  const index = meta.scales.findIndex((s) => s === scale);\n  const hash = meta.fileHashes ? meta.fileHashes[index] ?? meta.fileHashes[0] : meta.hash;\n\n  // Allow asset processors to directly provide the URL to load\n  const uri = meta.fileUris ? meta.fileUris[index] ?? meta.fileUris[0] : meta.uri;\n  if (uri) {\n    return { uri: resolveUri(uri), hash };\n  }\n\n  // Check if the assetUrl was overridden in the manifest\n  const assetUrlOverride = getManifest().assetUrlOverride;\n  if (assetUrlOverride) {\n    const uri = pathJoin(assetUrlOverride, hash);\n    return { uri: resolveUri(uri), hash };\n  }\n\n  const fileScale = scale === 1 ? '' : `@${scale}x`;\n  const fileExtension = meta.type ? `.${encodeURIComponent(meta.type)}` : '';\n  const suffix = `/${encodeURIComponent(meta.name)}${fileScale}${fileExtension}`;\n  const params = new URLSearchParams({\n    platform: Platform.OS,\n    hash: meta.hash,\n  });\n\n  // For assets with a specified absolute URL, we use the existing origin instead of prepending the\n  // development server or production CDN URL origin\n  if (/^https?:\\/\\//.test(meta.httpServerLocation)) {\n    const uri = meta.httpServerLocation + suffix + '?' + params;\n    return { uri, hash };\n  }\n\n  // For assets during development using manifest2, we use the development server's URL origin\n  const manifest2 = getManifest2();\n\n  const devServerUrl = manifest2?.extra?.expoGo?.developer\n    ? 'http://' + manifest2.extra.expoGo.debuggerHost\n    : // For assets during development, we use the development server's URL origin\n    getManifest().developer\n    ? getManifest().bundleUrl\n    : null;\n  if (devServerUrl) {\n    const baseUrl = new URL(meta.httpServerLocation + suffix, devServerUrl);\n\n    baseUrl.searchParams.set('platform', Platform.OS);\n    baseUrl.searchParams.set('hash', meta.hash);\n    return {\n      uri: baseUrl.href,\n      hash,\n    };\n  }\n\n  // Temporary fallback for loading assets in Expo Go home\n  if (NativeModules.ExponentKernel) {\n    return { uri: `https://classic-assets.eascdn.net/~assets/${encodeURIComponent(hash)}`, hash };\n  }\n\n  // In correctly configured apps, we arrive here if the asset is locally available on disk due to\n  // being managed by expo-updates, and `getLocalAssetUri(hash)` must return a local URI for this\n  // hash. Since the asset is local, we don't have a remote URL and specify an invalid URL (an empty\n  // string) as a placeholder.\n  return { uri: '', hash };\n}\n\n/**\n * Resolves the given URI to an absolute URI. If the given URI is already an absolute URI, it is\n * simply returned. Otherwise, if it is a relative URI, it is resolved relative to the manifest's\n * base URI.\n */\nexport function resolveUri(uri: string): string {\n  // `manifestBaseUrl` is always an absolute URL or `null`.\n  return manifestBaseUrl ? new URL(uri, manifestBaseUrl).href : uri;\n}\n\n// A very cheap path canonicalization like path.join but without depending on a `path` polyfill.\nexport function pathJoin(...paths: string[]): string {\n  // Start by simply combining paths, without worrying about \"..\" or \".\"\n  const combined = paths\n    .map((part, index) => {\n      if (index === 0) {\n        return part.trim().replace(/\\/*$/, '');\n      }\n      return part.trim().replace(/(^\\/*|\\/*$)/g, '');\n    })\n    .filter((part) => part.length > 0)\n    .join('/')\n    .split('/');\n\n  // Handle \"..\" and \".\" in paths\n  const resolved: string[] = [];\n  for (const part of combined) {\n    if (part === '..') {\n      resolved.pop(); // Remove the last element from the result\n    } else if (part !== '.') {\n      resolved.push(part);\n    }\n  }\n\n  return resolved.join('/');\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}