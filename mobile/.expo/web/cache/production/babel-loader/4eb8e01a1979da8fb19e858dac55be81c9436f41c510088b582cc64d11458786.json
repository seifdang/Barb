{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"style\",\"variant\",\"theme\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import I18nManager from\"react-native-web/dist/exports/I18nManager\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import NativeText from\"react-native-web/dist/exports/Text\";import AnimatedText from'./AnimatedText';import StyledText from'./v2/StyledText';import{useInternalTheme}from'../../core/theming';import{forwardRef}from'../../utils/forwardRef';var Text=function Text(_ref,ref){var style=_ref.style,variant=_ref.variant,initialTheme=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var root=React.useRef(null);var theme=useInternalTheme(initialTheme);var writingDirection=I18nManager.getConstants().isRTL?'rtl':'ltr';React.useImperativeHandle(ref,function(){return{setNativeProps:function setNativeProps(args){var _root$current;return(_root$current=root.current)===null||_root$current===void 0?void 0:_root$current.setNativeProps(args);}};});if(theme.isV3&&variant){var font=theme.fonts[variant];var textStyle=[font,style];if(React.isValidElement(rest.children)&&(rest.children.type===Component||rest.children.type===AnimatedText||rest.children.type===StyledText)){var props=rest.children.props;if(props.variant){font=theme.fonts[props.variant];textStyle=[style,font];}if(!props.variant){textStyle=[style,props.style];}}if(typeof font!=='object'){throw new Error(`Variant ${variant} was not provided properly. Valid variants are ${Object.keys(theme.fonts).join(', ')}.`);}return React.createElement(NativeText,_extends({ref:root,style:[styles.text,{writingDirection:writingDirection,color:theme.colors.onSurface},textStyle]},rest));}else{var _theme$fonts,_theme$colors;var _font=theme.isV3?theme.fonts.default:(_theme$fonts=theme.fonts)===null||_theme$fonts===void 0?void 0:_theme$fonts.regular;var _textStyle=_objectSpread(_objectSpread({},_font),{},{color:theme.isV3?(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.onSurface:theme.colors.text});return React.createElement(NativeText,_extends({},rest,{ref:root,style:[styles.text,_textStyle,{writingDirection:writingDirection},style]}));}};var styles=StyleSheet.create({text:{textAlign:'left'}});var Component=forwardRef(Text);export var customText=function customText(){return Component;};export default Component;","map":{"version":3,"names":["React","I18nManager","StyleSheet","NativeText","AnimatedText","StyledText","useInternalTheme","forwardRef","Text","_ref","ref","style","variant","initialTheme","theme","rest","_objectWithoutProperties","_excluded","root","useRef","writingDirection","getConstants","isRTL","useImperativeHandle","setNativeProps","args","_root$current","current","isV3","font","fonts","textStyle","isValidElement","children","type","Component","props","Error","Object","keys","join","createElement","_extends","styles","text","color","colors","onSurface","_theme$fonts","_theme$colors","default","regular","_objectSpread","create","textAlign","customText"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\react-native-paper\\src\\components\\Typography\\Text.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n  Text as NativeText,\n  TextStyle,\n} from 'react-native';\n\nimport AnimatedText from './AnimatedText';\nimport type { VariantProp } from './types';\nimport StyledText from './v2/StyledText';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport { forwardRef } from '../../utils/forwardRef';\n\nexport type Props<T> = React.ComponentProps<typeof NativeText> & {\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  variant?: VariantProp<T>;\n  children: React.ReactNode;\n  theme?: ThemeProp;\n  style?: StyleProp<TextStyle>;\n};\n\nexport type TextRef = React.ForwardedRef<{\n  setNativeProps(args: Object): void;\n}>;\n\n// @component-group Typography\n\n/**\n * Typography component showing styles complied with passed `variant` prop and supported by the type system.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <>\n *     <Text variant=\"displayLarge\">Display Large</Text>\n *     <Text variant=\"displayMedium\">Display Medium</Text>\n *     <Text variant=\"displaySmall\">Display small</Text>\n *\n *     <Text variant=\"headlineLarge\">Headline Large</Text>\n *     <Text variant=\"headlineMedium\">Headline Medium</Text>\n *     <Text variant=\"headlineSmall\">Headline Small</Text>\n *\n *     <Text variant=\"titleLarge\">Title Large</Text>\n *     <Text variant=\"titleMedium\">Title Medium</Text>\n *     <Text variant=\"titleSmall\">Title Small</Text>\n *\n *     <Text variant=\"bodyLarge\">Body Large</Text>\n *     <Text variant=\"bodyMedium\">Body Medium</Text>\n *     <Text variant=\"bodySmall\">Body Small</Text>\n *\n *     <Text variant=\"labelLarge\">Label Large</Text>\n *     <Text variant=\"labelMedium\">Label Medium</Text>\n *     <Text variant=\"labelSmall\">Label Small</Text>\n *  </>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nconst Text = (\n  { style, variant, theme: initialTheme, ...rest }: Props<string>,\n  ref: TextRef\n) => {\n  const root = React.useRef<NativeText | null>(null);\n  // FIXME: destructure it in TS 4.6+\n  const theme = useInternalTheme(initialTheme);\n  const writingDirection = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr';\n\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n  }));\n\n  if (theme.isV3 && variant) {\n    let font = theme.fonts[variant];\n    let textStyle = [font, style];\n\n    if (\n      React.isValidElement(rest.children) &&\n      (rest.children.type === Component ||\n        rest.children.type === AnimatedText ||\n        rest.children.type === StyledText)\n    ) {\n      const { props } = rest.children;\n\n      // Context:   Some components have the built-in `Text` component with a predefined variant,\n      //            that also accepts `children` as a `React.Node`. This can result in a situation,\n      //            where another `Text` component is rendered within the built-in `Text` component.\n      //            By doing that, we assume that user doesn't want to consume pre-defined font properties.\n      // Case one:  Nested `Text` has different `variant` that specified in parent. For example:\n      //              <Chip>\n      //                <Text variant=\"displayMedium\">Nested</Text>\n      //              </Chip>\n      // Solution:  To address the following scenario, the code below overrides the `variant`\n      //            specified in a parent in favor of children's variant:\n      if (props.variant) {\n        font = theme.fonts[props.variant as VariantProp<typeof props.variant>];\n        textStyle = [style, font];\n      }\n\n      // Case two:  Nested `Text` has specified `styles` which intefere\n      //            with font properties, from the parent's `variant`. For example:\n      //              <Chip>\n      //                <Text style={{fontSize: 30}}>Nested</Text>\n      //              </Chip>\n      // Solution:  To address the following scenario, the code below overrides the\n      //            parent's style with children's style:\n      if (!props.variant) {\n        textStyle = [style, props.style];\n      }\n    }\n\n    if (typeof font !== 'object') {\n      throw new Error(\n        `Variant ${variant} was not provided properly. Valid variants are ${Object.keys(\n          theme.fonts\n        ).join(', ')}.`\n      );\n    }\n\n    return (\n      <NativeText\n        ref={root}\n        style={[\n          styles.text,\n          { writingDirection, color: theme.colors.onSurface },\n          textStyle,\n        ]}\n        {...rest}\n      />\n    );\n  } else {\n    const font = theme.isV3 ? theme.fonts.default : theme.fonts?.regular;\n    const textStyle = {\n      ...font,\n      color: theme.isV3 ? theme.colors?.onSurface : theme.colors.text,\n    };\n    return (\n      <NativeText\n        {...rest}\n        ref={root}\n        style={[styles.text, textStyle, { writingDirection }, style]}\n      />\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\ntype TextComponent<T> = (\n  props: Props<T> & { ref?: React.RefObject<TextRef> }\n) => JSX.Element;\n\nconst Component = forwardRef(Text) as TextComponent<never>;\n\nexport const customText = <T,>() => Component as unknown as TextComponent<T>;\n\nexport default Component;\n"],"mappings":"ylCAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,WAAA,wDAAAC,UAAA,uDAAAC,UAAA,0CAS9B,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CAEzC,MAAO,CAAAC,UAAU,KAAM,iBAAiB,CACxC,OAASC,gBAAgB,KAAQ,oBAAoB,CAErD,OAASC,UAAU,KAAQ,wBAAwB,CAoEnD,GAAM,CAAAC,IAAI,CAAG,QAAP,CAAAA,IAAIA,CAAGC,IAAA,CAEXC,GAAY,CACT,IAFD,CAAAC,KAAK,CAAwDF,IAAA,CAA7DE,KAAK,CAAEC,OAAO,CAA+CH,IAAA,CAAtDG,OAAO,CAASC,YAAY,CAA0BJ,IAAA,CAA7CK,KAAK,CAAmBC,IAAA,CAAAC,wBAAA,CAAqBP,IAAA,CAAAQ,SAAA,EAG/D,GAAM,CAAAC,IAAI,CAAGlB,KAAK,CAACmB,MAAM,CAAoB,IAAI,CAAC,CAElD,GAAM,CAAAL,KAAK,CAAGR,gBAAgB,CAACO,YAAY,CAAC,CAC5C,GAAM,CAAAO,gBAAgB,CAAGnB,WAAW,CAACoB,YAAY,CAAC,CAAC,CAACC,KAAK,CAAG,KAAK,CAAG,KAAK,CAEzEtB,KAAK,CAACuB,mBAAmB,CAACb,GAAG,CAAE,iBAAO,CACpCc,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAGC,IAAY,MAAAC,aAAA,QAAAA,aAAA,CAAKR,IAAI,CAACS,OAAO,UAAAD,aAAA,iBAAZA,aAAA,CAAcF,cAAc,CAACC,IAAI,CAAC,EACtE,CAAC,EAAC,CAAC,CAEH,GAAIX,KAAK,CAACc,IAAI,EAAIhB,OAAO,CAAE,CACzB,GAAI,CAAAiB,IAAI,CAAGf,KAAK,CAACgB,KAAK,CAAClB,OAAO,CAAC,CAC/B,GAAI,CAAAmB,SAAS,CAAG,CAACF,IAAI,CAAElB,KAAK,CAAC,CAE7B,GACEX,KAAK,CAACgC,cAAc,CAACjB,IAAI,CAACkB,QAAQ,CAAC,GAClClB,IAAI,CAACkB,QAAQ,CAACC,IAAI,GAAKC,SAAS,EAC/BpB,IAAI,CAACkB,QAAQ,CAACC,IAAI,GAAK9B,YAAY,EACnCW,IAAI,CAACkB,QAAQ,CAACC,IAAI,GAAK7B,UAAU,CAAC,CACpC,CACA,GAAQ,CAAA+B,KAAA,CAAUrB,IAAI,CAACkB,QAAQ,CAAvBG,KAAA,CAYR,GAAIA,KAAK,CAACxB,OAAO,CAAE,CACjBiB,IAAI,CAAGf,KAAK,CAACgB,KAAK,CAACM,KAAK,CAACxB,OAAO,CAAsC,CACtEmB,SAAS,CAAG,CAACpB,KAAK,CAAEkB,IAAI,CAAC,CAC3B,CASA,GAAI,CAACO,KAAK,CAACxB,OAAO,CAAE,CAClBmB,SAAS,CAAG,CAACpB,KAAK,CAAEyB,KAAK,CAACzB,KAAK,CAAC,CAClC,CACF,CAEA,GAAI,MAAO,CAAAkB,IAAI,GAAK,QAAQ,CAAE,CAC5B,KAAM,IAAI,CAAAQ,KAAK,CACZ,WAAUzB,OAAQ,kDAAiD0B,MAAM,CAACC,IAAI,CAC7EzB,KAAK,CAACgB,KACR,CAAC,CAACU,IAAI,CAAC,IAAI,CAAE,GACf,CAAC,CACH,CAEA,MACE,CAAAxC,KAAA,CAAAyC,aAAA,CAACtC,UAAU,CAAAuC,QAAA,EACThC,GAAG,CAAEQ,IAAK,CACVP,KAAK,CAAE,CACLgC,MAAM,CAACC,IAAI,CACX,CAAExB,gBAAgB,CAAhBA,gBAAgB,CAAEyB,KAAK,CAAE/B,KAAK,CAACgC,MAAM,CAACC,SAAU,CAAC,CACnDhB,SAAS,CACT,EACEhB,IAAI,CACT,CAAC,CAEN,CAAC,IAAM,KAAAiC,YAAA,CAAAC,aAAA,CACL,GAAM,CAAApB,KAAI,CAAGf,KAAK,CAACc,IAAI,CAAGd,KAAK,CAACgB,KAAK,CAACoB,OAAO,EAAAF,YAAA,CAAGlC,KAAK,CAACgB,KAAK,UAAAkB,YAAA,iBAAXA,YAAA,CAAaG,OAAO,CACpE,GAAM,CAAApB,UAAS,CAAAqB,aAAA,CAAAA,aAAA,IACVvB,KAAI,MACPgB,KAAK,CAAE/B,KAAK,CAACc,IAAI,EAAAqB,aAAA,CAAGnC,KAAK,CAACgC,MAAM,UAAAG,aAAA,iBAAZA,aAAA,CAAcF,SAAS,CAAGjC,KAAK,CAACgC,MAAM,CAACF,IAAA,EAC5D,CACD,MACE,CAAA5C,KAAA,CAAAyC,aAAA,CAACtC,UAAU,CAAAuC,QAAA,IACL3B,IAAI,EACRL,GAAG,CAAEQ,IAAK,CACVP,KAAK,CAAE,CAACgC,MAAM,CAACC,IAAI,CAAEb,UAAS,CAAE,CAAEX,gBAAA,CAAAA,gBAAiB,CAAC,CAAET,KAAK,CAAE,EAC9D,CAAC,CAEN,CACF,CAAC,CAED,GAAM,CAAAgC,MAAM,CAAGzC,UAAU,CAACmD,MAAM,CAAC,CAC/BT,IAAI,CAAE,CACJU,SAAS,CAAE,MACb,CACF,CAAC,CAAC,CAMF,GAAM,CAAAnB,SAAS,CAAG5B,UAAU,CAACC,IAAI,CAAyB,CAE1D,MAAO,IAAM,CAAA+C,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,QAAa,CAAApB,SAAwC,GAE5E,cAAe,CAAAA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}