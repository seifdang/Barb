{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"name\",\"color\",\"size\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import Platform from\"react-native-web/dist/exports/Platform\";import{black}from'../styles/themes/v2/colors';var MaterialCommunityIcons;try{MaterialCommunityIcons=require('react-native-vector-icons/MaterialCommunityIcons').default;}catch(e){var isErrorLogged=false;MaterialCommunityIcons=function MaterialCommunityIcons(_ref){var name=_ref.name,color=_ref.color,size=_ref.size,rest=_objectWithoutProperties(_ref,_excluded);if(!isErrorLogged){if(!/(Cannot find module|Module not found|Cannot resolve module)/.test(e.message)){console.error(e);}console.warn(`Tried to use the icon '${name}' in a component from 'react-native-paper', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`,`To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/docs/guides/icons`);isErrorLogged=true;}return React.createElement(Text,_extends({},rest,{style:[styles.icon,{color:color,fontSize:size}],pointerEvents:\"none\",selectable:false}),\"\\u25A1\");};}export var accessibilityProps=\"web\"==='web'?{role:'img',focusable:false}:{accessibilityElementsHidden:true,importantForAccessibility:'no-hide-descendants'};var defaultIcon=function defaultIcon(_ref2){var name=_ref2.name,_ref2$color=_ref2.color,color=_ref2$color===void 0?black:_ref2$color,size=_ref2.size,direction=_ref2.direction,allowFontScaling=_ref2.allowFontScaling,testID=_ref2.testID;return React.createElement(MaterialCommunityIcons,_extends({allowFontScaling:allowFontScaling,name:name,color:color,size:size,style:[{transform:[{scaleX:direction==='rtl'?-1:1}],lineHeight:size},styles.icon],pointerEvents:\"none\",selectable:false,testID:testID},accessibilityProps));};var styles=StyleSheet.create({icon:{backgroundColor:'transparent'}});export default defaultIcon;","map":{"version":3,"names":["React","StyleSheet","Text","Platform","black","MaterialCommunityIcons","require","default","e","isErrorLogged","_ref","name","color","size","rest","_objectWithoutProperties","_excluded","test","message","console","error","warn","createElement","_extends","style","styles","icon","fontSize","pointerEvents","selectable","accessibilityProps","role","focusable","accessibilityElementsHidden","importantForAccessibility","defaultIcon","_ref2","_ref2$color","direction","allowFontScaling","testID","transform","scaleX","lineHeight","create","backgroundColor"],"sources":["C:\\Users\\User\\Downloads\\git_frontend\\mobile\\node_modules\\react-native-paper\\src\\components\\MaterialCommunityIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, Platform, ViewProps, Role } from 'react-native';\n\nimport { black } from '../styles/themes/v2/colors';\n\nexport type IconProps = {\n  name: string;\n  color?: string;\n  size: number;\n  direction: 'rtl' | 'ltr';\n  allowFontScaling?: boolean;\n  testID?: string;\n};\n\ntype AccessibilityProps =\n  | {\n      role?: Role;\n      focusable?: boolean;\n    }\n  | {\n      accessibilityElementsHidden?: boolean;\n      importantForAccessibility?: 'auto' | 'yes' | 'no' | 'no-hide-descendants';\n    };\n\nlet MaterialCommunityIcons: React.ComponentType<\n  React.ComponentProps<\n    typeof import('react-native-vector-icons/MaterialCommunityIcons').default\n  > & {\n    color: string;\n    pointerEvents?: ViewProps['pointerEvents'];\n  }\n>;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons =\n    require('react-native-vector-icons/MaterialCommunityIcons').default;\n} catch (e) {\n  let isErrorLogged = false;\n\n  // Fallback component for icons\n  MaterialCommunityIcons = ({ name, color, size, ...rest }) => {\n    /* eslint-disable no-console */\n    if (!isErrorLogged) {\n      if (\n        !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n          (e as any).message\n        )\n      ) {\n        console.error(e);\n      }\n\n      console.warn(\n        `Tried to use the icon '${name}' in a component from 'react-native-paper', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`,\n        `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/docs/guides/icons`\n      );\n\n      isErrorLogged = true;\n    }\n\n    return (\n      <Text\n        {...rest}\n        style={[styles.icon, { color, fontSize: size }]}\n        // @ts-expect-error: Text doesn't support this, but it seems to affect TouchableNativeFeedback\n        pointerEvents=\"none\"\n        selectable={false}\n      >\n        â–¡\n      </Text>\n    );\n  };\n}\n\nexport const accessibilityProps: AccessibilityProps =\n  Platform.OS === 'web'\n    ? {\n        role: 'img',\n        focusable: false,\n      }\n    : {\n        accessibilityElementsHidden: true,\n        importantForAccessibility:\n          'no-hide-descendants' as 'no-hide-descendants',\n      };\n\nconst defaultIcon = ({\n  name,\n  color = black,\n  size,\n  direction,\n  allowFontScaling,\n  testID,\n}: IconProps) => (\n  <MaterialCommunityIcons\n    allowFontScaling={allowFontScaling}\n    name={name}\n    color={color}\n    size={size}\n    style={[\n      {\n        transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\n        lineHeight: size,\n      },\n      styles.icon,\n    ]}\n    pointerEvents=\"none\"\n    selectable={false}\n    testID={testID}\n    {...accessibilityProps}\n  />\n);\n\nconst styles = StyleSheet.create({\n  // eslint-disable-next-line react-native/no-color-literals\n  icon: {\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default defaultIcon;\n"],"mappings":"saAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,UAAA,uDAAAC,IAAA,iDAAAC,QAAA,8CAG9B,OAASC,KAAK,KAAQ,4BAA4B,CAqBlD,GAAI,CAAAC,sBAOH,CAED,GAAI,CAEFA,sBAAsB,CACpBC,OAAO,CAAC,kDAAkD,CAAC,CAACC,OAAO,CACvE,CAAE,MAAOC,CAAC,CAAE,CACV,GAAI,CAAAC,aAAa,CAAG,KAAK,CAGzBJ,sBAAsB,CAAG,QAAzB,CAAAA,sBAAsBA,CAAGK,IAAA,CAAoC,IAAjC,CAAAC,IAAI,CAAwBD,IAAA,CAA5BC,IAAI,CAAEC,KAAK,CAAiBF,IAAA,CAAtBE,KAAK,CAAEC,IAAI,CAAWH,IAAA,CAAfG,IAAI,CAAKC,IAAA,CAAAC,wBAAA,CAAML,IAAA,CAAAM,SAAA,EAEtD,GAAI,CAACP,aAAa,CAAE,CAClB,GACE,CAAC,6DAA6D,CAACQ,IAAI,CAChET,CAAC,CAASU,OACb,CAAC,CACD,CACAC,OAAO,CAACC,KAAK,CAACZ,CAAC,CAAC,CAClB,CAEAW,OAAO,CAACE,IAAI,CACT,0BAAyBV,IAAK,yHAAwH,CACtJ,4KACH,CAAC,CAEDF,aAAa,CAAG,IAAI,CACtB,CAEA,MACE,CAAAT,KAAA,CAAAsB,aAAA,CAACpB,IAAI,CAAAqB,QAAA,IACCT,IAAI,EACRU,KAAK,CAAE,CAACC,MAAM,CAACC,IAAI,CAAE,CAAEd,KAAK,CAALA,KAAK,CAAEe,QAAQ,CAAEd,IAAK,CAAC,EAE9Ce,aAAa,CAAC,MAAM,CACpBC,UAAU,CAAE,KAAM,GACnB,QAEK,CAAC,CAEX,CAAC,CACH,CAEA,MAAO,IAAM,CAAAC,kBAAsC,CACjD,QAAgB,KAAK,CACjB,CACEC,IAAI,CAAE,KAAK,CACXC,SAAS,CAAE,KACb,CAAC,CACD,CACEC,2BAA2B,CAAE,IAAI,CACjCC,yBAAyB,CACvB,qBACJ,CAAC,CAEP,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAGC,KAAA,KAClB,CAAAzB,IAAI,CAMMyB,KAAA,CANVzB,IAAI,CAAA0B,WAAA,CAMMD,KAAA,CALVxB,KAAK,CAALA,KAAK,CAAAyB,WAAA,UAAGjC,KAAK,CAAAiC,WAAA,CACbxB,IAAI,CAIMuB,KAAA,CAJVvB,IAAI,CACJyB,SAAS,CAGCF,KAAA,CAHVE,SAAS,CACTC,gBAAgB,CAENH,KAAA,CAFVG,gBAAgB,CAChBC,MAAA,CACUJ,KAAA,CADVI,MAAA,CACU,MACV,CAAAxC,KAAA,CAAAsB,aAAA,CAACjB,sBAAsB,CAAAkB,QAAA,EACrBgB,gBAAgB,CAAEA,gBAAiB,CACnC5B,IAAI,CAAEA,IAAK,CACXC,KAAK,CAAEA,KAAM,CACbC,IAAI,CAAEA,IAAK,CACXW,KAAK,CAAE,CACL,CACEiB,SAAS,CAAE,CAAC,CAAEC,MAAM,CAAEJ,SAAS,GAAK,KAAK,CAAG,CAAC,CAAC,CAAG,CAAE,CAAC,CAAC,CACrDK,UAAU,CAAE9B,IACd,CAAC,CACDY,MAAM,CAACC,IAAI,CACX,CACFE,aAAa,CAAC,MAAM,CACpBC,UAAU,CAAE,KAAM,CAClBW,MAAM,CAAEA,MAAO,EACXV,kBAAkB,CACvB,CAAC,EACH,CAED,GAAM,CAAAL,MAAM,CAAGxB,UAAU,CAAC2C,MAAM,CAAC,CAE/BlB,IAAI,CAAE,CACJmB,eAAe,CAAE,aACnB,CACF,CAAC,CAAC,CAEF,cAAe,CAAAV,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}